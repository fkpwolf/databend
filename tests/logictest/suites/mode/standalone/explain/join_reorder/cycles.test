statement ok
create database join_reorder

statement ok
use join_reorder

statement ok
create table t as select number as a from numbers(1)

statement ok
create table t1 as select number as a from numbers(10)

statement ok
create table t2 as select number as a from numbers(100)

query T
explain select * from t, t1, t2 where t.a = t1.a and t1.a = t2.a and t2.a = t.a
----
HashJoin
├── join type: INNER
├── build keys: [t1.a (#1), t.a (#0)]
├── probe keys: [t2.a (#2), t2.a (#2)]
├── filters: []
├── HashJoin(Build)
│   ├── join type: INNER
│   ├── build keys: [t.a (#0)]
│   ├── probe keys: [t1.a (#1)]
│   ├── filters: []
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── read rows: 1
│   │   ├── read bytes: 31
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   └── push downs: [filters: [], limit: NONE]
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── read rows: 10
│       ├── read bytes: 68
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       └── push downs: [filters: [], limit: NONE]
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── read rows: 100
    ├── read bytes: 431
    ├── partitions total: 1
    ├── partitions scanned: 1
    └── push downs: [filters: [], limit: NONE]

query T
explain select * from t, t2, t1 where t.a = t1.a and t1.a = t2.a and t2.a = t.a
----
HashJoin
├── join type: INNER
├── build keys: [t1.a (#2), t.a (#0)]
├── probe keys: [t2.a (#1), t2.a (#1)]
├── filters: []
├── HashJoin(Build)
│   ├── join type: INNER
│   ├── build keys: [t.a (#0)]
│   ├── probe keys: [t1.a (#2)]
│   ├── filters: []
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── read rows: 1
│   │   ├── read bytes: 31
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   └── push downs: [filters: [], limit: NONE]
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── read rows: 10
│       ├── read bytes: 68
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       └── push downs: [filters: [], limit: NONE]
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── read rows: 100
    ├── read bytes: 431
    ├── partitions total: 1
    ├── partitions scanned: 1
    └── push downs: [filters: [], limit: NONE]

query T
explain select * from t1, t, t2 where t.a = t1.a and t1.a = t2.a and t2.a = t.a
----
HashJoin
├── join type: INNER
├── build keys: [t1.a (#0), t.a (#1)]
├── probe keys: [t2.a (#2), t2.a (#2)]
├── filters: []
├── HashJoin(Build)
│   ├── join type: INNER
│   ├── build keys: [t.a (#1)]
│   ├── probe keys: [t1.a (#0)]
│   ├── filters: []
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── read rows: 1
│   │   ├── read bytes: 31
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   └── push downs: [filters: [], limit: NONE]
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── read rows: 10
│       ├── read bytes: 68
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       └── push downs: [filters: [], limit: NONE]
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── read rows: 100
    ├── read bytes: 431
    ├── partitions total: 1
    ├── partitions scanned: 1
    └── push downs: [filters: [], limit: NONE]

query T
explain select * from t1, t2, t where t.a = t1.a and t1.a = t2.a and t2.a = t.a
----
HashJoin
├── join type: INNER
├── build keys: [t.a (#2), t1.a (#0)]
├── probe keys: [t2.a (#1), t2.a (#1)]
├── filters: []
├── HashJoin(Build)
│   ├── join type: INNER
│   ├── build keys: [t.a (#2)]
│   ├── probe keys: [t1.a (#0)]
│   ├── filters: []
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── read rows: 1
│   │   ├── read bytes: 31
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   └── push downs: [filters: [], limit: NONE]
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── read rows: 10
│       ├── read bytes: 68
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       └── push downs: [filters: [], limit: NONE]
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── read rows: 100
    ├── read bytes: 431
    ├── partitions total: 1
    ├── partitions scanned: 1
    └── push downs: [filters: [], limit: NONE]

query T
explain select * from t2, t1, t where t.a = t1.a and t1.a = t2.a and t2.a = t.a
----
HashJoin
├── join type: INNER
├── build keys: [t.a (#2), t1.a (#1)]
├── probe keys: [t2.a (#0), t2.a (#0)]
├── filters: []
├── HashJoin(Build)
│   ├── join type: INNER
│   ├── build keys: [t.a (#2)]
│   ├── probe keys: [t1.a (#1)]
│   ├── filters: []
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── read rows: 1
│   │   ├── read bytes: 31
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   └── push downs: [filters: [], limit: NONE]
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── read rows: 10
│       ├── read bytes: 68
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       └── push downs: [filters: [], limit: NONE]
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── read rows: 100
    ├── read bytes: 431
    ├── partitions total: 1
    ├── partitions scanned: 1
    └── push downs: [filters: [], limit: NONE]

query T
explain select * from t2, t, t1 where t.a = t1.a and t1.a = t2.a and t2.a = t.a
----
HashJoin
├── join type: INNER
├── build keys: [t1.a (#2), t.a (#1)]
├── probe keys: [t2.a (#0), t2.a (#0)]
├── filters: []
├── HashJoin(Build)
│   ├── join type: INNER
│   ├── build keys: [t.a (#1)]
│   ├── probe keys: [t1.a (#2)]
│   ├── filters: []
│   ├── TableScan(Build)
│   │   ├── table: default.join_reorder.t
│   │   ├── read rows: 1
│   │   ├── read bytes: 31
│   │   ├── partitions total: 1
│   │   ├── partitions scanned: 1
│   │   └── push downs: [filters: [], limit: NONE]
│   └── TableScan(Probe)
│       ├── table: default.join_reorder.t1
│       ├── read rows: 10
│       ├── read bytes: 68
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       └── push downs: [filters: [], limit: NONE]
└── TableScan(Probe)
    ├── table: default.join_reorder.t2
    ├── read rows: 100
    ├── read bytes: 431
    ├── partitions total: 1
    ├── partitions scanned: 1
    └── push downs: [filters: [], limit: NONE]

statement ok
drop database join_reorder

