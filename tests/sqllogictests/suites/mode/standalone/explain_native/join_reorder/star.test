statement ok
drop database if exists join_reorder

statement ok
create database join_reorder

statement ok
use join_reorder

statement ok
create table t as select number as a from numbers(1)

statement ok
create table t1 as select number as a from numbers(10)

statement ok
create table t2 as select number as a from numbers(100)

query T
explain select * from t, t1, t2 where t.a = t2.a and t1.a = t2.a
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1), t2.a (#2)]
├── estimated rows: 0.01
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t.a (#0)]
    ├── probe keys: [t2.a (#2)]
    ├── filters: []
    ├── estimated rows: 0.01
    ├── TableScan(Build)
    │   ├── table: default.join_reorder.t
    │   ├── read rows: 1
    │   ├── read bytes: 18
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 1.00
    └── HashJoin(Probe)
        ├── join type: INNER
        ├── build keys: [t1.a (#1)]
        ├── probe keys: [t2.a (#2)]
        ├── filters: []
        ├── estimated rows: 0.01
        ├── TableScan(Build)
        │   ├── table: default.join_reorder.t1
        │   ├── read rows: 10
        │   ├── read bytes: 54
        │   ├── partitions total: 1
        │   ├── partitions scanned: 1
        │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │   ├── push downs: [filters: [], limit: NONE]
        │   └── estimated rows: 10.00
        └── TableScan(Probe)
            ├── table: default.join_reorder.t2
            ├── read rows: 100
            ├── read bytes: 414
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 100.00

query T
explain select * from t, t2, t1 where t.a = t2.a and t1.a = t2.a
----
EvalScalar
├── expressions: [t.a (#0), t2.a (#1), t1.a (#2)]
├── estimated rows: 0.01
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t.a (#0)]
    ├── probe keys: [t2.a (#1)]
    ├── filters: []
    ├── estimated rows: 0.01
    ├── TableScan(Build)
    │   ├── table: default.join_reorder.t
    │   ├── read rows: 1
    │   ├── read bytes: 18
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 1.00
    └── HashJoin(Probe)
        ├── join type: INNER
        ├── build keys: [t1.a (#2)]
        ├── probe keys: [t2.a (#1)]
        ├── filters: []
        ├── estimated rows: 0.01
        ├── TableScan(Build)
        │   ├── table: default.join_reorder.t1
        │   ├── read rows: 10
        │   ├── read bytes: 54
        │   ├── partitions total: 1
        │   ├── partitions scanned: 1
        │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │   ├── push downs: [filters: [], limit: NONE]
        │   └── estimated rows: 10.00
        └── TableScan(Probe)
            ├── table: default.join_reorder.t2
            ├── read rows: 100
            ├── read bytes: 414
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 100.00

query T
explain select * from t1, t, t2 where t.a = t2.a and t1.a = t2.a
----
EvalScalar
├── expressions: [t1.a (#0), t.a (#1), t2.a (#2)]
├── estimated rows: 0.01
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t.a (#1)]
    ├── probe keys: [t2.a (#2)]
    ├── filters: []
    ├── estimated rows: 0.01
    ├── TableScan(Build)
    │   ├── table: default.join_reorder.t
    │   ├── read rows: 1
    │   ├── read bytes: 18
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 1.00
    └── HashJoin(Probe)
        ├── join type: INNER
        ├── build keys: [t1.a (#0)]
        ├── probe keys: [t2.a (#2)]
        ├── filters: []
        ├── estimated rows: 0.01
        ├── TableScan(Build)
        │   ├── table: default.join_reorder.t1
        │   ├── read rows: 10
        │   ├── read bytes: 54
        │   ├── partitions total: 1
        │   ├── partitions scanned: 1
        │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │   ├── push downs: [filters: [], limit: NONE]
        │   └── estimated rows: 10.00
        └── TableScan(Probe)
            ├── table: default.join_reorder.t2
            ├── read rows: 100
            ├── read bytes: 414
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 100.00

query T
explain select * from t1, t2, t where t.a = t2.a and t1.a = t2.a
----
EvalScalar
├── expressions: [t1.a (#0), t2.a (#1), t.a (#2)]
├── estimated rows: 0.01
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t.a (#2)]
    ├── probe keys: [t2.a (#1)]
    ├── filters: []
    ├── estimated rows: 0.01
    ├── TableScan(Build)
    │   ├── table: default.join_reorder.t
    │   ├── read rows: 1
    │   ├── read bytes: 18
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 1.00
    └── HashJoin(Probe)
        ├── join type: INNER
        ├── build keys: [t1.a (#0)]
        ├── probe keys: [t2.a (#1)]
        ├── filters: []
        ├── estimated rows: 0.01
        ├── TableScan(Build)
        │   ├── table: default.join_reorder.t1
        │   ├── read rows: 10
        │   ├── read bytes: 54
        │   ├── partitions total: 1
        │   ├── partitions scanned: 1
        │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │   ├── push downs: [filters: [], limit: NONE]
        │   └── estimated rows: 10.00
        └── TableScan(Probe)
            ├── table: default.join_reorder.t2
            ├── read rows: 100
            ├── read bytes: 414
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 100.00

query T
explain select * from t2, t1, t where t.a = t2.a and t1.a = t2.a
----
EvalScalar
├── expressions: [t2.a (#0), t1.a (#1), t.a (#2)]
├── estimated rows: 0.01
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t.a (#2)]
    ├── probe keys: [t2.a (#0)]
    ├── filters: []
    ├── estimated rows: 0.01
    ├── TableScan(Build)
    │   ├── table: default.join_reorder.t
    │   ├── read rows: 1
    │   ├── read bytes: 18
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 1.00
    └── HashJoin(Probe)
        ├── join type: INNER
        ├── build keys: [t1.a (#1)]
        ├── probe keys: [t2.a (#0)]
        ├── filters: []
        ├── estimated rows: 0.01
        ├── TableScan(Build)
        │   ├── table: default.join_reorder.t1
        │   ├── read rows: 10
        │   ├── read bytes: 54
        │   ├── partitions total: 1
        │   ├── partitions scanned: 1
        │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │   ├── push downs: [filters: [], limit: NONE]
        │   └── estimated rows: 10.00
        └── TableScan(Probe)
            ├── table: default.join_reorder.t2
            ├── read rows: 100
            ├── read bytes: 414
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 100.00

query T
explain select * from t2, t, t1 where t.a = t2.a and t1.a = t2.a
----
EvalScalar
├── expressions: [t2.a (#0), t.a (#1), t1.a (#2)]
├── estimated rows: 0.01
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t.a (#1)]
    ├── probe keys: [t2.a (#0)]
    ├── filters: []
    ├── estimated rows: 0.01
    ├── TableScan(Build)
    │   ├── table: default.join_reorder.t
    │   ├── read rows: 1
    │   ├── read bytes: 18
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 1.00
    └── HashJoin(Probe)
        ├── join type: INNER
        ├── build keys: [t1.a (#2)]
        ├── probe keys: [t2.a (#0)]
        ├── filters: []
        ├── estimated rows: 0.01
        ├── TableScan(Build)
        │   ├── table: default.join_reorder.t1
        │   ├── read rows: 10
        │   ├── read bytes: 54
        │   ├── partitions total: 1
        │   ├── partitions scanned: 1
        │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │   ├── push downs: [filters: [], limit: NONE]
        │   └── estimated rows: 10.00
        └── TableScan(Probe)
            ├── table: default.join_reorder.t2
            ├── read rows: 100
            ├── read bytes: 414
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 100.00

statement ok
drop database join_reorder
