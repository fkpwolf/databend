statement ok
use default;

statement ok
drop table if exists fold_count;

statement ok
create table fold_count(id array(int), c1 string);

statement ok
insert into fold_count values([1,2,3,4], 'x');

query T
explain select count() from (select unnest(id), c1 from fold_count)
----
EvalScalar
├── expressions: [count() (#4)]
├── estimated rows: 1.00
└── AggregateFinal
    ├── group by: []
    ├── aggregate functions: [count()]
    ├── estimated rows: 1.00
    └── AggregatePartial
        ├── group by: []
        ├── aggregate functions: [count()]
        ├── estimated rows: 1.00
        └── EvalScalar
            ├── expressions: [fold_count.c1 (#1), get(1)(unnest (#2))]
            ├── estimated rows: 1.00
            └── ProjectSet
                ├── estimated rows: 1.00
                ├── set returning functions: unnest(CAST(fold_count.id (#0) AS Array(Int32 NULL)))
                └── TableScan
                    ├── table: default.default.fold_count
                    ├── read rows: 1
                    ├── read bytes: 87
                    ├── partitions total: 1
                    ├── partitions scanned: 1
                    ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
                    ├── push downs: [filters: [], limit: NONE]
                    └── estimated rows: 1.00

statement ok
drop table fold_count;

statement ok
drop database if exists project_set

statement ok
create database project_set

statement ok
use project_set

query T
explain select number from (select unnest([1,2,3]), number from numbers(10)) t
----
EvalScalar
├── expressions: [t.number (#0), numbers.number (#0), get(1)(unnest (#1))]
├── estimated rows: 10.00
└── ProjectSet
    ├── estimated rows: 10.00
    ├── set returning functions: unnest([1, 2, 3])
    └── TableScan
        ├── table: default.system.numbers
        ├── read rows: 10
        ├── read bytes: 80
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00

query T
explain select number from (select unnest([1,2,3,number]), number from numbers(10)) t
----
EvalScalar
├── expressions: [t.number (#0), numbers.number (#0), get(1)(unnest (#1))]
├── estimated rows: 10.00
└── ProjectSet
    ├── estimated rows: 10.00
    ├── set returning functions: unnest(CAST(array(1, 2, 3, numbers.number (#0)) AS Array(UInt64 NULL)))
    └── TableScan
        ├── table: default.system.numbers
        ├── read rows: 10
        ├── read bytes: 80
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00

statement ok
drop database project_set
