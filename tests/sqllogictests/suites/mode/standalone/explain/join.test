statement ok
drop table if exists t

statement ok
drop table if exists t1

statement ok
drop table if exists t2

statement ok
create table t as select number from numbers(1)

statement ok
create table t1 as select number from numbers(10)

statement ok
create table t2 as select number from numbers(100)

query T
explain select t.number from t, t1 where t.number = t1.number
----
HashJoin
├── join type: INNER
├── build keys: [t.number (#0)]
├── probe keys: [t1.number (#1)]
├── filters: []
├── estimated rows: 1.00
├── TableScan(Build)
│   ├── table: default.default.t
│   ├── read rows: 1
│   ├── read bytes: 31
│   ├── partitions total: 1
│   ├── partitions scanned: 1
│   ├── push downs: [filters: [], limit: NONE]
│   └── estimated rows: 1.00
└── TableScan(Probe)
    ├── table: default.default.t1
    ├── read rows: 10
    ├── read bytes: 68
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── push downs: [filters: [], limit: NONE]
    └── estimated rows: 10.00

query T
explain select t.number from t, t1 where t.number = t1.number and t.number = t1.number + 1
----
HashJoin
├── join type: INNER
├── build keys: [t.number (#0), t.number (#0)]
├── probe keys: [t1.number (#1), plus(t1.number (#1), 1_u8)]
├── filters: []
├── estimated rows: 1.00
├── TableScan(Build)
│   ├── table: default.default.t
│   ├── read rows: 1
│   ├── read bytes: 31
│   ├── partitions total: 1
│   ├── partitions scanned: 1
│   ├── push downs: [filters: [], limit: NONE]
│   └── estimated rows: 1.00
└── TableScan(Probe)
    ├── table: default.default.t1
    ├── read rows: 10
    ├── read bytes: 68
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── push downs: [filters: [], limit: NONE]
    └── estimated rows: 10.00

query T
explain select t.number from t, t1 where t.number > 1 and 1 < t1.number
----
HashJoin
├── join type: CROSS
├── build keys: []
├── probe keys: []
├── filters: []
├── estimated rows: 1.11
├── Filter(Build)
│   ├── filters: [gt(t.number (#0), CAST(1_u8 AS UInt64))]
│   ├── estimated rows: 0.33
│   └── TableScan
│       ├── table: default.default.t
│       ├── read rows: 0
│       ├── read bytes: 0
│       ├── partitions total: 1
│       ├── partitions scanned: 0
│       ├── push downs: [filters: [gt(t.number (#0), 1_u64)], limit: NONE]
│       └── estimated rows: 1.00
└── Filter(Probe)
    ├── filters: [lt(CAST(1_u8 AS UInt64), t1.number (#1))]
    ├── estimated rows: 3.33
    └── TableScan
        ├── table: default.default.t1
        ├── read rows: 10
        ├── read bytes: 68
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [lt(1_u64, t1.number (#1))], limit: NONE]
        └── estimated rows: 10.00

query T
explain select t.number from t, t1 where t.number + t1.number = 1
----
Filter
├── filters: [eq(plus(t.number (#0), t1.number (#1)), CAST(1_u8 AS UInt64))]
├── estimated rows: 3.33
└── HashJoin
    ├── join type: CROSS
    ├── build keys: []
    ├── probe keys: []
    ├── filters: []
    ├── estimated rows: 10.00
    ├── TableScan(Build)
    │   ├── table: default.default.t
    │   ├── read rows: 1
    │   ├── read bytes: 31
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 1.00
    └── TableScan(Probe)
        ├── table: default.default.t1
        ├── read rows: 10
        ├── read bytes: 68
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00


query T
explain select t.number from t, t1, t2 where t1.number = t2.number and t.number = 1
----
HashJoin
├── join type: CROSS
├── build keys: []
├── probe keys: []
├── filters: []
├── estimated rows: 0.00
├── Filter(Build)
│   ├── filters: [eq(t.number (#0), CAST(1_u8 AS UInt64))]
│   ├── estimated rows: 0.33
│   └── TableScan
│       ├── table: default.default.t
│       ├── read rows: 0
│       ├── read bytes: 0
│       ├── partitions total: 1
│       ├── partitions scanned: 0
│       ├── push downs: [filters: [eq(t.number (#0), 1_u64)], limit: NONE]
│       └── estimated rows: 1.00
└── HashJoin(Probe)
    ├── join type: INNER
    ├── build keys: [t1.number (#1)]
    ├── probe keys: [t2.number (#2)]
    ├── filters: []
    ├── estimated rows: 0.01
    ├── TableScan(Build)
    │   ├── table: default.default.t1
    │   ├── read rows: 10
    │   ├── read bytes: 68
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 10.00
    └── TableScan(Probe)
        ├── table: default.default.t2
        ├── read rows: 100
        ├── read bytes: 431
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 100.00

# check outer join is converted to inner join

statement ok
drop table if exists onecolumn

statement ok
CREATE TABLE onecolumn (x INT NULL)

statement ok
INSERT INTO onecolumn(x) VALUES (44), (NULL), (42), (42)

statement ok
drop table if exists twocolumn

statement ok
CREATE TABLE twocolumn (x INT NULL, y INT NULL)

statement ok
INSERT INTO twocolumn(x, y) VALUES (44,51), (NULL,52), (42,53), (45,45)

query T
explain select * from onecolumn as a left join twocolumn as b on a.x = b.x where b.x > 42
----
Filter
├── filters: [gt(b.x (#1), CAST(42_u8 AS Int32 NULL))]
├── estimated rows: 2.67
└── HashJoin
    ├── join type: LEFT OUTER
    ├── build keys: [b.x (#1)]
    ├── probe keys: [a.x (#0)]
    ├── filters: []
    ├── estimated rows: 4.00
    ├── TableScan(Build)
    │   ├── table: default.default.twocolumn
    │   ├── read rows: 4
    │   ├── read bytes: 79
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 4.00
    └── TableScan(Probe)
        ├── table: default.default.onecolumn
        ├── read rows: 4
        ├── read bytes: 37
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 4.00

query T
explain select * from onecolumn as a left join twocolumn as b on a.x = b.x where b.x > 44 or b.x < 43
----
Filter
├── filters: [or(gt(b.x (#1), CAST(44_u8 AS Int32 NULL)), lt(b.x (#1), CAST(43_u8 AS Int32 NULL)))]
├── estimated rows: 2.22
└── HashJoin
    ├── join type: LEFT OUTER
    ├── build keys: [b.x (#1)]
    ├── probe keys: [a.x (#0)]
    ├── filters: []
    ├── estimated rows: 4.00
    ├── TableScan(Build)
    │   ├── table: default.default.twocolumn
    │   ├── read rows: 4
    │   ├── read bytes: 79
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 4.00
    └── TableScan(Probe)
        ├── table: default.default.onecolumn
        ├── read rows: 4
        ├── read bytes: 37
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 4.00

query T
explain select * from onecolumn as a left join twocolumn as b on a.x = b.x where b.x > 42 and b.x < 45
----
Filter
├── filters: [gt(b.x (#1), CAST(42_u8 AS Int32 NULL)), lt(b.x (#1), CAST(45_u8 AS Int32 NULL))]
├── estimated rows: 1.78
└── HashJoin
    ├── join type: LEFT OUTER
    ├── build keys: [b.x (#1)]
    ├── probe keys: [a.x (#0)]
    ├── filters: []
    ├── estimated rows: 4.00
    ├── TableScan(Build)
    │   ├── table: default.default.twocolumn
    │   ├── read rows: 4
    │   ├── read bytes: 79
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 4.00
    └── TableScan(Probe)
        ├── table: default.default.onecolumn
        ├── read rows: 4
        ├── read bytes: 37
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 4.00

# the following cases won't be converted to inner join

query T
explain select * from onecolumn as a left join twocolumn as b on a.x = b.x where b.x > 44 or a.x < 43
----
Filter
├── filters: [or(gt(b.x (#1), CAST(44_u8 AS Int32 NULL)), lt(a.x (#0), CAST(43_u8 AS Int32 NULL)))]
├── estimated rows: 3.11
└── HashJoin
    ├── join type: LEFT OUTER
    ├── build keys: [b.x (#1)]
    ├── probe keys: [a.x (#0)]
    ├── filters: []
    ├── estimated rows: 4.00
    ├── TableScan(Build)
    │   ├── table: default.default.twocolumn
    │   ├── read rows: 4
    │   ├── read bytes: 79
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 4.00
    └── TableScan(Probe)
        ├── table: default.default.onecolumn
        ├── read rows: 4
        ├── read bytes: 37
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 4.00

query T
explain select * from onecolumn as a right join twocolumn as b on a.x = b.x where b.x > 42 and b.x < 45
----
HashJoin
├── join type: RIGHT OUTER
├── build keys: [b.x (#1)]
├── probe keys: [a.x (#0)]
├── filters: []
├── estimated rows: 1.78
├── Filter(Build)
│   ├── filters: [gt(b.x (#1), CAST(42_u8 AS Int32 NULL)), lt(b.x (#1), CAST(45_u8 AS Int32 NULL))]
│   ├── estimated rows: 1.78
│   └── TableScan
│       ├── table: default.default.twocolumn
│       ├── read rows: 4
│       ├── read bytes: 79
│       ├── partitions total: 1
│       ├── partitions scanned: 1
│       ├── push downs: [filters: [gt(b.x (#1), 42_i32), lt(b.x (#1), 45_i32)], limit: NONE]
│       └── estimated rows: 4.00
└── TableScan(Probe)
    ├── table: default.default.onecolumn
    ├── read rows: 4
    ├── read bytes: 37
    ├── partitions total: 1
    ├── partitions scanned: 1
    ├── push downs: [filters: [], limit: NONE]
    └── estimated rows: 4.00

statement ok
drop table t

statement ok
drop table t1

statement ok
drop table t2
