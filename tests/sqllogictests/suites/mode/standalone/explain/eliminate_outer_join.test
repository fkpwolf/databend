statement ok
drop database if exists eliminate_outer_join

statement ok
create database eliminate_outer_join

statement ok
use eliminate_outer_join

statement ok
create table t(a int null) as select number from numbers(10)

query T
explain select * from t left join t t1 on t.a = t1.a
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 22.00
└── HashJoin
    ├── join type: LEFT OUTER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 22.00
    ├── TableScan(Build)
    │   ├── table: default.eliminate_outer_join.t
    │   ├── read rows: 10
    │   ├── read bytes: 74
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 10.00
    └── TableScan(Probe)
        ├── table: default.eliminate_outer_join.t
        ├── read rows: 10
        ├── read bytes: 74
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00

query T
explain select * from t right join t t1 on t.a = t1.a
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 22.00
└── HashJoin
    ├── join type: RIGHT OUTER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 22.00
    ├── TableScan(Build)
    │   ├── table: default.eliminate_outer_join.t
    │   ├── read rows: 10
    │   ├── read bytes: 74
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 10.00
    └── TableScan(Probe)
        ├── table: default.eliminate_outer_join.t
        ├── read rows: 10
        ├── read bytes: 74
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00

query T
explain select * from t full join t t1 on t.a = t1.a
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 22.00
└── HashJoin
    ├── join type: FULL OUTER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 22.00
    ├── TableScan(Build)
    │   ├── table: default.eliminate_outer_join.t
    │   ├── read rows: 10
    │   ├── read bytes: 74
    │   ├── partitions total: 1
    │   ├── partitions scanned: 1
    │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │   ├── push downs: [filters: [], limit: NONE]
    │   └── estimated rows: 10.00
    └── TableScan(Probe)
        ├── table: default.eliminate_outer_join.t
        ├── read rows: 10
        ├── read bytes: 74
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00

query 
explain select * from t left join t t1 on t.a = t1.a where t1.a is not null
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 11.11
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 11.11
    ├── Filter(Build)
    │   ├── filters: [is_not_null(t1.a (#1))]
    │   ├── estimated rows: 3.33
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_not_null(t1.a (#1))], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_not_null(t.a (#0))]
        ├── estimated rows: 3.33
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [is_not_null(t.a (#0))], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t right join t t1 on t.a = t1.a where t.a is not null
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 11.11
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 11.11
    ├── Filter(Build)
    │   ├── filters: [is_not_null(t1.a (#1))]
    │   ├── estimated rows: 3.33
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_not_null(t1.a (#1))], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_not_null(t.a (#0))]
        ├── estimated rows: 3.33
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [is_not_null(t.a (#0))], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t full join t t1 on t.a = t1.a where t.a is not null
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 22.00
└── HashJoin
    ├── join type: RIGHT OUTER
    ├── build keys: [t.a (#0)]
    ├── probe keys: [t1.a (#1)]
    ├── filters: []
    ├── estimated rows: 22.00
    ├── Filter(Build)
    │   ├── filters: [is_not_null(t.a (#0))]
    │   ├── estimated rows: 3.33
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_not_null(t.a (#0))], limit: NONE]
    │       └── estimated rows: 10.00
    └── TableScan(Probe)
        ├── table: default.eliminate_outer_join.t
        ├── read rows: 10
        ├── read bytes: 74
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00

query T
explain select * from t full join t t1 on t.a = t1.a where t1.a is not null
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 22.00
└── HashJoin
    ├── join type: RIGHT OUTER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 22.00
    ├── Filter(Build)
    │   ├── filters: [is_not_null(t1.a (#1))]
    │   ├── estimated rows: 3.33
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_not_null(t1.a (#1))], limit: NONE]
    │       └── estimated rows: 10.00
    └── TableScan(Probe)
        ├── table: default.eliminate_outer_join.t
        ├── read rows: 10
        ├── read bytes: 74
        ├── partitions total: 1
        ├── partitions scanned: 1
        ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        ├── push downs: [filters: [], limit: NONE]
        └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a is not null and t.a is not null
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 11.11
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 11.11
    ├── Filter(Build)
    │   ├── filters: [is_not_null(t1.a (#1))]
    │   ├── estimated rows: 3.33
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_not_null(t1.a (#1))], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_not_null(t.a (#0))]
        ├── estimated rows: 3.33
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [is_not_null(t.a (#0))], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a = 1
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 1.23
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 1.23
    ├── Filter(Build)
    │   ├── filters: [is_true(t1.a (#1) = 1)]
    │   ├── estimated rows: 1.11
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 1 to 1>]
    │       ├── push downs: [filters: [is_true(t1.a (#1) = 1)], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_true(t.a (#0) = 1)]
        ├── estimated rows: 1.11
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 1 to 1>]
            ├── push downs: [filters: [is_true(t.a (#0) = 1)], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a > 1
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 22.00
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 22.00
    ├── Filter(Build)
    │   ├── filters: [is_true(t1.a (#1) > 1)]
    │   ├── estimated rows: 7.78
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_true(t1.a (#1) > 1)], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_true(t.a (#0) > 1)]
        ├── estimated rows: 7.78
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [is_true(t.a (#0) > 1)], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a < 1
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 1.23
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 1.23
    ├── Filter(Build)
    │   ├── filters: [is_true(t1.a (#1) < 1)]
    │   ├── estimated rows: 1.11
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_true(t1.a (#1) < 1)], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_true(t.a (#0) < 1)]
        ├── estimated rows: 1.11
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [is_true(t.a (#0) < 1)], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a <> 1
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 22.00
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 22.00
    ├── Filter(Build)
    │   ├── filters: [is_true(t1.a (#1) <> 1)]
    │   ├── estimated rows: 8.89
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_true(t1.a (#1) <> 1)], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_true(t.a (#0) <> 1)]
        ├── estimated rows: 8.89
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [is_true(t.a (#0) <> 1)], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a >= 1
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 22.00
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 22.00
    ├── Filter(Build)
    │   ├── filters: [is_true(t1.a (#1) >= 1)]
    │   ├── estimated rows: 7.78
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_true(t1.a (#1) >= 1)], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_true(t.a (#0) >= 1)]
        ├── estimated rows: 7.78
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [is_true(t.a (#0) >= 1)], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a <= 1
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 4.94
└── HashJoin
    ├── join type: INNER
    ├── build keys: [t1.a (#1)]
    ├── probe keys: [t.a (#0)]
    ├── filters: []
    ├── estimated rows: 4.94
    ├── Filter(Build)
    │   ├── filters: [is_true(t1.a (#1) <= 1)]
    │   ├── estimated rows: 2.22
    │   └── TableScan
    │       ├── table: default.eliminate_outer_join.t
    │       ├── read rows: 10
    │       ├── read bytes: 74
    │       ├── partitions total: 1
    │       ├── partitions scanned: 1
    │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
    │       ├── push downs: [filters: [is_true(t1.a (#1) <= 1)], limit: NONE]
    │       └── estimated rows: 10.00
    └── Filter(Probe)
        ├── filters: [is_true(t.a (#0) <= 1)]
        ├── estimated rows: 2.22
        └── TableScan
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [is_true(t.a (#0) <= 1)], limit: NONE]
            └── estimated rows: 10.00


query T
explain select * from t left join t t1 on t.a = t1.a where t1.a <= 1 or t.a < 1
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 6.79
└── Filter
    ├── filters: [is_true(t1.a (#1) <= 1 OR t.a (#0) < 1)]
    ├── estimated rows: 6.79
    └── HashJoin
        ├── join type: LEFT OUTER
        ├── build keys: [t1.a (#1)]
        ├── probe keys: [t.a (#0)]
        ├── filters: []
        ├── estimated rows: 22.00
        ├── TableScan(Build)
        │   ├── table: default.eliminate_outer_join.t
        │   ├── read rows: 10
        │   ├── read bytes: 74
        │   ├── partitions total: 1
        │   ├── partitions scanned: 1
        │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │   ├── push downs: [filters: [], limit: NONE]
        │   └── estimated rows: 10.00
        └── TableScan(Probe)
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a <= 1 or (t.a > 1 and t1.a > 1)
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 15.24
└── Filter
    ├── filters: [is_true(t1.a (#1) <= 1 OR t.a (#0) > 1 AND t1.a (#1) > 1)]
    ├── estimated rows: 15.24
    └── HashJoin
        ├── join type: INNER
        ├── build keys: [t1.a (#1)]
        ├── probe keys: [t.a (#0)]
        ├── filters: []
        ├── estimated rows: 22.00
        ├── Filter(Build)
        │   ├── filters: [is_true(t1.a (#1) <= 1 OR t1.a (#1) > 1)]
        │   ├── estimated rows: 8.27
        │   └── TableScan
        │       ├── table: default.eliminate_outer_join.t
        │       ├── read rows: 10
        │       ├── read bytes: 74
        │       ├── partitions total: 1
        │       ├── partitions scanned: 1
        │       ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │       ├── push downs: [filters: [is_true(t1.a (#1) <= 1 OR t1.a (#1) > 1)], limit: NONE]
        │       └── estimated rows: 10.00
        └── Filter(Probe)
            ├── filters: [is_true(t.a (#0) <= 1 OR t.a (#0) > 1)]
            ├── estimated rows: 8.27
            └── TableScan
                ├── table: default.eliminate_outer_join.t
                ├── read rows: 10
                ├── read bytes: 74
                ├── partitions total: 1
                ├── partitions scanned: 1
                ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
                ├── push downs: [filters: [is_true(t.a (#0) <= 1 OR t.a (#0) > 1)], limit: NONE]
                └── estimated rows: 10.00

query T
explain select * from t left join t t1 on t.a = t1.a where t1.a <= 1 or (t.a > 1 and t.a < 2)
----
EvalScalar
├── expressions: [t.a (#0), t1.a (#1)]
├── estimated rows: 7.85
└── Filter
    ├── filters: [is_true(t1.a (#1) <= 1 OR t.a (#0) > 1 AND t.a (#0) < 2)]
    ├── estimated rows: 7.85
    └── HashJoin
        ├── join type: LEFT OUTER
        ├── build keys: [t1.a (#1)]
        ├── probe keys: [t.a (#0)]
        ├── filters: []
        ├── estimated rows: 22.00
        ├── TableScan(Build)
        │   ├── table: default.eliminate_outer_join.t
        │   ├── read rows: 10
        │   ├── read bytes: 74
        │   ├── partitions total: 1
        │   ├── partitions scanned: 1
        │   ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
        │   ├── push downs: [filters: [], limit: NONE]
        │   └── estimated rows: 10.00
        └── TableScan(Probe)
            ├── table: default.eliminate_outer_join.t
            ├── read rows: 10
            ├── read bytes: 74
            ├── partitions total: 1
            ├── partitions scanned: 1
            ├── pruning stats: [segments: <range pruning: 1 to 1>, blocks: <range pruning: 1 to 1, bloom pruning: 0 to 0>]
            ├── push downs: [filters: [], limit: NONE]
            └── estimated rows: 10.00

statement ok
drop database eliminate_outer_join
