statement ok
drop table if exists t;

##  p in [1, 76]; s in [0, p]
statement ok
create table t (a Decimal(76, 76), b Decimal(76, 0));

statement ok
drop table t;

statement error 1049
create table t (a Decimal(77, 0));

statement ok
drop table t;

statement error 1049
create table t (a Decimal(1, 2));

statement ok
drop table t;

statement error 1049
create table t (a Decimal(0, 0));

query IIII
select 1::Decimal(17, 3), 2::Decimal(19, 4), 3::Decimal(20, 5), cast(10 as Decimal(7, 2));
----
1.000 2.0000 3.00000 10.00

query IIII
select 1::Decimal(17, 3)::Float64, 2::Decimal(19, 4)::Float64, 3::Decimal(20, 5)::Float64, cast(10 as Decimal(7, 2))::Float64;
----
1.0 2.0 3.0 10.0

## parser overflow
statement error 1005
select 2::Decimal(2000, 3);


## runtime overflow
statement error 1001
select 20000::Decimal(4, 3);


## tests from chatgpt
## some result should be modified if we parse 1.23 as Decimal instead of float by default, cc @yangsongfeng
## Test addition

## add

query I
SELECT CAST(1.23 AS DECIMAL(6, 2)) + CAST(4.56 AS DECIMAL(6, 2)) AS result;
----
5.78

query I
SELECT CAST(123456789.12 AS DECIMAL(20, 2)) + CAST(987654321.34 AS DECIMAL(20, 2)) AS result;
----
1111111110.46

query I
SELECT CAST(1.23 AS DECIMAL(6, 2)) + CAST(987654321.34 AS DECIMAL(20, 2)) AS result;
----
987654322.57



## sub

query I
SELECT CAST(4.56 AS DECIMAL(6, 2)) - CAST(1.23 AS DECIMAL(6, 2)) AS result;
----
3.32

query I
SELECT CAST(987654321.34 AS DECIMAL(20, 2)) - CAST(123456789.12 AS DECIMAL(20, 2)) AS result;
----
864197532.22

query I
SELECT CAST(987654321.34 AS DECIMAL(20, 2)) - CAST(1.23 AS DECIMAL(6, 2)) AS result;
----
987654320.11

## mul

query I
SELECT CAST(1.23 AS DECIMAL(6, 2)) * CAST(4.56 AS DECIMAL(6, 2)) AS result;
----
5.5965

query I
SELECT CAST(123456789.12 AS DECIMAL(20, 2)) * CAST(987654321.34 AS DECIMAL(20, 2)) AS result;
----
121932631273129095.8208

query I
SELECT CAST(1.23 AS DECIMAL(6, 2)) * CAST(987654321.34 AS DECIMAL(20, 2)) AS result;
----
1214814815.2482


## div

query I
SELECT CAST(4.56 AS DECIMAL(6, 2)) / CAST(1.23 AS DECIMAL(6, 2)) AS result;
----
3.69

query I
SELECT CAST(987654321.34 AS DECIMAL(20, 2)) / CAST(123456789.12 AS DECIMAL(20, 2)) AS result;
----
8.00

query I
SELECT CAST(987654321.34 AS DECIMAL(20, 2)) / CAST(1.23 AS DECIMAL(6, 2)) AS result;
 
----
802970992.95



## negative

query I
SELECT CAST(-1.23 AS DECIMAL(6, 2)) + CAST(-4.56 AS DECIMAL(6, 2)) AS result;
----
-5.78

query I
SELECT CAST(-4.56 AS DECIMAL(6, 2)) - CAST(1.23 AS DECIMAL(6, 2)) AS result;
----
-5.78

query I
SELECT CAST(-1.23 AS DECIMAL(6, 2)) * CAST(-4.56 AS DECIMAL(6, 2)) AS result;
----
5.5965

query I
SELECT CAST(-4.56 AS DECIMAL(6, 2)) / CAST(-1.23 AS DECIMAL(6, 2)) AS result;
----
3.69

query I
SELECT MIN(CAST(-4.56 AS DECIMAL(6, 2)))
----
-4.55

query I
SELECT MAX(CAST(4.26 AS DECIMAL(6, 2)))
----
4.26

query I
select max(number::Decimal(6,2)) as result from numbers(10);
----
9.00

query I
select min(number::Decimal(6,2)) as result from numbers(10);
----
0.00

query I
SELECT ANY(CAST(2.34 AS DECIMAL(6, 2)))
----
2.34


query TTTT
select typeof(a+b), typeof(a-b), typeof(a*b), typeof(a/b) from (select 3::Decimal(13,2) a , 3.1::Decimal(8,3) b);
----
DECIMAL(15, 3) DECIMAL(15, 3) DECIMAL(21, 5) DECIMAL(16, 2)


## compare

query IIIII
select a > b, a < b, a = b, a <= b, a >= b from (select 3::Decimal(13,2) a , 3.1::Decimal(8,2) b);
----
0 1 0 1 0


query IIIII
select a > b, a < b, a = b, a <= b, a >= b from (select 3::Decimal(13,2) a , 3 b);
----
0 0 1 1 1

query IIIII
select a > b, a < b, a = b, a <= b, a >= b from (select 3::Decimal(13,2) a , 3.1 b);
----
0 1 0 1 0

query IIIII
select a > b, a < b, a = b, a <= b, a >= b from (select 3::Decimal(13,2) a , 2.9 b);
----
1 0 0 0 1

query T
select typeof(a = b) from (select 3::Decimal(13,2) a , 2.9 b);
----
BOOLEAN

## insert

statement ok
drop table if exists t_decimal_4_2;

statement ok
create table t_decimal_4_2(a Decimal(4,2));

## illegal
statement error 1065
insert into t_decimal_4_2 values (1.1.1);

statement error 1303
insert into t_decimal_4_2 values (.);

statement error 1303
insert into t_decimal_4_2 values (+);

statement error 1303
insert into t_decimal_4_2 values (-);

statement error 1303
insert into t_decimal_4_2 values ();

statement error 1065
insert into t_decimal_4_2 values (a);

query I
select * from t_decimal_4_2;
----

## overflow
statement error 1001
insert into t_decimal_4_2 values (11111);

statement error 1001
insert into t_decimal_4_2 values (1e4);

query I
select count(*) from t_decimal_4_2;
----
0

statement ok
truncate table t_decimal_4_2;

statement ok
insert into t_decimal_4_2 values
(0), (000000), (0.000000), (0e1), (0.), (.0), (.00),
(-0), (-000000), (-0.000000), (-0e1), (-0.), (-.0), (-.00),
(+0), (+000000), (+0.000000), (+0e1), (+0.), (+.0), (+.00);

query I
select * from t_decimal_4_2;
----
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00

statement ok
truncate table t_decimal_4_2;

statement ok
insert into t_decimal_4_2 values
(1.1), (0.1), (1.0),
(1.1e1), (1.1e-1),
(.1), (1.), (0.), (.0),
(10.00);

query I
select * from t_decimal_4_2;
----
1.10
0.10
1.00
11.00
0.11
0.10
1.00
0.00
0.00
10.00

statement ok
truncate table t_decimal_4_2

statement ok
insert into t_decimal_4_2 values (+1.1), (+0.1), (+.0), (+1.1e+1), (+1e-1) ;

query I
select * from t_decimal_4_2;
----
1.10
0.10
0.00
11.00
0.10

statement ok
truncate table t_decimal_4_2

statement ok
insert into t_decimal_4_2 values (-1.1), (-0.1), (-1.1e+1), (-1e-1) ;

query I
select * from t_decimal_4_2;
----
-1.10
-0.10
-11.00
-0.10

statement ok
truncate table t_decimal_4_2

## cut
statement ok
insert into t_decimal_4_2 values (1.1111), (0.011111e3), (111e-3) ;

query I
select * from t_decimal_4_2;
----
1.11
11.11
0.11


statement ok
drop table if exists t

statement ok
drop table if exists t1

statement ok
drop table if exists desc_decimal

statement ok
drop table if exists t2

statement ok
create table t(c1 decimal(38,2))

statement ok
insert into t(c1) select CAST(2.34 AS DECIMAL(6, 2))

statement ok
insert into t(c1) select CAST(-2.34 AS DECIMAL(6, 2))

statement ok
insert into t(c1) select CAST(0 AS DECIMAL(6, 2))

query I
select * from t order by c1 desc
----
2.34
0.00
-2.34

query I
select * from t order by c1 asc
----
-2.34
0.00
2.34

query I
select * from t order by c1 asc limit 0,2
----
-2.34
0.00

query I
select * from t order by c1 asc limit 1,2
----
0.00
2.34

statement ok
create table t1(c0 int, c1 decimal(39,2))

statement ok
select * from t order by c1

## https://github.com/jorgecarleitao/parquet2/blob/main/src/schema/types/converted_type.rs#L25
## https://github.com/jorgecarleitao/arrow2/blob/main/src/io/parquet/write/schema.rs#L323
## the parquet2 and arrow2 not impl decimal256
statement error 1002
select * from t1 order by c1

statement ok
create table t2(c1 decimal(6,2) null)

statement ok
insert into t2 values(1.23)

statement ok
insert into t2 values(null);

query T
select * from t2 order by c1 asc
----
1.23
NULL

statement ok
create table desc_decimal(c1 decimal(4,2), c2 decimal(4,2) null, c3 decimal(39,2), c4 decimal(39,2) null)

query TTTT
desc desc_decimal
----
c1 DECIMAL(4, 2) NO 0.00 (empty)
c2 DECIMAL(4, 2) YES NULL (empty)
c3 DECIMAL(39, 2) NO 0.00 (empty)
c4 DECIMAL(39, 2) YES NULL (empty)

statement ok
drop table if exists t

statement ok
drop table if exists t1

statement ok
drop table if exists t2

statement ok
drop table if exists desc_decimal
