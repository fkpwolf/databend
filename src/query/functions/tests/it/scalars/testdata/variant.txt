ast            : parse_json(NULL)
raw expr       : parse_json(NULL)
checked expr   : parse_json<String NULL>(CAST(NULL AS String NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : {NULL}
output         : NULL


error: 
  --> SQL:1:1
  |
1 | parse_json('nuLL')
  | ^^^^^^^^^^^^^^^^^^ unable to parse 'nuLL': expected ident, pos 3



ast            : parse_json('null')
raw expr       : parse_json("null")
checked expr   : parse_json<String>("null")
optimized expr : 0x2000000000000000
output type    : Variant
output domain  : Unknown
output         : null


ast            : parse_json(' 	')
raw expr       : parse_json(" \t")
checked expr   : parse_json<String>(" \t")
optimized expr : 0x2000000000000000
output type    : Variant
output domain  : Unknown
output         : null


ast            : parse_json('true')
raw expr       : parse_json("true")
checked expr   : parse_json<String>("true")
optimized expr : 0x2000000040000000
output type    : Variant
output domain  : Unknown
output         : true


ast            : parse_json('false')
raw expr       : parse_json("false")
checked expr   : parse_json<String>("false")
optimized expr : 0x2000000030000000
output type    : Variant
output domain  : Unknown
output         : false


ast            : parse_json('"测试"')
raw expr       : parse_json("\"测试\"")
checked expr   : parse_json<String>("\"测试\"")
optimized expr : 0x2000000010000006e6b58be8af95
output type    : Variant
output domain  : Unknown
output         : "测试"


ast            : parse_json('1234')
raw expr       : parse_json("1234")
checked expr   : parse_json<String>("1234")
optimized expr : 0x20000000200000035004d2
output type    : Variant
output domain  : Unknown
output         : 1234


ast            : parse_json('[1,2,3,4]')
raw expr       : parse_json("[1,2,3,4]")
checked expr   : parse_json<String>("[1,2,3,4]")
optimized expr : 0x80000004200000022000000220000002200000025001500250035004
output type    : Variant
output domain  : Unknown
output         : [1,2,3,4]


ast            : parse_json('{"a":"b","c":"d"}')
raw expr       : parse_json("{\"a\":\"b\",\"c\":\"d\"}")
checked expr   : parse_json<String>("{\"a\":\"b\",\"c\":\"d\"}")
optimized expr : 0x400000021000000110000001100000011000000161636264
output type    : Variant
output domain  : Unknown
output         : {"a":"b","c":"d"}


ast            : parse_json(s)
raw expr       : parse_json(#0::String)
checked expr   : parse_json<String>(#0)
evaluation:
+--------+-----------------------------------------------------------+-----------------------+
|        | s                                                         | Output                |
+--------+-----------------------------------------------------------+-----------------------+
| Type   | String                                                    | Variant               |
| Domain | {"\"\\\\\\\"abc\\\\\\\"\""..="{\"k\":\"v\",\"a\":\"b\"}"} | Unknown               |
| Row 0  | "null"                                                    | null                  |
| Row 1  | "true"                                                    | true                  |
| Row 2  | "9223372036854775807"                                     | 9223372036854775807   |
| Row 3  | "-32768"                                                  | -32768                |
| Row 4  | "1234.5678"                                               | 1234.5678             |
| Row 5  | "1.912e2"                                                 | 191.2                 |
| Row 6  | "\"\\\\\\\"abc\\\\\\\"\""                                 | "\"abc\""             |
| Row 7  | "\"databend\""                                            | "databend"            |
| Row 8  | "{\"k\":\"v\",\"a\":\"b\"}"                               | {"a":"b","k":"v"}     |
| Row 9  | "[1,2,3,[\"a\",\"b\",\"c\"]]"                             | [1,2,3,["a","b","c"]] |
+--------+-----------------------------------------------------------+-----------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x6e756c6c74727565393232333337323033363835343737353830372d3332373638313233342e35363738312e3931326532225c5c5c226162635c5c5c2222226461746162656e64227b226b223a2276222c2261223a2262227d5b312c322c332c5b2261222c2262222c2263225d5d, offsets: [0, 4, 8, 27, 33, 42, 49, 62, 72, 89, 110] }                                                                                                                                            |
| Output | StringColumn { data: 0x200000000000000020000000400000002000000020000009507fffffffffffffff200000002000000340800020000000200000096040934a456d5cfaad2000000020000009604067e6666666666620000000100000075c226162635c2220000000100000086461746162656e644000000210000001100000011000000110000001616b6276800000042000000220000002200000025000001350015002500380000003100000011000000110000001616263, offsets: [0, 8, 16, 33, 44, 61, 78, 93, 109, 133, 178] } |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : parse_json(s)
raw expr       : parse_json(#0::String NULL)
checked expr   : parse_json<String NULL>(#0)
evaluation:
+--------+------------------------+--------------+
|        | s                      | Output       |
+--------+------------------------+--------------+
| Type   | String NULL            | Variant NULL |
| Domain | {""..="true"} ∪ {NULL} | Unknown      |
| Row 0  | "true"                 | true         |
| Row 1  | "false"                | false        |
| Row 2  | NULL                   | NULL         |
| Row 3  | "1234"                 | 1234         |
+--------+------------------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                            |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x7472756566616c736531323334, offsets: [0, 4, 9, 9, 13] }, validity: [0b____1011] }                                               |
| Output | NullableColumn { column: StringColumn { data: 0x20000000400000002000000030000000200000000000000020000000200000035004d2, offsets: [0, 8, 16, 24, 35] }, validity: [0b____1011] } |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : try_parse_json(NULL)
raw expr       : try_parse_json(NULL)
checked expr   : try_parse_json<String NULL>(CAST(NULL AS String NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : {NULL}
output         : NULL


ast            : try_parse_json('nuLL')
raw expr       : try_parse_json("nuLL")
checked expr   : try_parse_json<String>("nuLL")
optimized expr : NULL
output type    : Variant NULL
output domain  : Undefined ∪ {NULL}
output         : NULL


ast            : try_parse_json('null')
raw expr       : try_parse_json("null")
checked expr   : try_parse_json<String>("null")
optimized expr : 0x2000000000000000
output type    : Variant NULL
output domain  : Undefined ∪ {NULL}
output         : null


ast            : try_parse_json('true')
raw expr       : try_parse_json("true")
checked expr   : try_parse_json<String>("true")
optimized expr : 0x2000000040000000
output type    : Variant NULL
output domain  : Undefined ∪ {NULL}
output         : true


ast            : try_parse_json('false')
raw expr       : try_parse_json("false")
checked expr   : try_parse_json<String>("false")
optimized expr : 0x2000000030000000
output type    : Variant NULL
output domain  : Undefined ∪ {NULL}
output         : false


ast            : try_parse_json('"测试"')
raw expr       : try_parse_json("\"测试\"")
checked expr   : try_parse_json<String>("\"测试\"")
optimized expr : 0x2000000010000006e6b58be8af95
output type    : Variant NULL
output domain  : Undefined ∪ {NULL}
output         : "测试"


ast            : try_parse_json('1234')
raw expr       : try_parse_json("1234")
checked expr   : try_parse_json<String>("1234")
optimized expr : 0x20000000200000035004d2
output type    : Variant NULL
output domain  : Undefined ∪ {NULL}
output         : 1234


ast            : try_parse_json('[1,2,3,4]')
raw expr       : try_parse_json("[1,2,3,4]")
checked expr   : try_parse_json<String>("[1,2,3,4]")
optimized expr : 0x80000004200000022000000220000002200000025001500250035004
output type    : Variant NULL
output domain  : Undefined ∪ {NULL}
output         : [1,2,3,4]


ast            : try_parse_json('{"a":"b","c":"d"}')
raw expr       : try_parse_json("{\"a\":\"b\",\"c\":\"d\"}")
checked expr   : try_parse_json<String>("{\"a\":\"b\",\"c\":\"d\"}")
optimized expr : 0x400000021000000110000001100000011000000161636264
output type    : Variant NULL
output domain  : Undefined ∪ {NULL}
output         : {"a":"b","c":"d"}


ast            : try_parse_json(s)
raw expr       : try_parse_json(#0::String)
checked expr   : try_parse_json<String>(#0)
evaluation:
+--------+-----------------------------------------------------------+-----------------------+
|        | s                                                         | Output                |
+--------+-----------------------------------------------------------+-----------------------+
| Type   | String                                                    | Variant NULL          |
| Domain | {"\"\\\\\\\"abc\\\\\\\"\""..="{\"k\":\"v\",\"a\":\"b\"}"} | Undefined ∪ {NULL}    |
| Row 0  | "null"                                                    | null                  |
| Row 1  | "true"                                                    | true                  |
| Row 2  | "9223372036854775807"                                     | 9223372036854775807   |
| Row 3  | "-32768"                                                  | -32768                |
| Row 4  | "1234.5678"                                               | 1234.5678             |
| Row 5  | "1.912e2"                                                 | 191.2                 |
| Row 6  | "\"\\\\\\\"abc\\\\\\\"\""                                 | "\"abc\""             |
| Row 7  | "\"databend\""                                            | "databend"            |
| Row 8  | "{\"k\":\"v\",\"a\":\"b\"}"                               | {"a":"b","k":"v"}     |
| Row 9  | "[1,2,3,[\"a\",\"b\",\"c\"]]"                             | [1,2,3,["a","b","c"]] |
+--------+-----------------------------------------------------------+-----------------------+
evaluation (internal):

| Column | Data                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
+--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x6e756c6c74727565393232333337323033363835343737353830372d3332373638313233342e35363738312e3931326532225c5c5c226162635c5c5c2222226461746162656e64227b226b223a2276222c2261223a2262227d5b312c322c332c5b2261222c2262222c2263225d5d, offsets: [0, 4, 8, 27, 33, 42, 49, 62, 72, 89, 110] }                                                                                                                                                                                                           |
| Output | NullableColumn { column: StringColumn { data: 0x200000000000000020000000400000002000000020000009507fffffffffffffff200000002000000340800020000000200000096040934a456d5cfaad2000000020000009604067e6666666666620000000100000075c226162635c2220000000100000086461746162656e644000000210000001100000011000000110000001616b6276800000042000000220000002200000025000001350015002500380000003100000011000000110000001616263, offsets: [0, 8, 16, 33, 44, 61, 78, 93, 109, 133, 178] }, validity: [0b11111111, 0b______11] } |
+--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : try_parse_json(s)
raw expr       : try_parse_json(#0::String NULL)
checked expr   : try_parse_json<String NULL>(#0)
evaluation:
+--------+-----------------------+--------------------+
|        | s                     | Output             |
+--------+-----------------------+--------------------+
| Type   | String NULL           | Variant NULL       |
| Domain | {""..="ttt"} ∪ {NULL} | Undefined ∪ {NULL} |
| Row 0  | "true"                | true               |
| Row 1  | "ttt"                 | NULL               |
| Row 2  | NULL                  | NULL               |
| Row 3  | "1234"                | 1234               |
+--------+-----------------------+--------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                           |
+--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x7472756574747431323334, offsets: [0, 4, 7, 7, 11] }, validity: [0b____1011] }                                  |
| Output | NullableColumn { column: StringColumn { data: 0x2000000040000000200000000000000020000000200000035004d2, offsets: [0, 8, 8, 16, 27] }, validity: [0b____1001] } |
+--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : check_json(NULL)
raw expr       : check_json(NULL)
checked expr   : check_json<String NULL>(CAST(NULL AS String NULL))
optimized expr : NULL
output type    : String NULL
output domain  : {NULL}
output         : NULL


ast            : check_json('true')
raw expr       : check_json("true")
checked expr   : check_json<String>("true")
optimized expr : NULL
output type    : String NULL
output domain  : Unknown
output         : NULL


ast            : check_json('nuLL')
raw expr       : check_json("nuLL")
checked expr   : check_json<String>("nuLL")
optimized expr : "expected ident, pos 3"
output type    : String NULL
output domain  : Unknown
output         : "expected ident, pos 3"


ast            : check_json(s)
raw expr       : check_json(#0::String)
checked expr   : check_json<String>(#0)
evaluation:
+--------+------------------+-------------------------+
|        | s                | Output                  |
+--------+------------------+-------------------------+
| Type   | String           | String NULL             |
| Domain | {"abc"..="true"} | Unknown                 |
| Row 0  | "null"           | NULL                    |
| Row 1  | "abc"            | "expected value, pos 1" |
| Row 2  | "true"           | NULL                    |
+--------+------------------+-------------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                            |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x6e756c6c61626374727565, offsets: [0, 4, 7, 11] }                                                                         |
| Output | NullableColumn { column: StringColumn { data: 0x65787065637465642076616c75652c20706f732031, offsets: [0, 0, 21, 21] }, validity: [0b_____010] } |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : check_json(s)
raw expr       : check_json(#0::String NULL)
checked expr   : check_json<String NULL>(#0)
evaluation:
+--------+-----------------------+-------------------------+
|        | s                     | Output                  |
+--------+-----------------------+-------------------------+
| Type   | String NULL           | String NULL             |
| Domain | {""..="ttt"} ∪ {NULL} | Unknown                 |
| Row 0  | "true"                | NULL                    |
| Row 1  | "ttt"                 | "expected ident, pos 2" |
| Row 2  | NULL                  | NULL                    |
| Row 3  | "1234"                | NULL                    |
+--------+-----------------------+-------------------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x7472756574747431323334, offsets: [0, 4, 7, 7, 11] }, validity: [0b____1011] }                       |
| Output | NullableColumn { column: StringColumn { data: 0x6578706563746564206964656e742c20706f732032, offsets: [0, 0, 21, 21, 21] }, validity: [0b____0010] } |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : length(parse_json('1234'))
raw expr       : length(parse_json("1234"))
checked expr   : length<Variant NULL>(CAST(parse_json<String>("1234") AS Variant NULL))
optimized expr : NULL
output type    : UInt32 NULL
output domain  : Unknown
output         : NULL


ast            : length(parse_json('[1,2,3,4]'))
raw expr       : length(parse_json("[1,2,3,4]"))
checked expr   : length<Variant NULL>(CAST(parse_json<String>("[1,2,3,4]") AS Variant NULL))
optimized expr : 4_u32
output type    : UInt32 NULL
output domain  : Unknown
output         : 4_u32


ast            : length(parse_json('{"k":"v"}'))
raw expr       : length(parse_json("{\"k\":\"v\"}"))
checked expr   : length<Variant NULL>(CAST(parse_json<String>("{\"k\":\"v\"}") AS Variant NULL))
optimized expr : NULL
output type    : UInt32 NULL
output domain  : Unknown
output         : NULL


ast            : length(parse_json(s))
raw expr       : length(parse_json(#0::String))
checked expr   : length<Variant NULL>(CAST(parse_json<String>(#0) AS Variant NULL))
evaluation:
+--------+----------------------------------+-------------+
|        | s                                | Output      |
+--------+----------------------------------+-------------+
| Type   | String                           | UInt32 NULL |
| Domain | {"[\"a\",\"b\",\"c\"]"..="true"} | Unknown     |
| Row 0  | "true"                           | NULL        |
| Row 1  | "[1,2,3,4]"                      | 4_u32       |
| Row 2  | "[\"a\",\"b\",\"c\"]"            | 3_u32       |
+--------+----------------------------------+-------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                   |
+--------+--------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x747275655b312c322c332c345d5b2261222c2262222c2263225d, offsets: [0, 4, 13, 26] } |
| Output | NullableColumn { column: UInt32([0, 4, 3]), validity: [0b_____110] }                                   |
+--------+--------------------------------------------------------------------------------------------------------+


ast            : length(parse_json(s))
raw expr       : length(parse_json(#0::String NULL))
checked expr   : length<Variant NULL>(parse_json<String NULL>(#0))
evaluation:
+--------+------------------------+-------------+
|        | s                      | Output      |
+--------+------------------------+-------------+
| Type   | String NULL            | UInt32 NULL |
| Domain | {""..="true"} ∪ {NULL} | Unknown     |
| Row 0  | "true"                 | NULL        |
| Row 1  | "[1,2,3,4]"            | 4_u32       |
| Row 2  | NULL                   | NULL        |
| Row 3  | "[\"a\",\"b\",\"c\"]"  | 3_u32       |
+--------+------------------------+-------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                          |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x747275655b312c322c332c345d5b2261222c2262222c2263225d, offsets: [0, 4, 13, 13, 26] }, validity: [0b____1011] } |
| Output | NullableColumn { column: UInt32([0, 4, 0, 3]), validity: [0b____1010] }                                                                                       |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : object_keys(parse_json('[1,2,3,4]'))
raw expr       : object_keys(parse_json("[1,2,3,4]"))
checked expr   : object_keys<Variant NULL>(CAST(parse_json<String>("[1,2,3,4]") AS Variant NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : object_keys(parse_json('{"k1":"v1","k2":"v2"}'))
raw expr       : object_keys(parse_json("{\"k1\":\"v1\",\"k2\":\"v2\"}"))
checked expr   : object_keys<Variant NULL>(CAST(parse_json<String>("{\"k1\":\"v1\",\"k2\":\"v2\"}") AS Variant NULL))
optimized expr : 0x8000000210000002100000026b316b32
output type    : Variant NULL
output domain  : Unknown
output         : ["k1","k2"]


ast            : object_keys(parse_json(s))
raw expr       : object_keys(parse_json(#0::String))
checked expr   : object_keys<Variant NULL>(CAST(parse_json<String>(#0) AS Variant NULL))
evaluation:
+--------+-------------------------------------------------+--------------+
|        | s                                               | Output       |
+--------+-------------------------------------------------+--------------+
| Type   | String                                          | Variant NULL |
| Domain | {"[1,2,3,4]"..="{\"k1\":\"v1\",\"k2\":\"v2\"}"} | Unknown      |
| Row 0  | "[1,2,3,4]"                                     | NULL         |
| Row 1  | "{\"a\":\"b\",\"c\":\"d\"}"                     | ["a","c"]    |
| Row 2  | "{\"k1\":\"v1\",\"k2\":\"v2\"}"                 | ["k1","k2"]  |
+--------+-------------------------------------------------+--------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                              |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x5b312c322c332c345d7b2261223a2262222c2263223a2264227d7b226b31223a227631222c226b32223a227632227d, offsets: [0, 9, 26, 47] }                  |
| Output | NullableColumn { column: StringColumn { data: 0x80000002100000011000000161638000000210000002100000026b316b32, offsets: [0, 0, 14, 30] }, validity: [0b_____110] } |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : object_keys(parse_json(s))
raw expr       : object_keys(parse_json(#0::String NULL))
checked expr   : object_keys<Variant NULL>(parse_json<String NULL>(#0))
evaluation:
+--------+-------------------------------------------------+--------------+
|        | s                                               | Output       |
+--------+-------------------------------------------------+--------------+
| Type   | String NULL                                     | Variant NULL |
| Domain | {""..="{\"k1\":\"v1\",\"k2\":\"v2\"}"} ∪ {NULL} | Unknown      |
| Row 0  | "[1,2,3,4]"                                     | NULL         |
| Row 1  | "{\"a\":\"b\",\"c\":\"d\"}"                     | ["a","c"]    |
| Row 2  | NULL                                            | NULL         |
| Row 3  | "{\"k1\":\"v1\",\"k2\":\"v2\"}"                 | ["k1","k2"]  |
+--------+-------------------------------------------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                    |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x5b312c322c332c345d7b2261223a2262222c2263223a2264227d7b226b31223a227631222c226b32223a227632227d, offsets: [0, 9, 26, 26, 47] }, validity: [0b____1011] } |
| Output | NullableColumn { column: StringColumn { data: 0x80000002100000011000000161638000000210000002100000026b316b32, offsets: [0, 0, 14, 14, 30] }, validity: [0b____1010] }                                   |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : parse_json('null')[1]
raw expr       : get(parse_json("null"), 1_u8)
checked expr   : get<Variant NULL, UInt64 NULL>(CAST(parse_json<String>("null") AS Variant NULL), CAST(1_u8 AS UInt64 NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : parse_json('null')['k']
raw expr       : get(parse_json("null"), "k")
checked expr   : get<Variant NULL, String NULL>(CAST(parse_json<String>("null") AS Variant NULL), CAST("k" AS String NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : parse_json('[1,2,3,4]')[1]
raw expr       : get(parse_json("[1,2,3,4]"), 1_u8)
checked expr   : get<Variant NULL, UInt64 NULL>(CAST(parse_json<String>("[1,2,3,4]") AS Variant NULL), CAST(1_u8 AS UInt64 NULL))
optimized expr : 0x20000000200000025002
output type    : Variant NULL
output domain  : Unknown
output         : 2


ast            : parse_json('[1,2,3,4]')[2+3]
raw expr       : get(parse_json("[1,2,3,4]"), plus(2_u8, 3_u8))
checked expr   : get<Variant NULL, UInt64 NULL>(CAST(parse_json<String>("[1,2,3,4]") AS Variant NULL), CAST(plus<UInt8, UInt8>(2_u8, 3_u8) AS UInt64 NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : parse_json('{"k":"v"}')['k']
raw expr       : get(parse_json("{\"k\":\"v\"}"), "k")
checked expr   : get<Variant NULL, String NULL>(CAST(parse_json<String>("{\"k\":\"v\"}") AS Variant NULL), CAST("k" AS String NULL))
optimized expr : 0x200000001000000176
output type    : Variant NULL
output domain  : Unknown
output         : "v"


ast            : parse_json('{"k":"v"}')['x']
raw expr       : get(parse_json("{\"k\":\"v\"}"), "x")
checked expr   : get<Variant NULL, String NULL>(CAST(parse_json<String>("{\"k\":\"v\"}") AS Variant NULL), CAST("x" AS String NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : CAST(('a', 'b') AS VARIANT)['2']
raw expr       : get(CAST(tuple("a", "b") AS Variant), "2")
checked expr   : get<Variant NULL, String NULL>(CAST(to_variant<T0=(String, String)><T0>(tuple<String, String>("a", "b")) AS Variant NULL), CAST("2" AS String NULL))
optimized expr : 0x200000001000000162
output type    : Variant NULL
output domain  : Unknown
output         : "b"


ast            : parse_json(s)[i]
raw expr       : get(parse_json(#0::String), #1::UInt64)
checked expr   : get<Variant NULL, UInt64 NULL>(CAST(parse_json<String>(#0) AS Variant NULL), CAST(#1 AS UInt64 NULL))
evaluation:
+--------+----------------------------------+---------+--------------+
|        | s                                | i       | Output       |
+--------+----------------------------------+---------+--------------+
| Type   | String                           | UInt64  | Variant NULL |
| Domain | {"[\"a\",\"b\",\"c\"]"..="true"} | {0..=1} | Unknown      |
| Row 0  | "true"                           | 0_u64   | NULL         |
| Row 1  | "[1,2,3,4]"                      | 0_u64   | 1            |
| Row 2  | "[\"a\",\"b\",\"c\"]"            | 1_u64   | "b"          |
+--------+----------------------------------+---------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                        |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x747275655b312c322c332c345d5b2261222c2262222c2263225d, offsets: [0, 4, 13, 26] }                                      |
| i      | UInt64([0, 0, 1])                                                                                                                           |
| Output | NullableColumn { column: StringColumn { data: 0x20000000200000025001200000001000000162, offsets: [0, 0, 10, 19] }, validity: [0b_____110] } |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------+


ast            : parse_json(s)[i]
raw expr       : get(parse_json(#0::String NULL), #1::UInt64 NULL)
checked expr   : get<Variant NULL, UInt64 NULL>(parse_json<String NULL>(#0), #1)
evaluation:
+--------+------------------------+------------------+--------------+
|        | s                      | i                | Output       |
+--------+------------------------+------------------+--------------+
| Type   | String NULL            | UInt64 NULL      | Variant NULL |
| Domain | {""..="true"} ∪ {NULL} | {0..=2} ∪ {NULL} | Unknown      |
| Row 0  | "true"                 | NULL             | NULL         |
| Row 1  | "[1,2,3,4]"            | 2_u64            | 3            |
| Row 2  | NULL                   | NULL             | NULL         |
| Row 3  | "[\"a\",\"b\",\"c\"]"  | 1_u64            | "b"          |
+--------+------------------------+------------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                          |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x747275655b312c322c332c345d5b2261222c2262222c2263225d, offsets: [0, 4, 13, 13, 26] }, validity: [0b____1011] } |
| i      | NullableColumn { column: UInt64([0, 2, 0, 1]), validity: [0b____1010] }                                                                                       |
| Output | NullableColumn { column: StringColumn { data: 0x20000000200000025003200000001000000162, offsets: [0, 0, 10, 10, 19] }, validity: [0b____1010] }               |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : parse_json(s)[k]
raw expr       : get(parse_json(#0::String), #1::String)
checked expr   : get<Variant NULL, String NULL>(CAST(parse_json<String>(#0) AS Variant NULL), CAST(#1 AS String NULL))
evaluation:
+--------+------------------------+-------------+--------------+
|        | s                      | k           | Output       |
+--------+------------------------+-------------+--------------+
| Type   | String                 | String      | Variant NULL |
| Domain | {"true"..="{\"k\":1}"} | {"k"..="x"} | Unknown      |
| Row 0  | "true"                 | "k"         | NULL         |
| Row 1  | "{\"k\":1}"            | "k"         | 1            |
| Row 2  | "{\"a\":\"b\"}"        | "x"         | NULL         |
+--------+------------------------+-------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                      |
+--------+---------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x747275657b226b223a317d7b2261223a2262227d, offsets: [0, 4, 11, 20] }                                |
| k      | StringColumn { data: 0x6b6b78, offsets: [0, 1, 2, 3] }                                                                    |
| Output | NullableColumn { column: StringColumn { data: 0x20000000200000025001, offsets: [0, 0, 10, 10] }, validity: [0b_____010] } |
+--------+---------------------------------------------------------------------------------------------------------------------------+


ast            : parse_json(s)[k]
raw expr       : get(parse_json(#0::String NULL), #1::String)
checked expr   : get<Variant NULL, String NULL>(parse_json<String NULL>(#0), CAST(#1 AS String NULL))
evaluation:
+--------+-----------------------------+------------+--------------+
|        | s                           | k          | Output       |
+--------+-----------------------------+------------+--------------+
| Type   | String NULL                 | String     | Variant NULL |
| Domain | {""..="{\"k\":1}"} ∪ {NULL} | {""..="k"} | Unknown      |
| Row 0  | "true"                      | ""         | NULL         |
| Row 1  | "{\"k\":1}"                 | "k"        | 1            |
| Row 2  | NULL                        | ""         | NULL         |
| Row 3  | "{\"a\":\"b\"}"             | "a"        | "b"          |
+--------+-----------------------------+------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                              |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x747275657b226b223a317d7b2261223a2262227d, offsets: [0, 4, 11, 11, 20] }, validity: [0b____1011] } |
| k      | StringColumn { data: 0x6b61, offsets: [0, 0, 1, 1, 2] }                                                                                           |
| Output | NullableColumn { column: StringColumn { data: 0x20000000200000025001200000001000000162, offsets: [0, 0, 10, 10, 19] }, validity: [0b____1010] }   |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : get_ignore_case(parse_json('{"Aa":1, "aA":2, "aa":3}'), 'AA')
raw expr       : get_ignore_case(parse_json("{\"Aa\":1, \"aA\":2, \"aa\":3}"), "AA")
checked expr   : get_ignore_case<Variant NULL, String NULL>(CAST(parse_json<String>("{\"Aa\":1, \"aA\":2, \"aa\":3}") AS Variant NULL), CAST("AA" AS String NULL))
optimized expr : 0x20000000200000025001
output type    : Variant NULL
output domain  : Unknown
output         : 1


ast            : get_ignore_case(parse_json('{"Aa":1, "aA":2, "aa":3}'), 'aa')
raw expr       : get_ignore_case(parse_json("{\"Aa\":1, \"aA\":2, \"aa\":3}"), "aa")
checked expr   : get_ignore_case<Variant NULL, String NULL>(CAST(parse_json<String>("{\"Aa\":1, \"aA\":2, \"aa\":3}") AS Variant NULL), CAST("aa" AS String NULL))
optimized expr : 0x20000000200000025003
output type    : Variant NULL
output domain  : Unknown
output         : 3


ast            : get_ignore_case(parse_json('{"Aa":1, "aA":2, "aa":3}'), 'bb')
raw expr       : get_ignore_case(parse_json("{\"Aa\":1, \"aA\":2, \"aa\":3}"), "bb")
checked expr   : get_ignore_case<Variant NULL, String NULL>(CAST(parse_json<String>("{\"Aa\":1, \"aA\":2, \"aa\":3}") AS Variant NULL), CAST("bb" AS String NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : get_ignore_case(parse_json(s), k)
raw expr       : get_ignore_case(parse_json(#0::String), #1::String)
checked expr   : get_ignore_case<Variant NULL, String NULL>(CAST(parse_json<String>(#0) AS Variant NULL), CAST(#1 AS String NULL))
evaluation:
+--------+------------------------+-------------+--------------+
|        | s                      | k           | Output       |
+--------+------------------------+-------------+--------------+
| Type   | String                 | String      | Variant NULL |
| Domain | {"true"..="{\"k\":1}"} | {"A"..="k"} | Unknown      |
| Row 0  | "true"                 | "k"         | NULL         |
| Row 1  | "{\"k\":1}"            | "K"         | 1            |
| Row 2  | "{\"a\":\"b\"}"        | "A"         | "b"          |
+--------+------------------------+-------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                        |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x747275657b226b223a317d7b2261223a2262227d, offsets: [0, 4, 11, 20] }                                                  |
| k      | StringColumn { data: 0x6b4b41, offsets: [0, 1, 2, 3] }                                                                                      |
| Output | NullableColumn { column: StringColumn { data: 0x20000000200000025001200000001000000162, offsets: [0, 0, 10, 19] }, validity: [0b_____110] } |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------+


ast            : get_ignore_case(parse_json(s), k)
raw expr       : get_ignore_case(parse_json(#0::String NULL), #1::String)
checked expr   : get_ignore_case<Variant NULL, String NULL>(parse_json<String NULL>(#0), CAST(#1 AS String NULL))
evaluation:
+--------+-----------------------------+------------+--------------+
|        | s                           | k          | Output       |
+--------+-----------------------------+------------+--------------+
| Type   | String NULL                 | String     | Variant NULL |
| Domain | {""..="{\"k\":1}"} ∪ {NULL} | {""..="K"} | Unknown      |
| Row 0  | "true"                      | ""         | NULL         |
| Row 1  | "{\"k\":1}"                 | "K"        | 1            |
| Row 2  | NULL                        | ""         | NULL         |
| Row 3  | "{\"a\":\"b\"}"             | "A"        | "b"          |
+--------+-----------------------------+------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                              |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x747275657b226b223a317d7b2261223a2262227d, offsets: [0, 4, 11, 11, 20] }, validity: [0b____1011] } |
| k      | StringColumn { data: 0x4b41, offsets: [0, 0, 1, 1, 2] }                                                                                           |
| Output | NullableColumn { column: StringColumn { data: 0x20000000200000025001200000001000000162, offsets: [0, 0, 10, 10, 19] }, validity: [0b____1010] }   |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : get_path(parse_json('[[1,2],3]'), '[0]')
raw expr       : get_path(parse_json("[[1,2],3]"), "[0]")
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>("[[1,2],3]") AS Variant NULL), CAST("[0]" AS String NULL))
optimized expr : 0x80000002200000022000000250015002
output type    : Variant NULL
output domain  : Unknown
output         : [1,2]


ast            : get_path(parse_json('[[1,2],3]'), '[0][1]')
raw expr       : get_path(parse_json("[[1,2],3]"), "[0][1]")
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>("[[1,2],3]") AS Variant NULL), CAST("[0][1]" AS String NULL))
optimized expr : 0x20000000200000025002
output type    : Variant NULL
output domain  : Unknown
output         : 2


ast            : get_path(parse_json('[1,2,3]'), '[0]')
raw expr       : get_path(parse_json("[1,2,3]"), "[0]")
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>("[1,2,3]") AS Variant NULL), CAST("[0]" AS String NULL))
optimized expr : 0x20000000200000025001
output type    : Variant NULL
output domain  : Unknown
output         : 1


ast            : get_path(parse_json('[1,2,3]'), 'k2:k3')
raw expr       : get_path(parse_json("[1,2,3]"), "k2:k3")
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>("[1,2,3]") AS Variant NULL), CAST("k2:k3" AS String NULL))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : get_path(parse_json('{"a":{"b":2}}'), '["a"]["b"]')
raw expr       : get_path(parse_json("{\"a\":{\"b\":2}}"), "[\"a\"][\"b\"]")
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>("{\"a\":{\"b\":2}}") AS Variant NULL), CAST("[\"a\"][\"b\"]" AS String NULL))
optimized expr : 0x20000000200000025002
output type    : Variant NULL
output domain  : Unknown
output         : 2


ast            : get_path(parse_json('{"a":{"b":2}}'), 'a:b')
raw expr       : get_path(parse_json("{\"a\":{\"b\":2}}"), "a:b")
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>("{\"a\":{\"b\":2}}") AS Variant NULL), CAST("a:b" AS String NULL))
optimized expr : 0x20000000200000025002
output type    : Variant NULL
output domain  : Unknown
output         : 2


ast            : get_path(parse_json('{"a":{"b":2}}'), '["a"]')
raw expr       : get_path(parse_json("{\"a\":{\"b\":2}}"), "[\"a\"]")
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>("{\"a\":{\"b\":2}}") AS Variant NULL), CAST("[\"a\"]" AS String NULL))
optimized expr : 0x400000011000000120000002625002
output type    : Variant NULL
output domain  : Unknown
output         : {"b":2}


ast            : get_path(parse_json('{"a":{"b":2}}'), 'a')
raw expr       : get_path(parse_json("{\"a\":{\"b\":2}}"), "a")
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>("{\"a\":{\"b\":2}}") AS Variant NULL), CAST("a" AS String NULL))
optimized expr : 0x400000011000000120000002625002
output type    : Variant NULL
output domain  : Unknown
output         : {"b":2}


ast            : get_path(parse_json(s), k)
raw expr       : get_path(parse_json(#0::String), #1::String)
checked expr   : get_path<Variant NULL, String NULL>(CAST(parse_json<String>(#0) AS Variant NULL), CAST(#1 AS String NULL))
evaluation:
+--------+---------------------------------+-------------------+--------------+
|        | s                               | k                 | Output       |
+--------+---------------------------------+-------------------+--------------+
| Type   | String                          | String            | Variant NULL |
| Domain | {"[\"a\",\"b\"]"..="{\"k\":1}"} | {"[\"a\"]"..="k"} | Unknown      |
| Row 0  | "true"                          | "k"               | NULL         |
| Row 1  | "{\"k\":1}"                     | "[\"k\"]"         | 1            |
| Row 2  | "[\"a\",\"b\"]"                 | "[\"a\"]"         | NULL         |
+--------+---------------------------------+-------------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                      |
+--------+---------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x747275657b226b223a317d5b2261222c2262225d, offsets: [0, 4, 11, 20] }                                |
| k      | StringColumn { data: 0x6b5b226b225d5b2261225d, offsets: [0, 1, 6, 11] }                                                   |
| Output | NullableColumn { column: StringColumn { data: 0x20000000200000025001, offsets: [0, 0, 10, 10] }, validity: [0b_____010] } |
+--------+---------------------------------------------------------------------------------------------------------------------------+


ast            : get_path(parse_json(s), k)
raw expr       : get_path(parse_json(#0::String NULL), #1::String)
checked expr   : get_path<Variant NULL, String NULL>(parse_json<String NULL>(#0), CAST(#1 AS String NULL))
evaluation:
+--------+-----------------------------+--------------+--------------+
|        | s                           | k            | Output       |
+--------+-----------------------------+--------------+--------------+
| Type   | String NULL                 | String       | Variant NULL |
| Domain | {""..="{\"k\":1}"} ∪ {NULL} | {""..="[0]"} | Unknown      |
| Row 0  | "true"                      | "[0]"        | NULL         |
| Row 1  | "{\"k\":1}"                 | "[\"k\"]"    | 1            |
| Row 2  | NULL                        | ""           | NULL         |
| Row 3  | "[\"a\",\"b\"]"             | "[0]"        | "a"          |
+--------+-----------------------------+--------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                              |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x747275657b226b223a317d5b2261222c2262225d, offsets: [0, 4, 11, 11, 20] }, validity: [0b____1011] } |
| k      | StringColumn { data: 0x5b305d5b226b225d5b305d, offsets: [0, 3, 8, 8, 11] }                                                                        |
| Output | NullableColumn { column: StringColumn { data: 0x20000000200000025001200000001000000161, offsets: [0, 0, 10, 10, 19] }, validity: [0b____1010] }   |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : json_extract_path_text('[[1,2],3]', '[0]')
raw expr       : json_extract_path_text("[[1,2],3]", "[0]")
checked expr   : json_extract_path_text<String, String>("[[1,2],3]", "[0]")
optimized expr : "[1,2]"
output type    : String NULL
output domain  : Unknown
output         : "[1,2]"


ast            : json_extract_path_text('[[1,2],3]', '[0][1]')
raw expr       : json_extract_path_text("[[1,2],3]", "[0][1]")
checked expr   : json_extract_path_text<String, String>("[[1,2],3]", "[0][1]")
optimized expr : "2"
output type    : String NULL
output domain  : Unknown
output         : "2"


ast            : json_extract_path_text('[1,2,3]', '[0]')
raw expr       : json_extract_path_text("[1,2,3]", "[0]")
checked expr   : json_extract_path_text<String, String>("[1,2,3]", "[0]")
optimized expr : "1"
output type    : String NULL
output domain  : Unknown
output         : "1"


ast            : json_extract_path_text('[1,2,3]', 'k2:k3')
raw expr       : json_extract_path_text("[1,2,3]", "k2:k3")
checked expr   : json_extract_path_text<String, String>("[1,2,3]", "k2:k3")
optimized expr : NULL
output type    : String NULL
output domain  : Unknown
output         : NULL


ast            : json_extract_path_text('{"a":{"b":2}}', '["a"]["b"]')
raw expr       : json_extract_path_text("{\"a\":{\"b\":2}}", "[\"a\"][\"b\"]")
checked expr   : json_extract_path_text<String, String>("{\"a\":{\"b\":2}}", "[\"a\"][\"b\"]")
optimized expr : "2"
output type    : String NULL
output domain  : Unknown
output         : "2"


ast            : json_extract_path_text('{"a":{"b":2}}', 'a:b')
raw expr       : json_extract_path_text("{\"a\":{\"b\":2}}", "a:b")
checked expr   : json_extract_path_text<String, String>("{\"a\":{\"b\":2}}", "a:b")
optimized expr : "2"
output type    : String NULL
output domain  : Unknown
output         : "2"


ast            : json_extract_path_text('{"a":{"b":2}}', '["a"]')
raw expr       : json_extract_path_text("{\"a\":{\"b\":2}}", "[\"a\"]")
checked expr   : json_extract_path_text<String, String>("{\"a\":{\"b\":2}}", "[\"a\"]")
optimized expr : "{\"b\":2}"
output type    : String NULL
output domain  : Unknown
output         : "{\"b\":2}"


ast            : json_extract_path_text('{"a":{"b":2}}', 'a')
raw expr       : json_extract_path_text("{\"a\":{\"b\":2}}", "a")
checked expr   : json_extract_path_text<String, String>("{\"a\":{\"b\":2}}", "a")
optimized expr : "{\"b\":2}"
output type    : String NULL
output domain  : Unknown
output         : "{\"b\":2}"


ast            : json_extract_path_text(s, k)
raw expr       : json_extract_path_text(#0::String, #1::String)
checked expr   : json_extract_path_text<String, String>(#0, #1)
evaluation:
+--------+---------------------------------+-------------------+-------------+
|        | s                               | k                 | Output      |
+--------+---------------------------------+-------------------+-------------+
| Type   | String                          | String            | String NULL |
| Domain | {"[\"a\",\"b\"]"..="{\"k\":1}"} | {"[\"a\"]"..="k"} | Unknown     |
| Row 0  | "true"                          | "k"               | NULL        |
| Row 1  | "{\"k\":1}"                     | "[\"k\"]"         | "1"         |
| Row 2  | "[\"a\",\"b\"]"                 | "[\"a\"]"         | NULL        |
+--------+---------------------------------+-------------------+-------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                  |
+--------+-------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x747275657b226b223a317d5b2261222c2262225d, offsets: [0, 4, 11, 20] }            |
| k      | StringColumn { data: 0x6b5b226b225d5b2261225d, offsets: [0, 1, 6, 11] }                               |
| Output | NullableColumn { column: StringColumn { data: 0x31, offsets: [0, 0, 1, 1] }, validity: [0b_____010] } |
+--------+-------------------------------------------------------------------------------------------------------+


ast            : json_extract_path_text(s, k)
raw expr       : json_extract_path_text(#0::String NULL, #1::String)
checked expr   : json_extract_path_text<String NULL, String NULL>(#0, CAST(#1 AS String NULL))
evaluation:
+--------+-----------------------------+--------------+-------------+
|        | s                           | k            | Output      |
+--------+-----------------------------+--------------+-------------+
| Type   | String NULL                 | String       | String NULL |
| Domain | {""..="{\"k\":1}"} ∪ {NULL} | {""..="[0]"} | Unknown     |
| Row 0  | "true"                      | "[0]"        | NULL        |
| Row 1  | "{\"k\":1}"                 | "[\"k\"]"    | "1"         |
| Row 2  | NULL                        | ""           | NULL        |
| Row 3  | "[\"a\",\"b\"]"             | "[0]"        | "\"a\""     |
+--------+-----------------------------+--------------+-------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                              |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | NullableColumn { column: StringColumn { data: 0x747275657b226b223a317d5b2261222c2262225d, offsets: [0, 4, 11, 11, 20] }, validity: [0b____1011] } |
| k      | StringColumn { data: 0x5b305d5b226b225d5b305d, offsets: [0, 3, 8, 8, 11] }                                                                        |
| Output | NullableColumn { column: StringColumn { data: 0x31226122, offsets: [0, 0, 1, 1, 4] }, validity: [0b____1010] }                                    |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : as_boolean(parse_json('true'))
raw expr       : as_boolean(parse_json("true"))
checked expr   : as_boolean<Variant>(parse_json<String>("true"))
optimized expr : true
output type    : Boolean NULL
output domain  : Unknown
output         : true


ast            : as_boolean(parse_json('123'))
raw expr       : as_boolean(parse_json("123"))
checked expr   : as_boolean<Variant>(parse_json<String>("123"))
optimized expr : NULL
output type    : Boolean NULL
output domain  : Unknown
output         : NULL


ast            : as_integer(parse_json('true'))
raw expr       : as_integer(parse_json("true"))
checked expr   : as_integer<Variant>(parse_json<String>("true"))
optimized expr : NULL
output type    : Int64 NULL
output domain  : Unknown
output         : NULL


ast            : as_integer(parse_json('123'))
raw expr       : as_integer(parse_json("123"))
checked expr   : as_integer<Variant>(parse_json<String>("123"))
optimized expr : 123_i64
output type    : Int64 NULL
output domain  : Unknown
output         : 123_i64


ast            : as_float(parse_json('"ab"'))
raw expr       : as_float(parse_json("\"ab\""))
checked expr   : as_float<Variant>(parse_json<String>("\"ab\""))
optimized expr : NULL
output type    : Float64 NULL
output domain  : Unknown
output         : NULL


ast            : as_float(parse_json('12.34'))
raw expr       : as_float(parse_json("12.34"))
checked expr   : as_float<Variant>(parse_json<String>("12.34"))
optimized expr : 12.34_f64
output type    : Float64 NULL
output domain  : Unknown
output         : 12.34_f64


ast            : as_string(parse_json('"ab"'))
raw expr       : as_string(parse_json("\"ab\""))
checked expr   : as_string<Variant>(parse_json<String>("\"ab\""))
optimized expr : "ab"
output type    : String NULL
output domain  : Unknown
output         : "ab"


ast            : as_string(parse_json('12.34'))
raw expr       : as_string(parse_json("12.34"))
checked expr   : as_string<Variant>(parse_json<String>("12.34"))
optimized expr : NULL
output type    : String NULL
output domain  : Unknown
output         : NULL


ast            : as_array(parse_json('[1,2,3]'))
raw expr       : as_array(parse_json("[1,2,3]"))
checked expr   : as_array<Variant>(parse_json<String>("[1,2,3]"))
optimized expr : 0x80000003200000022000000220000002500150025003
output type    : Variant NULL
output domain  : Unknown
output         : [1,2,3]


ast            : as_array(parse_json('{"a":"b"}'))
raw expr       : as_array(parse_json("{\"a\":\"b\"}"))
checked expr   : as_array<Variant>(parse_json<String>("{\"a\":\"b\"}"))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : as_object(parse_json('[1,2,3]'))
raw expr       : as_object(parse_json("[1,2,3]"))
checked expr   : as_object<Variant>(parse_json<String>("[1,2,3]"))
optimized expr : NULL
output type    : Variant NULL
output domain  : Unknown
output         : NULL


ast            : as_object(parse_json('{"a":"b"}'))
raw expr       : as_object(parse_json("{\"a\":\"b\"}"))
checked expr   : as_object<Variant>(parse_json<String>("{\"a\":\"b\"}"))
optimized expr : 0x4000000110000001100000016162
output type    : Variant NULL
output domain  : Unknown
output         : {"a":"b"}


ast            : as_boolean(parse_json(s))
raw expr       : as_boolean(parse_json(#0::String))
checked expr   : as_boolean<Variant>(parse_json<String>(#0))
evaluation:
+--------+------------------------------+--------------+
|        | s                            | Output       |
+--------+------------------------------+--------------+
| Type   | String                       | Boolean NULL |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | Unknown      |
| Row 0  | "true"                       | true         |
| Row 1  | "123"                        | NULL         |
| Row 2  | "12.34"                      | NULL         |
| Row 3  | "\"ab\""                     | NULL         |
| Row 4  | "[1,2,3]"                    | NULL         |
| Row 5  | "{\"a\":\"b\"}"              | NULL         |
+--------+------------------------------+--------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] } |
| Output | NullableColumn { column: Boolean([0b__000001]), validity: [0b__000001] }                                                      |
+--------+-------------------------------------------------------------------------------------------------------------------------------+


ast            : as_boolean(try_parse_json(s))
raw expr       : as_boolean(try_parse_json(#0::String))
checked expr   : as_boolean<Variant NULL>(try_parse_json<String>(#0))
evaluation:
+--------+------------------------------+------------------------+
|        | s                            | Output                 |
+--------+------------------------------+------------------------+
| Type   | String                       | Boolean NULL           |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | {FALSE, TRUE} ∪ {NULL} |
| Row 0  | "true"                       | true                   |
| Row 1  | "123"                        | NULL                   |
| Row 2  | "12.34"                      | NULL                   |
| Row 3  | "\"ab\""                     | NULL                   |
| Row 4  | "[1,2,3]"                    | NULL                   |
| Row 5  | "{\"a\":\"b\"}"              | NULL                   |
+--------+------------------------------+------------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] } |
| Output | NullableColumn { column: Boolean([0b__000001]), validity: [0b__000001] }                                                      |
+--------+-------------------------------------------------------------------------------------------------------------------------------+


ast            : as_integer(parse_json(s))
raw expr       : as_integer(parse_json(#0::String))
checked expr   : as_integer<Variant>(parse_json<String>(#0))
evaluation:
+--------+------------------------------+------------+
|        | s                            | Output     |
+--------+------------------------------+------------+
| Type   | String                       | Int64 NULL |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | Unknown    |
| Row 0  | "true"                       | NULL       |
| Row 1  | "123"                        | 123_i64    |
| Row 2  | "12.34"                      | NULL       |
| Row 3  | "\"ab\""                     | NULL       |
| Row 4  | "[1,2,3]"                    | NULL       |
| Row 5  | "{\"a\":\"b\"}"              | NULL       |
+--------+------------------------------+------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] } |
| Output | NullableColumn { column: Int64([0, 123, 0, 0, 0, 0]), validity: [0b__000010] }                                                |
+--------+-------------------------------------------------------------------------------------------------------------------------------+


ast            : as_integer(try_parse_json(s))
raw expr       : as_integer(try_parse_json(#0::String))
checked expr   : as_integer<Variant NULL>(try_parse_json<String>(#0))
evaluation:
+--------+------------------------------+-------------------------------------------------------+
|        | s                            | Output                                                |
+--------+------------------------------+-------------------------------------------------------+
| Type   | String                       | Int64 NULL                                            |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | {-9223372036854775808..=9223372036854775807} ∪ {NULL} |
| Row 0  | "true"                       | NULL                                                  |
| Row 1  | "123"                        | 123_i64                                               |
| Row 2  | "12.34"                      | NULL                                                  |
| Row 3  | "\"ab\""                     | NULL                                                  |
| Row 4  | "[1,2,3]"                    | NULL                                                  |
| Row 5  | "{\"a\":\"b\"}"              | NULL                                                  |
+--------+------------------------------+-------------------------------------------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] } |
| Output | NullableColumn { column: Int64([0, 123, 0, 0, 0, 0]), validity: [0b__000010] }                                                |
+--------+-------------------------------------------------------------------------------------------------------------------------------+


ast            : as_float(parse_json(s))
raw expr       : as_float(parse_json(#0::String))
checked expr   : as_float<Variant>(parse_json<String>(#0))
evaluation:
+--------+------------------------------+--------------+
|        | s                            | Output       |
+--------+------------------------------+--------------+
| Type   | String                       | Float64 NULL |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | Unknown      |
| Row 0  | "true"                       | NULL         |
| Row 1  | "123"                        | 123_f64      |
| Row 2  | "12.34"                      | 12.34_f64    |
| Row 3  | "\"ab\""                     | NULL         |
| Row 4  | "[1,2,3]"                    | NULL         |
| Row 5  | "{\"a\":\"b\"}"              | NULL         |
+--------+------------------------------+--------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] } |
| Output | NullableColumn { column: Float64([0, 123, 12.34, 0, 0, 0]), validity: [0b__000110] }                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+


ast            : as_float(try_parse_json(s))
raw expr       : as_float(try_parse_json(#0::String))
checked expr   : as_float<Variant NULL>(try_parse_json<String>(#0))
evaluation:
+--------+------------------------------+-----------------------+
|        | s                            | Output                |
+--------+------------------------------+-----------------------+
| Type   | String                       | Float64 NULL          |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | {-inf..=NaN} ∪ {NULL} |
| Row 0  | "true"                       | NULL                  |
| Row 1  | "123"                        | 123_f64               |
| Row 2  | "12.34"                      | 12.34_f64             |
| Row 3  | "\"ab\""                     | NULL                  |
| Row 4  | "[1,2,3]"                    | NULL                  |
| Row 5  | "{\"a\":\"b\"}"              | NULL                  |
+--------+------------------------------+-----------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] } |
| Output | NullableColumn { column: Float64([0, 123, 12.34, 0, 0, 0]), validity: [0b__000110] }                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+


ast            : as_string(parse_json(s))
raw expr       : as_string(parse_json(#0::String))
checked expr   : as_string<Variant>(parse_json<String>(#0))
evaluation:
+--------+------------------------------+-------------+
|        | s                            | Output      |
+--------+------------------------------+-------------+
| Type   | String                       | String NULL |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | Unknown     |
| Row 0  | "true"                       | NULL        |
| Row 1  | "123"                        | NULL        |
| Row 2  | "12.34"                      | NULL        |
| Row 3  | "\"ab\""                     | "ab"        |
| Row 4  | "[1,2,3]"                    | NULL        |
| Row 5  | "{\"a\":\"b\"}"              | NULL        |
+--------+------------------------------+-------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] } |
| Output | NullableColumn { column: StringColumn { data: 0x6162, offsets: [0, 0, 0, 0, 2, 2, 2] }, validity: [0b__001000] }              |
+--------+-------------------------------------------------------------------------------------------------------------------------------+


ast            : as_string(try_parse_json(s))
raw expr       : as_string(try_parse_json(#0::String))
checked expr   : as_string<Variant NULL>(try_parse_json<String>(#0))
evaluation:
+--------+------------------------------+-----------------+
|        | s                            | Output          |
+--------+------------------------------+-----------------+
| Type   | String                       | String NULL     |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | {""..} ∪ {NULL} |
| Row 0  | "true"                       | NULL            |
| Row 1  | "123"                        | NULL            |
| Row 2  | "12.34"                      | NULL            |
| Row 3  | "\"ab\""                     | "ab"            |
| Row 4  | "[1,2,3]"                    | NULL            |
| Row 5  | "{\"a\":\"b\"}"              | NULL            |
+--------+------------------------------+-----------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                          |
+--------+-------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] } |
| Output | NullableColumn { column: StringColumn { data: 0x6162, offsets: [0, 0, 0, 0, 2, 2, 2] }, validity: [0b__001000] }              |
+--------+-------------------------------------------------------------------------------------------------------------------------------+


ast            : as_array(parse_json(s))
raw expr       : as_array(parse_json(#0::String))
checked expr   : as_array<Variant>(parse_json<String>(#0))
evaluation:
+--------+------------------------------+--------------+
|        | s                            | Output       |
+--------+------------------------------+--------------+
| Type   | String                       | Variant NULL |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | Unknown      |
| Row 0  | "true"                       | NULL         |
| Row 1  | "123"                        | NULL         |
| Row 2  | "12.34"                      | NULL         |
| Row 3  | "\"ab\""                     | NULL         |
| Row 4  | "[1,2,3]"                    | [1,2,3]      |
| Row 5  | "{\"a\":\"b\"}"              | NULL         |
+--------+------------------------------+--------------+
evaluation (internal):
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                       |
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] }                              |
| Output | NullableColumn { column: StringColumn { data: 0x80000003200000022000000220000002500150025003, offsets: [0, 0, 0, 0, 0, 22, 22] }, validity: [0b__010000] } |
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : as_array(try_parse_json(s))
raw expr       : as_array(try_parse_json(#0::String))
checked expr   : as_array<Variant NULL>(try_parse_json<String>(#0))
evaluation:
+--------+------------------------------+--------------------+
|        | s                            | Output             |
+--------+------------------------------+--------------------+
| Type   | String                       | Variant NULL       |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | Undefined ∪ {NULL} |
| Row 0  | "true"                       | NULL               |
| Row 1  | "123"                        | NULL               |
| Row 2  | "12.34"                      | NULL               |
| Row 3  | "\"ab\""                     | NULL               |
| Row 4  | "[1,2,3]"                    | [1,2,3]            |
| Row 5  | "{\"a\":\"b\"}"              | NULL               |
+--------+------------------------------+--------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                       |
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] }                              |
| Output | NullableColumn { column: StringColumn { data: 0x80000003200000022000000220000002500150025003, offsets: [0, 0, 0, 0, 0, 22, 22] }, validity: [0b__010000] } |
+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : as_object(parse_json(s))
raw expr       : as_object(parse_json(#0::String))
checked expr   : as_object<Variant>(parse_json<String>(#0))
evaluation:
+--------+------------------------------+--------------+
|        | s                            | Output       |
+--------+------------------------------+--------------+
| Type   | String                       | Variant NULL |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | Unknown      |
| Row 0  | "true"                       | NULL         |
| Row 1  | "123"                        | NULL         |
| Row 2  | "12.34"                      | NULL         |
| Row 3  | "\"ab\""                     | NULL         |
| Row 4  | "[1,2,3]"                    | NULL         |
| Row 5  | "{\"a\":\"b\"}"              | {"a":"b"}    |
+--------+------------------------------+--------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                      |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] }             |
| Output | NullableColumn { column: StringColumn { data: 0x4000000110000001100000016162, offsets: [0, 0, 0, 0, 0, 0, 14] }, validity: [0b__100000] } |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------+


ast            : as_object(try_parse_json(s))
raw expr       : as_object(try_parse_json(#0::String))
checked expr   : as_object<Variant NULL>(try_parse_json<String>(#0))
evaluation:
+--------+------------------------------+--------------------+
|        | s                            | Output             |
+--------+------------------------------+--------------------+
| Type   | String                       | Variant NULL       |
| Domain | {"\"ab\""..="{\"a\":\"b\"}"} | Undefined ∪ {NULL} |
| Row 0  | "true"                       | NULL               |
| Row 1  | "123"                        | NULL               |
| Row 2  | "12.34"                      | NULL               |
| Row 3  | "\"ab\""                     | NULL               |
| Row 4  | "[1,2,3]"                    | NULL               |
| Row 5  | "{\"a\":\"b\"}"              | {"a":"b"}          |
+--------+------------------------------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                      |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------+
| s      | StringColumn { data: 0x7472756531323331322e3334226162225b312c322c335d7b2261223a2262227d, offsets: [0, 4, 7, 12, 16, 23, 32] }             |
| Output | NullableColumn { column: StringColumn { data: 0x4000000110000001100000016162, offsets: [0, 0, 0, 0, 0, 0, 14] }, validity: [0b__100000] } |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------+


