ast            : a + b
raw expr       : plus(#0::Int8, #2::Int16)
checked expr   : plus<Int8, Int16>(#0, #2)
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Int8    | Int16   | Int32   |
| Domain | {1..=3} | {2..=6} | {3..=9} |
| Row 0  | 1_i8    | 2_i16   | 3_i32   |
| Row 1  | 2_i8    | 4_i16   | 6_i32   |
| Row 2  | 3_i8    | 6_i16   | 9_i32   |
+--------+---------+---------+---------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int32([3, 6, 9]) |
+--------+------------------+


ast            : a2 + 10
raw expr       : plus(#1::UInt8 NULL, 10_u8)
checked expr   : plus<UInt8 NULL, UInt8 NULL>(#1, CAST(10_u8 AS UInt8 NULL))
optimized expr : plus<UInt8 NULL, UInt8 NULL>(#1, 10_u8)
evaluation:
+--------+------------------+--------------------+
|        | a2               | Output             |
+--------+------------------+--------------------+
| Type   | UInt8 NULL       | UInt16 NULL        |
| Domain | {1..=3} ∪ {NULL} | {11..=13} ∪ {NULL} |
| Row 0  | 1_u8             | 11_u16             |
| Row 1  | 2_u8             | 12_u16             |
| Row 2  | NULL             | NULL               |
+--------+------------------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }     |
| Output | NullableColumn { column: UInt16([11, 12, 13]), validity: [0b_____011] } |
+--------+-------------------------------------------------------------------------+


ast            : a2 + c
raw expr       : plus(#1::UInt8 NULL, #3::UInt32)
checked expr   : plus<UInt8 NULL, UInt32 NULL>(#1, CAST(#3 AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+--------------------+
|        | a2               | c         | Output             |
+--------+------------------+-----------+--------------------+
| Type   | UInt8 NULL       | UInt32    | UInt64 NULL        |
| Domain | {1..=3} ∪ {NULL} | {10..=30} | {11..=33} ∪ {NULL} |
| Row 0  | 1_u8             | 10_u32    | 11_u64             |
| Row 1  | 2_u8             | 20_u32    | 22_u64             |
| Row 2  | NULL             | 30_u32    | NULL               |
+--------+------------------+-----------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }     |
| c      | UInt32([10, 20, 30])                                                    |
| Output | NullableColumn { column: UInt64([11, 22, 33]), validity: [0b_____011] } |
+--------+-------------------------------------------------------------------------+


ast            : c + b
raw expr       : plus(#3::UInt32, #2::Int16)
checked expr   : plus<UInt32, Int16>(#3, #2)
evaluation:
+--------+---------+-----------+-----------+
|        | b       | c         | Output    |
+--------+---------+-----------+-----------+
| Type   | Int16   | UInt32    | Int64     |
| Domain | {2..=6} | {10..=30} | {12..=36} |
| Row 0  | 2_i16   | 10_u32    | 12_i64    |
| Row 1  | 4_i16   | 20_u32    | 24_i64    |
| Row 2  | 6_i16   | 30_u32    | 36_i64    |
+--------+---------+-----------+-----------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([12, 24, 36])  |
+--------+----------------------+


ast            : c + d
raw expr       : plus(#3::UInt32, #4::Float64)
checked expr   : plus<UInt32, Float64>(#3, #4)
evaluation:
+--------+-----------+------------+------------+
|        | c         | d          | Output     |
+--------+-----------+------------+------------+
| Type   | UInt32    | Float64    | Float64    |
| Domain | {10..=30} | {-20..=30} | {-10..=60} |
| Row 0  | 10_u32    | 10_f64     | 20_f64     |
| Row 1  | 20_u32    | -20_f64    | 0_f64      |
| Row 2  | 30_u32    | 30_f64     | 60_f64     |
+--------+-----------+------------+------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Float64([20, 0, 60])   |
+--------+------------------------+


ast            : a - b
raw expr       : minus(#0::Int8, #2::Int16)
checked expr   : minus<Int8, Int16>(#0, #2)
evaluation:
+--------+---------+---------+----------+
|        | a       | b       | Output   |
+--------+---------+---------+----------+
| Type   | Int8    | Int16   | Int32    |
| Domain | {1..=3} | {2..=6} | {-5..=1} |
| Row 0  | 1_i8    | 2_i16   | -1_i32   |
| Row 1  | 2_i8    | 4_i16   | -2_i32   |
| Row 2  | 3_i8    | 6_i16   | -3_i32   |
+--------+---------+---------+----------+
evaluation (internal):
+--------+---------------------+
| Column | Data                |
+--------+---------------------+
| a      | Int8([1, 2, 3])     |
| b      | Int16([2, 4, 6])    |
| Output | Int32([-1, -2, -3]) |
+--------+---------------------+


ast            : a2 - 10
raw expr       : minus(#1::UInt8 NULL, 10_u8)
checked expr   : minus<UInt8 NULL, UInt8 NULL>(#1, CAST(10_u8 AS UInt8 NULL))
optimized expr : minus<UInt8 NULL, UInt8 NULL>(#1, 10_u8)
evaluation:
+--------+------------------+--------------------+
|        | a2               | Output             |
+--------+------------------+--------------------+
| Type   | UInt8 NULL       | Int16 NULL         |
| Domain | {1..=3} ∪ {NULL} | {-9..=-7} ∪ {NULL} |
| Row 0  | 1_u8             | -9_i16             |
| Row 1  | 2_u8             | -8_i16             |
| Row 2  | NULL             | NULL               |
+--------+------------------+--------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }    |
| Output | NullableColumn { column: Int16([-9, -8, -7]), validity: [0b_____011] } |
+--------+------------------------------------------------------------------------+


ast            : a2 - c
raw expr       : minus(#1::UInt8 NULL, #3::UInt32)
checked expr   : minus<UInt8 NULL, UInt32 NULL>(#1, CAST(#3 AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+---------------------+
|        | a2               | c         | Output              |
+--------+------------------+-----------+---------------------+
| Type   | UInt8 NULL       | UInt32    | Int64 NULL          |
| Domain | {1..=3} ∪ {NULL} | {10..=30} | {-29..=-7} ∪ {NULL} |
| Row 0  | 1_u8             | 10_u32    | -9_i64              |
| Row 1  | 2_u8             | 20_u32    | -18_i64             |
| Row 2  | NULL             | 30_u32    | NULL                |
+--------+------------------+-----------+---------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------+
| Column | Data                                                                     |
+--------+--------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }      |
| c      | UInt32([10, 20, 30])                                                     |
| Output | NullableColumn { column: Int64([-9, -18, -27]), validity: [0b_____011] } |
+--------+--------------------------------------------------------------------------+


ast            : c - b
raw expr       : minus(#3::UInt32, #2::Int16)
checked expr   : minus<UInt32, Int16>(#3, #2)
evaluation:
+--------+---------+-----------+----------+
|        | b       | c         | Output   |
+--------+---------+-----------+----------+
| Type   | Int16   | UInt32    | Int64    |
| Domain | {2..=6} | {10..=30} | {4..=28} |
| Row 0  | 2_i16   | 10_u32    | 8_i64    |
| Row 1  | 4_i16   | 20_u32    | 16_i64   |
| Row 2  | 6_i16   | 30_u32    | 24_i64   |
+--------+---------+-----------+----------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([8, 16, 24])   |
+--------+----------------------+


ast            : c - d
raw expr       : minus(#3::UInt32, #4::Float64)
checked expr   : minus<UInt32, Float64>(#3, #4)
evaluation:
+--------+-----------+------------+------------+
|        | c         | d          | Output     |
+--------+-----------+------------+------------+
| Type   | UInt32    | Float64    | Float64    |
| Domain | {10..=30} | {-20..=30} | {-20..=50} |
| Row 0  | 10_u32    | 10_f64     | 0_f64      |
| Row 1  | 20_u32    | -20_f64    | 40_f64     |
| Row 2  | 30_u32    | 30_f64     | 0_f64      |
+--------+-----------+------------+------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Float64([0, 40, 0])    |
+--------+------------------------+


ast            : -c
raw expr       : minus(#3::UInt32)
checked expr   : minus<UInt32>(#3)
evaluation:
+--------+-----------+-------------+
|        | c         | Output      |
+--------+-----------+-------------+
| Type   | UInt32    | Int64       |
| Domain | {10..=30} | {-30..=-10} |
| Row 0  | 10_u32    | -10_i64     |
| Row 1  | 20_u32    | -20_i64     |
| Row 2  | 30_u32    | -30_i64     |
+--------+-----------+-------------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| Output | Int64([-10, -20, -30]) |
+--------+------------------------+


ast            : a  * b
raw expr       : multiply(#0::Int8, #2::Int16)
checked expr   : multiply<Int8, Int16>(#0, #2)
evaluation:
+--------+---------+---------+----------+
|        | a       | b       | Output   |
+--------+---------+---------+----------+
| Type   | Int8    | Int16   | Int32    |
| Domain | {1..=3} | {2..=6} | {2..=18} |
| Row 0  | 1_i8    | 2_i16   | 2_i32    |
| Row 1  | 2_i8    | 4_i16   | 8_i32    |
| Row 2  | 3_i8    | 6_i16   | 18_i32   |
+--------+---------+---------+----------+
evaluation (internal):
+--------+-------------------+
| Column | Data              |
+--------+-------------------+
| a      | Int8([1, 2, 3])   |
| b      | Int16([2, 4, 6])  |
| Output | Int32([2, 8, 18]) |
+--------+-------------------+


ast            : a2 * 10
raw expr       : multiply(#1::UInt8 NULL, 10_u8)
checked expr   : multiply<UInt8 NULL, UInt8 NULL>(#1, CAST(10_u8 AS UInt8 NULL))
optimized expr : multiply<UInt8 NULL, UInt8 NULL>(#1, 10_u8)
evaluation:
+--------+------------------+--------------------+
|        | a2               | Output             |
+--------+------------------+--------------------+
| Type   | UInt8 NULL       | UInt16 NULL        |
| Domain | {1..=3} ∪ {NULL} | {10..=30} ∪ {NULL} |
| Row 0  | 1_u8             | 10_u16             |
| Row 1  | 2_u8             | 20_u16             |
| Row 2  | NULL             | NULL               |
+--------+------------------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }     |
| Output | NullableColumn { column: UInt16([10, 20, 30]), validity: [0b_____011] } |
+--------+-------------------------------------------------------------------------+


ast            : a2 * c
raw expr       : multiply(#1::UInt8 NULL, #3::UInt32)
checked expr   : multiply<UInt8 NULL, UInt32 NULL>(#1, CAST(#3 AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+--------------------+
|        | a2               | c         | Output             |
+--------+------------------+-----------+--------------------+
| Type   | UInt8 NULL       | UInt32    | UInt64 NULL        |
| Domain | {1..=3} ∪ {NULL} | {10..=30} | {10..=90} ∪ {NULL} |
| Row 0  | 1_u8             | 10_u32    | 10_u64             |
| Row 1  | 2_u8             | 20_u32    | 40_u64             |
| Row 2  | NULL             | 30_u32    | NULL               |
+--------+------------------+-----------+--------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }     |
| c      | UInt32([10, 20, 30])                                                    |
| Output | NullableColumn { column: UInt64([10, 40, 90]), validity: [0b_____011] } |
+--------+-------------------------------------------------------------------------+


ast            : c * b
raw expr       : multiply(#3::UInt32, #2::Int16)
checked expr   : multiply<UInt32, Int16>(#3, #2)
evaluation:
+--------+---------+-----------+------------+
|        | b       | c         | Output     |
+--------+---------+-----------+------------+
| Type   | Int16   | UInt32    | Int64      |
| Domain | {2..=6} | {10..=30} | {20..=180} |
| Row 0  | 2_i16   | 10_u32    | 20_i64     |
| Row 1  | 4_i16   | 20_u32    | 80_i64     |
| Row 2  | 6_i16   | 30_u32    | 180_i64    |
+--------+---------+-----------+------------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int64([20, 80, 180]) |
+--------+----------------------+


ast            : c * d
raw expr       : multiply(#3::UInt32, #4::Float64)
checked expr   : multiply<UInt32, Float64>(#3, #4)
evaluation:
+--------+-----------+------------+--------------+
|        | c         | d          | Output       |
+--------+-----------+------------+--------------+
| Type   | UInt32    | Float64    | Float64      |
| Domain | {10..=30} | {-20..=30} | {-600..=900} |
| Row 0  | 10_u32    | 10_f64     | 100_f64      |
| Row 1  | 20_u32    | -20_f64    | -400_f64     |
| Row 2  | 30_u32    | 30_f64     | 900_f64      |
+--------+-----------+------------+--------------+
evaluation (internal):
+--------+---------------------------+
| Column | Data                      |
+--------+---------------------------+
| c      | UInt32([10, 20, 30])      |
| d      | Float64([10, -20, 30])    |
| Output | Float64([100, -400, 900]) |
+--------+---------------------------+


ast            : a / b
raw expr       : divide(#0::Int8, #2::Int16)
checked expr   : divide<Int8, Int16>(#0, #2)
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Int8    | Int16   | Float64 |
| Domain | {1..=3} | {2..=6} | Unknown |
| Row 0  | 1_i8    | 2_i16   | 0.5_f64 |
| Row 1  | 2_i8    | 4_i16   | 0.5_f64 |
| Row 2  | 3_i8    | 6_i16   | 0.5_f64 |
+--------+---------+---------+---------+
evaluation (internal):
+--------+--------------------------+
| Column | Data                     |
+--------+--------------------------+
| a      | Int8([1, 2, 3])          |
| b      | Int16([2, 4, 6])         |
| Output | Float64([0.5, 0.5, 0.5]) |
+--------+--------------------------+


ast            : a2 / 10
raw expr       : divide(#1::UInt8 NULL, 10_u8)
checked expr   : divide<UInt8 NULL, UInt8 NULL>(#1, CAST(10_u8 AS UInt8 NULL))
optimized expr : divide<UInt8 NULL, UInt8 NULL>(#1, 10_u8)
evaluation:
+--------+------------------+--------------+
|        | a2               | Output       |
+--------+------------------+--------------+
| Type   | UInt8 NULL       | Float64 NULL |
| Domain | {1..=3} ∪ {NULL} | Unknown      |
| Row 0  | 1_u8             | 0.1_f64      |
| Row 1  | 2_u8             | 0.2_f64      |
| Row 2  | NULL             | NULL         |
+--------+------------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------+
| Column | Data                                                                      |
+--------+---------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }       |
| Output | NullableColumn { column: Float64([0.1, 0.2, 0]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------------+


ast            : a2 / c
raw expr       : divide(#1::UInt8 NULL, #3::UInt32)
checked expr   : divide<UInt8 NULL, UInt32 NULL>(#1, CAST(#3 AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+--------------+
|        | a2               | c         | Output       |
+--------+------------------+-----------+--------------+
| Type   | UInt8 NULL       | UInt32    | Float64 NULL |
| Domain | {1..=3} ∪ {NULL} | {10..=30} | Unknown      |
| Row 0  | 1_u8             | 10_u32    | 0.1_f64      |
| Row 1  | 2_u8             | 20_u32    | 0.1_f64      |
| Row 2  | NULL             | 30_u32    | NULL         |
+--------+------------------+-----------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------+
| Column | Data                                                                      |
+--------+---------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }       |
| c      | UInt32([10, 20, 30])                                                      |
| Output | NullableColumn { column: Float64([0.1, 0.1, 0]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------------+


ast            : divide(c, b)
raw expr       : divide(#3::UInt32, #2::Int16)
checked expr   : divide<UInt32, Int16>(#3, #2)
evaluation:
+--------+---------+-----------+---------+
|        | b       | c         | Output  |
+--------+---------+-----------+---------+
| Type   | Int16   | UInt32    | Float64 |
| Domain | {2..=6} | {10..=30} | Unknown |
| Row 0  | 2_i16   | 10_u32    | 5_f64   |
| Row 1  | 4_i16   | 20_u32    | 5_f64   |
| Row 2  | 6_i16   | 30_u32    | 5_f64   |
+--------+---------+-----------+---------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Float64([5, 5, 5])   |
+--------+----------------------+


ast            : c / d
raw expr       : divide(#3::UInt32, #4::Float64)
checked expr   : divide<UInt32, Float64>(#3, #4)
evaluation:
+--------+-----------+------------+---------+
|        | c         | d          | Output  |
+--------+-----------+------------+---------+
| Type   | UInt32    | Float64    | Float64 |
| Domain | {10..=30} | {-20..=30} | Unknown |
| Row 0  | 10_u32    | 10_f64     | 1_f64   |
| Row 1  | 20_u32    | -20_f64    | -1_f64  |
| Row 2  | 30_u32    | 30_f64     | 1_f64   |
+--------+-----------+------------+---------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Float64([1, -1, 1])    |
+--------+------------------------+


ast            : b / d2
raw expr       : divide(#2::Int16, #5::UInt8 NULL)
checked expr   : divide<Int16 NULL, UInt8 NULL>(CAST(#2 AS Int16 NULL), #5)
evaluation:
+--------+---------+------------------+--------------+
|        | b       | d2               | Output       |
+--------+---------+------------------+--------------+
| Type   | Int16   | UInt8 NULL       | Float64 NULL |
| Domain | {2..=6} | {0..=3} ∪ {NULL} | Unknown      |
| Row 0  | 2_i16   | 1_u8             | 2_f64        |
| Row 1  | 4_i16   | NULL             | NULL         |
| Row 2  | 6_i16   | 3_u8             | 2_f64        |
+--------+---------+------------------+--------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------+
| Column | Data                                                                  |
+--------+-----------------------------------------------------------------------+
| b      | Int16([2, 4, 6])                                                      |
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }   |
| Output | NullableColumn { column: Float64([2, 0, 2]), validity: [0b_____101] } |
+--------+-----------------------------------------------------------------------+


error: 
  --> SQL:1:5
  |
1 | 2.0 / 0
  |     ^ / by zero



ast            : a  div b
raw expr       : div(#0::Int8, #2::Int16)
checked expr   : div<Int8, Int16>(#0, #2)
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Int8    | Int16   | Int16   |
| Domain | {1..=3} | {2..=6} | Unknown |
| Row 0  | 1_i8    | 2_i16   | 0_i16   |
| Row 1  | 2_i8    | 4_i16   | 0_i16   |
| Row 2  | 3_i8    | 6_i16   | 0_i16   |
+--------+---------+---------+---------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int16([0, 0, 0]) |
+--------+------------------+


ast            : a2 div 10
raw expr       : div(#1::UInt8 NULL, 10_u8)
checked expr   : div<UInt8 NULL, UInt8 NULL>(#1, CAST(10_u8 AS UInt8 NULL))
optimized expr : div<UInt8 NULL, UInt8 NULL>(#1, 10_u8)
evaluation:
+--------+------------------+------------+
|        | a2               | Output     |
+--------+------------------+------------+
| Type   | UInt8 NULL       | UInt8 NULL |
| Domain | {1..=3} ∪ {NULL} | Unknown    |
| Row 0  | 1_u8             | 0_u8       |
| Row 1  | 2_u8             | 0_u8       |
| Row 2  | NULL             | NULL       |
+--------+------------------+------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
| Output | NullableColumn { column: UInt8([0, 0, 0]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : a2 div c
raw expr       : div(#1::UInt8 NULL, #3::UInt32)
checked expr   : div<UInt8 NULL, UInt32 NULL>(#1, CAST(#3 AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+-------------+
|        | a2               | c         | Output      |
+--------+------------------+-----------+-------------+
| Type   | UInt8 NULL       | UInt32    | UInt32 NULL |
| Domain | {1..=3} ∪ {NULL} | {10..=30} | Unknown     |
| Row 0  | 1_u8             | 10_u32    | 0_u32       |
| Row 1  | 2_u8             | 20_u32    | 0_u32       |
| Row 2  | NULL             | 30_u32    | NULL        |
+--------+------------------+-----------+-------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }  |
| c      | UInt32([10, 20, 30])                                                 |
| Output | NullableColumn { column: UInt32([0, 0, 0]), validity: [0b_____011] } |
+--------+----------------------------------------------------------------------+


ast            : c div b
raw expr       : div(#3::UInt32, #2::Int16)
checked expr   : div<UInt32, Int16>(#3, #2)
evaluation:
+--------+---------+-----------+---------+
|        | b       | c         | Output  |
+--------+---------+-----------+---------+
| Type   | Int16   | UInt32    | Int32   |
| Domain | {2..=6} | {10..=30} | Unknown |
| Row 0  | 2_i16   | 10_u32    | 5_i32   |
| Row 1  | 4_i16   | 20_u32    | 5_i32   |
| Row 2  | 6_i16   | 30_u32    | 5_i32   |
+--------+---------+-----------+---------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | Int32([5, 5, 5])     |
+--------+----------------------+


ast            : c div d
raw expr       : div(#3::UInt32, #4::Float64)
checked expr   : div<UInt32, Float64>(#3, #4)
evaluation:
+--------+-----------+------------+---------+
|        | c         | d          | Output  |
+--------+-----------+------------+---------+
| Type   | UInt32    | Float64    | Int64   |
| Domain | {10..=30} | {-20..=30} | Unknown |
| Row 0  | 10_u32    | 10_f64     | 1_i64   |
| Row 1  | 20_u32    | -20_f64    | -1_i64  |
| Row 2  | 30_u32    | 30_f64     | 1_i64   |
+--------+-----------+------------+---------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Int64([1, -1, 1])      |
+--------+------------------------+


ast            : c div d2
raw expr       : div(#3::UInt32, #5::UInt8 NULL)
checked expr   : div<UInt32 NULL, UInt8 NULL>(CAST(#3 AS UInt32 NULL), #5)
evaluation:
+--------+-----------+------------------+-------------+
|        | c         | d2               | Output      |
+--------+-----------+------------------+-------------+
| Type   | UInt32    | UInt8 NULL       | UInt32 NULL |
| Domain | {10..=30} | {0..=3} ∪ {NULL} | Unknown     |
| Row 0  | 10_u32    | 1_u8             | 10_u32      |
| Row 1  | 20_u32    | NULL             | NULL        |
| Row 2  | 30_u32    | 3_u8             | 10_u32      |
+--------+-----------+------------------+-------------+
evaluation (internal):
+--------+------------------------------------------------------------------------+
| Column | Data                                                                   |
+--------+------------------------------------------------------------------------+
| c      | UInt32([10, 20, 30])                                                   |
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }    |
| Output | NullableColumn { column: UInt32([10, 0, 10]), validity: [0b_____101] } |
+--------+------------------------------------------------------------------------+


error: 
  --> SQL:1:3
  |
1 | c div 0
  |   ^^^ Division by zero



ast            : (a + 3)  % b
raw expr       : modulo(plus(#0::Int8, 3_u8), #2::Int16)
checked expr   : modulo<Int16, Int16>(plus<Int8, UInt8>(#0, 3_u8), #2)
evaluation:
+--------+---------+---------+---------+
|        | a       | b       | Output  |
+--------+---------+---------+---------+
| Type   | Int8    | Int16   | Int32   |
| Domain | {1..=3} | {2..=6} | Unknown |
| Row 0  | 1_i8    | 2_i16   | 0_i32   |
| Row 1  | 2_i8    | 4_i16   | 1_i32   |
| Row 2  | 3_i8    | 6_i16   | 0_i32   |
+--------+---------+---------+---------+
evaluation (internal):
+--------+------------------+
| Column | Data             |
+--------+------------------+
| a      | Int8([1, 2, 3])  |
| b      | Int16([2, 4, 6]) |
| Output | Int32([0, 1, 0]) |
+--------+------------------+


ast            : a2 % 4
raw expr       : modulo(#1::UInt8 NULL, 4_u8)
checked expr   : modulo<UInt8 NULL, UInt8 NULL>(#1, CAST(4_u8 AS UInt8 NULL))
optimized expr : modulo<UInt8 NULL, UInt8 NULL>(#1, 4_u8)
evaluation:
+--------+------------------+------------+
|        | a2               | Output     |
+--------+------------------+------------+
| Type   | UInt8 NULL       | UInt8 NULL |
| Domain | {1..=3} ∪ {NULL} | Unknown    |
| Row 0  | 1_u8             | 1_u8       |
| Row 1  | 2_u8             | 2_u8       |
| Row 2  | NULL             | NULL       |
+--------+------------------+------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] } |
| Output | NullableColumn { column: UInt8([1, 2, 0]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : (a2 + 4) % c
raw expr       : modulo(plus(#1::UInt8 NULL, 4_u8), #3::UInt32)
checked expr   : modulo<UInt16 NULL, UInt32 NULL>(plus<UInt8 NULL, UInt8 NULL>(#1, CAST(4_u8 AS UInt8 NULL)), CAST(#3 AS UInt32 NULL))
optimized expr : modulo<UInt16 NULL, UInt32 NULL>(plus<UInt8 NULL, UInt8 NULL>(#1, 4_u8), CAST(#3 AS UInt32 NULL))
evaluation:
+--------+------------------+-----------+-------------+
|        | a2               | c         | Output      |
+--------+------------------+-----------+-------------+
| Type   | UInt8 NULL       | UInt32    | UInt32 NULL |
| Domain | {1..=3} ∪ {NULL} | {10..=30} | Unknown     |
| Row 0  | 1_u8             | 10_u32    | 5_u32       |
| Row 1  | 2_u8             | 20_u32    | 6_u32       |
| Row 2  | NULL             | 30_u32    | NULL        |
+--------+------------------+-----------+-------------+
evaluation (internal):
+--------+----------------------------------------------------------------------+
| Column | Data                                                                 |
+--------+----------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }  |
| c      | UInt32([10, 20, 30])                                                 |
| Output | NullableColumn { column: UInt32([5, 6, 0]), validity: [0b_____011] } |
+--------+----------------------------------------------------------------------+


ast            : c % (b + 3)
raw expr       : modulo(#3::UInt32, plus(#2::Int16, 3_u8))
checked expr   : modulo<UInt32, Int32>(#3, plus<Int16, UInt8>(#2, 3_u8))
evaluation:
+--------+---------+-----------+---------+
|        | b       | c         | Output  |
+--------+---------+-----------+---------+
| Type   | Int16   | UInt32    | UInt32  |
| Domain | {2..=6} | {10..=30} | Unknown |
| Row 0  | 2_i16   | 10_u32    | 0_u32   |
| Row 1  | 4_i16   | 20_u32    | 6_u32   |
| Row 2  | 6_i16   | 30_u32    | 3_u32   |
+--------+---------+-----------+---------+
evaluation (internal):
+--------+----------------------+
| Column | Data                 |
+--------+----------------------+
| b      | Int16([2, 4, 6])     |
| c      | UInt32([10, 20, 30]) |
| Output | UInt32([0, 6, 3])    |
+--------+----------------------+


ast            : c % (d - 3)
raw expr       : modulo(#3::UInt32, minus(#4::Float64, 3_u8))
checked expr   : modulo<UInt32, Float64>(#3, minus<Float64, UInt8>(#4, 3_u8))
evaluation:
+--------+-----------+------------+---------+
|        | c         | d          | Output  |
+--------+-----------+------------+---------+
| Type   | UInt32    | Float64    | Float64 |
| Domain | {10..=30} | {-20..=30} | Unknown |
| Row 0  | 10_u32    | 10_f64     | 3_f64   |
| Row 1  | 20_u32    | -20_f64    | 20_f64  |
| Row 2  | 30_u32    | 30_f64     | 3_f64   |
+--------+-----------+------------+---------+
evaluation (internal):
+--------+------------------------+
| Column | Data                   |
+--------+------------------------+
| c      | UInt32([10, 20, 30])   |
| d      | Float64([10, -20, 30]) |
| Output | Float64([3, 20, 3])    |
+--------+------------------------+


error: 
  --> SQL:1:3
  |
1 | c % 0
  |   ^ Division by zero



ast            : c % d2
raw expr       : modulo(#3::UInt32, #5::UInt8 NULL)
checked expr   : modulo<UInt32 NULL, UInt8 NULL>(CAST(#3 AS UInt32 NULL), #5)
evaluation:
+--------+-----------+------------------+------------+
|        | c         | d2               | Output     |
+--------+-----------+------------------+------------+
| Type   | UInt32    | UInt8 NULL       | UInt8 NULL |
| Domain | {10..=30} | {0..=3} ∪ {NULL} | Unknown    |
| Row 0  | 10_u32    | 1_u8             | 0_u8       |
| Row 1  | 20_u32    | NULL             | NULL       |
| Row 2  | 30_u32    | 3_u8             | 0_u8       |
+--------+-----------+------------------+------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| c      | UInt32([10, 20, 30])                                                |
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] } |
| Output | NullableColumn { column: UInt8([0, 0, 0]), validity: [0b_____101] } |
+--------+---------------------------------------------------------------------+


ast            : to_string(a)
raw expr       : to_string(#0::Int8)
checked expr   : to_string<Int8>(#0)
evaluation:
+--------+---------+--------+
|        | a       | Output |
+--------+---------+--------+
| Type   | Int8    | String |
| Domain | {1..=3} | {""..} |
| Row 0  | 1_i8    | "1"    |
| Row 1  | 2_i8    | "2"    |
| Row 2  | 3_i8    | "3"    |
+--------+---------+--------+
evaluation (internal):
+--------+--------------------------------------------------------+
| Column | Data                                                   |
+--------+--------------------------------------------------------+
| a      | Int8([1, 2, 3])                                        |
| Output | StringColumn { data: 0x313233, offsets: [0, 1, 2, 3] } |
+--------+--------------------------------------------------------+


ast            : to_string(a2)
raw expr       : to_string(#1::UInt8 NULL)
checked expr   : to_string<UInt8 NULL>(#1)
evaluation:
+--------+------------------+-----------------+
|        | a2               | Output          |
+--------+------------------+-----------------+
| Type   | UInt8 NULL       | String NULL     |
| Domain | {1..=3} ∪ {NULL} | {""..} ∪ {NULL} |
| Row 0  | 1_u8             | "1"             |
| Row 1  | 2_u8             | "2"             |
| Row 2  | NULL             | NULL            |
+--------+------------------+-----------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                      |
+--------+-----------------------------------------------------------------------------------------------------------+
| a2     | NullableColumn { column: UInt8([1, 2, 3]), validity: [0b_____011] }                                       |
| Output | NullableColumn { column: StringColumn { data: 0x313233, offsets: [0, 1, 2, 3] }, validity: [0b_____011] } |
+--------+-----------------------------------------------------------------------------------------------------------+


ast            : to_string(b)
raw expr       : to_string(#2::Int16)
checked expr   : to_string<Int16>(#2)
evaluation:
+--------+---------+--------+
|        | b       | Output |
+--------+---------+--------+
| Type   | Int16   | String |
| Domain | {2..=6} | {""..} |
| Row 0  | 2_i16   | "2"    |
| Row 1  | 4_i16   | "4"    |
| Row 2  | 6_i16   | "6"    |
+--------+---------+--------+
evaluation (internal):
+--------+--------------------------------------------------------+
| Column | Data                                                   |
+--------+--------------------------------------------------------+
| b      | Int16([2, 4, 6])                                       |
| Output | StringColumn { data: 0x323436, offsets: [0, 1, 2, 3] } |
+--------+--------------------------------------------------------+


ast            : to_string(c)
raw expr       : to_string(#3::UInt32)
checked expr   : to_string<UInt32>(#3)
evaluation:
+--------+-----------+--------+
|        | c         | Output |
+--------+-----------+--------+
| Type   | UInt32    | String |
| Domain | {10..=30} | {""..} |
| Row 0  | 10_u32    | "10"   |
| Row 1  | 20_u32    | "20"   |
| Row 2  | 30_u32    | "30"   |
+--------+-----------+--------+
evaluation (internal):
+--------+--------------------------------------------------------------+
| Column | Data                                                         |
+--------+--------------------------------------------------------------+
| c      | UInt32([10, 20, 30])                                         |
| Output | StringColumn { data: 0x313032303330, offsets: [0, 2, 4, 6] } |
+--------+--------------------------------------------------------------+


ast            : to_string(d)
raw expr       : to_string(#4::Float64)
checked expr   : to_string<Float64>(#4)
evaluation:
+--------+------------+--------+
|        | d          | Output |
+--------+------------+--------+
| Type   | Float64    | String |
| Domain | {-20..=30} | {""..} |
| Row 0  | 10_f64     | "10"   |
| Row 1  | -20_f64    | "-20"  |
| Row 2  | 30_f64     | "30"   |
+--------+------------+--------+
evaluation (internal):
+--------+----------------------------------------------------------------+
| Column | Data                                                           |
+--------+----------------------------------------------------------------+
| d      | Float64([10, -20, 30])                                         |
| Output | StringColumn { data: 0x31302d32303330, offsets: [0, 2, 5, 7] } |
+--------+----------------------------------------------------------------+


ast            : to_string(d2)
raw expr       : to_string(#5::UInt8 NULL)
checked expr   : to_string<UInt8 NULL>(#5)
evaluation:
+--------+------------------+-----------------+
|        | d2               | Output          |
+--------+------------------+-----------------+
| Type   | UInt8 NULL       | String NULL     |
| Domain | {0..=3} ∪ {NULL} | {""..} ∪ {NULL} |
| Row 0  | 1_u8             | "1"             |
| Row 1  | NULL             | NULL            |
| Row 2  | 3_u8             | "3"             |
+--------+------------------+-----------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                      |
+--------+-----------------------------------------------------------------------------------------------------------+
| d2     | NullableColumn { column: UInt8([1, 0, 3]), validity: [0b_____101] }                                       |
| Output | NullableColumn { column: StringColumn { data: 0x313033, offsets: [0, 1, 2, 3] }, validity: [0b_____101] } |
+--------+-----------------------------------------------------------------------------------------------------------+


