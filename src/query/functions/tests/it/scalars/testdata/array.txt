ast            : []
raw expr       : array()
checked expr   : array<>()
optimized expr : [] :: Array(Nothing)
output type    : Array(Nothing)
output domain  : []
output         : []


ast            : [NULL, 8, -10]
raw expr       : array(NULL, 8_u8, minus(10_u8))
checked expr   : array<T0=Int16 NULL><T0, T0, T0>(CAST(NULL AS Int16 NULL), CAST(8_u8 AS Int16 NULL), CAST(minus<UInt8>(10_u8) AS Int16 NULL))
optimized expr : [NULL, 8_i16, -10_i16]
output type    : Array(Int16 NULL)
output domain  : [{-10..=8} ∪ {NULL}]
output         : [NULL, 8_i16, -10_i16]


ast            : [['a', 'b'], []]
raw expr       : array(array("a", "b"), array())
checked expr   : array<T0=Array(String)><T0, T0>(array<T0=String><T0, T0>("a", "b"), CAST(array<>() AS Array(String)))
optimized expr : [["a", "b"], []]
output type    : Array(Array(String))
output domain  : [[{"a"..="b"}]]
output         : [["a", "b"], []]


ast            : ['a', 1, parse_json('{"foo":"bar"}')]
raw expr       : array("a", 1_u8, parse_json("{\"foo\":\"bar\"}"))
checked expr   : array<T0=Variant><T0, T0, T0>(CAST("a" AS Variant), CAST(1_u8 AS Variant), parse_json<String>("{\"foo\":\"bar\"}"))
optimized expr : ["a", 1, {"foo":"bar"}]
output type    : Array(Variant)
output domain  : [Undefined]
output         : ["a", 1, {"foo":"bar"}]


ast            : [parse_json('[]'), parse_json('{"foo":"bar"}')]
raw expr       : array(parse_json("[]"), parse_json("{\"foo\":\"bar\"}"))
checked expr   : array<T0=Variant><T0, T0>(parse_json<String>("[]"), parse_json<String>("{\"foo\":\"bar\"}"))
optimized expr : [[], {"foo":"bar"}]
output type    : Array(Variant)
output domain  : [Undefined]
output         : [[], {"foo":"bar"}]


ast            : length([])
raw expr       : length(array())
checked expr   : length<Array(Nothing)>(array<>())
optimized expr : 0_u8
output type    : UInt8
output domain  : {0..=0}
output         : 0_u8


ast            : length([1, 2, 3])
raw expr       : length(array(1_u8, 2_u8, 3_u8))
checked expr   : length<T0=UInt8><Array(T0)>(array<T0=UInt8><T0, T0, T0>(1_u8, 2_u8, 3_u8))
optimized expr : 3_u64
output type    : UInt64
output domain  : {3..=3}
output         : 3_u64


ast            : length([true, false])
raw expr       : length(array(true, false))
checked expr   : length<T0=Boolean><Array(T0)>(array<T0=Boolean><T0, T0>(true, false))
optimized expr : 2_u64
output type    : UInt64
output domain  : {2..=2}
output         : 2_u64


ast            : length(['a', 'b', 'c', 'd'])
raw expr       : length(array("a", "b", "c", "d"))
checked expr   : length<T0=String><Array(T0)>(array<T0=String><T0, T0, T0, T0>("a", "b", "c", "d"))
optimized expr : 4_u64
output type    : UInt64
output domain  : {4..=4}
output         : 4_u64


error: 
  --> SQL:1:7
  |
1 | [1, 2]['a']
  |       ^^^^^ no overload satisfies `get(Array(UInt8), String)`

has tried possible overloads:
  get(Array(Nothing) NULL, UInt64 NULL) :: NULL     : unable to unify `Array(UInt8)` with `Array(Nothing)`
  get(Array(T0 NULL), UInt64) :: T0 NULL            : unable to unify `String` with `UInt64`
  get(Array(T0 NULL) NULL, UInt64 NULL) :: T0 NULL  : unable to unify `String` with `UInt64`
  get(Array(T0), UInt64) :: T0 NULL                 : unable to unify `String` with `UInt64`
  get(Array(T0) NULL, UInt64 NULL) :: T0 NULL       : unable to unify `String` with `UInt64`
  get(Variant NULL, UInt64 NULL) :: Variant NULL    : unable to unify `Array(UInt8)` with `Variant`
  get(Variant NULL, String NULL) :: Variant NULL    : unable to unify `Array(UInt8)` with `Variant`



ast            : [][1]
raw expr       : get(array(), 1_u8)
checked expr   : get<Array(Nothing) NULL, UInt64 NULL>(CAST(array<>() AS Array(Nothing) NULL), CAST(1_u8 AS UInt64 NULL))
optimized expr : NULL
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : [][NULL]
raw expr       : get(array(), NULL)
checked expr   : get<Array(Nothing) NULL, UInt64 NULL>(CAST(array<>() AS Array(Nothing) NULL), CAST(NULL AS UInt64 NULL))
optimized expr : NULL
output type    : NULL
output domain  : {NULL}
output         : NULL


ast            : [true, false][1]
raw expr       : get(array(true, false), 1_u8)
checked expr   : get<T0=Boolean><Array(T0 NULL), UInt64>(CAST(array<T0=Boolean><T0, T0>(true, false) AS Array(Boolean NULL)), CAST(1_u8 AS UInt64))
optimized expr : true
output type    : Boolean NULL
output domain  : {TRUE}
output         : true


ast            : ['a', 'b', 'c'][2]
raw expr       : get(array("a", "b", "c"), 2_u8)
checked expr   : get<T0=String><Array(T0 NULL), UInt64>(CAST(array<T0=String><T0, T0, T0>("a", "b", "c") AS Array(String NULL)), CAST(2_u8 AS UInt64))
optimized expr : "b"
output type    : String NULL
output domain  : {"b"..="b"}
output         : "b"


ast            : [1, 2, 3][1]
raw expr       : get(array(1_u8, 2_u8, 3_u8), 1_u8)
checked expr   : get<T0=UInt8><Array(T0 NULL), UInt64>(CAST(array<T0=UInt8><T0, T0, T0>(1_u8, 2_u8, 3_u8) AS Array(UInt8 NULL)), CAST(1_u8 AS UInt64))
optimized expr : 1_u8
output type    : UInt8 NULL
output domain  : {1..=1}
output         : 1_u8


ast            : [1, 2, 3][3]
raw expr       : get(array(1_u8, 2_u8, 3_u8), 3_u8)
checked expr   : get<T0=UInt8><Array(T0 NULL), UInt64>(CAST(array<T0=UInt8><T0, T0, T0>(1_u8, 2_u8, 3_u8) AS Array(UInt8 NULL)), CAST(3_u8 AS UInt64))
optimized expr : 3_u8
output type    : UInt8 NULL
output domain  : {3..=3}
output         : 3_u8


ast            : [1, null, 3][1]
raw expr       : get(array(1_u8, NULL, 3_u8), 1_u8)
checked expr   : get<T0=UInt8><Array(T0 NULL), UInt64>(array<T0=UInt8 NULL><T0, T0, T0>(CAST(1_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL), CAST(3_u8 AS UInt8 NULL)), CAST(1_u8 AS UInt64))
optimized expr : 1_u8
output type    : UInt8 NULL
output domain  : {1..=1}
output         : 1_u8


ast            : [1, null, 3][2]
raw expr       : get(array(1_u8, NULL, 3_u8), 2_u8)
checked expr   : get<T0=UInt8><Array(T0 NULL), UInt64>(array<T0=UInt8 NULL><T0, T0, T0>(CAST(1_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL), CAST(3_u8 AS UInt8 NULL)), CAST(2_u8 AS UInt64))
optimized expr : NULL
output type    : UInt8 NULL
output domain  : {NULL}
output         : NULL


ast            : [1, 2, 3][4]
raw expr       : get(array(1_u8, 2_u8, 3_u8), 4_u8)
checked expr   : get<T0=UInt8><Array(T0 NULL), UInt64>(CAST(array<T0=UInt8><T0, T0, T0>(1_u8, 2_u8, 3_u8) AS Array(UInt8 NULL)), CAST(4_u8 AS UInt64))
optimized expr : NULL
output type    : UInt8 NULL
output domain  : {NULL}
output         : NULL


ast            : [a, b][idx]
raw expr       : get(array(a::Int16, b::Int16), idx::UInt16)
checked expr   : get<T0=Int16><Array(T0 NULL), UInt64>(CAST(array<T0=Int16><T0, T0>(a, b) AS Array(Int16 NULL)), CAST(idx AS UInt64))
evaluation:
+--------+---------+---------+---------+------------------+
|        | a       | b       | idx     | Output           |
+--------+---------+---------+---------+------------------+
| Type   | Int16   | Int16   | UInt16  | Int16 NULL       |
| Domain | {0..=2} | {3..=5} | {1..=3} | {0..=5} ∪ {NULL} |
| Row 0  | 0_i16   | 3_i16   | 1_u16   | 0_i16            |
| Row 1  | 1_i16   | 4_i16   | 2_u16   | 4_i16            |
| Row 2  | 2_i16   | 5_i16   | 3_u16   | NULL             |
+--------+---------+---------+---------+------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------+
| Column | Data                                                                |
+--------+---------------------------------------------------------------------+
| a      | Int16([0, 1, 2])                                                    |
| b      | Int16([3, 4, 5])                                                    |
| idx    | UInt16([1, 2, 3])                                                   |
| Output | NullableColumn { column: Int16([0, 4, 0]), validity: [0b_____011] } |
+--------+---------------------------------------------------------------------+


ast            : slice([], 1, 2)
raw expr       : slice(array(), 1_u8, 2_u8)
checked expr   : slice<Array(Nothing), UInt64, UInt64>(array<>(), CAST(1_u8 AS UInt64), CAST(2_u8 AS UInt64))
optimized expr : [] :: Array(Nothing)
output type    : Array(Nothing)
output domain  : []
output         : []


ast            : slice([1], 1, 2)
raw expr       : slice(array(1_u8), 1_u8, 2_u8)
checked expr   : slice<T0=UInt8><Array(T0), UInt64, UInt64>(array<T0=UInt8><T0>(1_u8), CAST(1_u8 AS UInt64), CAST(2_u8 AS UInt64))
optimized expr : [1_u8]
output type    : Array(UInt8)
output domain  : [{1..=1}]
output         : [1_u8]


ast            : slice([NULL, 1, 2, 3], 0, 2)
raw expr       : slice(array(NULL, 1_u8, 2_u8, 3_u8), 0_u8, 2_u8)
checked expr   : slice<T0=UInt8 NULL><Array(T0), UInt64, UInt64>(array<T0=UInt8 NULL><T0, T0, T0, T0>(CAST(NULL AS UInt8 NULL), CAST(1_u8 AS UInt8 NULL), CAST(2_u8 AS UInt8 NULL), CAST(3_u8 AS UInt8 NULL)), CAST(0_u8 AS UInt64), CAST(2_u8 AS UInt64))
optimized expr : [NULL, 1_u8]
output type    : Array(UInt8 NULL)
output domain  : [{0..=1} ∪ {NULL}]
output         : [NULL, 1_u8]


ast            : slice([0, 1, 2, 3], 1, 2)
raw expr       : slice(array(0_u8, 1_u8, 2_u8, 3_u8), 1_u8, 2_u8)
checked expr   : slice<T0=UInt8><Array(T0), UInt64, UInt64>(array<T0=UInt8><T0, T0, T0, T0>(0_u8, 1_u8, 2_u8, 3_u8), CAST(1_u8 AS UInt64), CAST(2_u8 AS UInt64))
optimized expr : [0_u8, 1_u8]
output type    : Array(UInt8)
output domain  : [{0..=1}]
output         : [0_u8, 1_u8]


ast            : slice([0, 1, 2, 3], 1, 5)
raw expr       : slice(array(0_u8, 1_u8, 2_u8, 3_u8), 1_u8, 5_u8)
checked expr   : slice<T0=UInt8><Array(T0), UInt64, UInt64>(array<T0=UInt8><T0, T0, T0, T0>(0_u8, 1_u8, 2_u8, 3_u8), CAST(1_u8 AS UInt64), CAST(5_u8 AS UInt64))
optimized expr : [0_u8, 1_u8, 2_u8, 3_u8]
output type    : Array(UInt8)
output domain  : [{0..=3}]
output         : [0_u8, 1_u8, 2_u8, 3_u8]


ast            : slice(['a', 'b', 'c', 'd'], 0, 2)
raw expr       : slice(array("a", "b", "c", "d"), 0_u8, 2_u8)
checked expr   : slice<T0=String><Array(T0), UInt64, UInt64>(array<T0=String><T0, T0, T0, T0>("a", "b", "c", "d"), CAST(0_u8 AS UInt64), CAST(2_u8 AS UInt64))
optimized expr : ["a", "b"]
output type    : Array(String)
output domain  : [{"a"..="b"}]
output         : ["a", "b"]


ast            : slice(['a', 'b', 'c', 'd'], 1, 4)
raw expr       : slice(array("a", "b", "c", "d"), 1_u8, 4_u8)
checked expr   : slice<T0=String><Array(T0), UInt64, UInt64>(array<T0=String><T0, T0, T0, T0>("a", "b", "c", "d"), CAST(1_u8 AS UInt64), CAST(4_u8 AS UInt64))
optimized expr : ["a", "b", "c", "d"]
output type    : Array(String)
output domain  : [{"a"..="d"}]
output         : ["a", "b", "c", "d"]


ast            : slice(['a', 'b', 'c', 'd'], 2, 6)
raw expr       : slice(array("a", "b", "c", "d"), 2_u8, 6_u8)
checked expr   : slice<T0=String><Array(T0), UInt64, UInt64>(array<T0=String><T0, T0, T0, T0>("a", "b", "c", "d"), CAST(2_u8 AS UInt64), CAST(6_u8 AS UInt64))
optimized expr : ["b", "c", "d"]
output type    : Array(String)
output domain  : [{"b"..="d"}]
output         : ["b", "c", "d"]


ast            : remove_first([])
raw expr       : remove_first(array())
checked expr   : remove_first<Array(Nothing)>(array<>())
optimized expr : [] :: Array(Nothing)
output type    : Array(Nothing)
output domain  : []
output         : []


ast            : remove_first([1])
raw expr       : remove_first(array(1_u8))
checked expr   : remove_first<T0=UInt8><Array(T0)>(array<T0=UInt8><T0>(1_u8))
optimized expr : []
output type    : Array(UInt8)
output domain  : []
output         : []


ast            : remove_first([0, 1, 2, NULL])
raw expr       : remove_first(array(0_u8, 1_u8, 2_u8, NULL))
checked expr   : remove_first<T0=UInt8 NULL><Array(T0)>(array<T0=UInt8 NULL><T0, T0, T0, T0>(CAST(0_u8 AS UInt8 NULL), CAST(1_u8 AS UInt8 NULL), CAST(2_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL)))
optimized expr : [1_u8, 2_u8, NULL]
output type    : Array(UInt8 NULL)
output domain  : [{0..=2} ∪ {NULL}]
output         : [1_u8, 2_u8, NULL]


ast            : remove_first([0, 1, 2, 3])
raw expr       : remove_first(array(0_u8, 1_u8, 2_u8, 3_u8))
checked expr   : remove_first<T0=UInt8><Array(T0)>(array<T0=UInt8><T0, T0, T0, T0>(0_u8, 1_u8, 2_u8, 3_u8))
optimized expr : [1_u8, 2_u8, 3_u8]
output type    : Array(UInt8)
output domain  : [{1..=3}]
output         : [1_u8, 2_u8, 3_u8]


ast            : remove_first(['a', 'b', 'c', 'd'])
raw expr       : remove_first(array("a", "b", "c", "d"))
checked expr   : remove_first<T0=String><Array(T0)>(array<T0=String><T0, T0, T0, T0>("a", "b", "c", "d"))
optimized expr : ["b", "c", "d"]
output type    : Array(String)
output domain  : [{"b"..="d"}]
output         : ["b", "c", "d"]


ast            : remove_last([])
raw expr       : remove_last(array())
checked expr   : remove_last<Array(Nothing)>(array<>())
optimized expr : [] :: Array(Nothing)
output type    : Array(Nothing)
output domain  : []
output         : []


ast            : remove_last([1])
raw expr       : remove_last(array(1_u8))
checked expr   : remove_last<T0=UInt8><Array(T0)>(array<T0=UInt8><T0>(1_u8))
optimized expr : []
output type    : Array(UInt8)
output domain  : []
output         : []


ast            : remove_last([0, 1, 2, NULL])
raw expr       : remove_last(array(0_u8, 1_u8, 2_u8, NULL))
checked expr   : remove_last<T0=UInt8 NULL><Array(T0)>(array<T0=UInt8 NULL><T0, T0, T0, T0>(CAST(0_u8 AS UInt8 NULL), CAST(1_u8 AS UInt8 NULL), CAST(2_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL)))
optimized expr : [0_u8, 1_u8, 2_u8]
output type    : Array(UInt8 NULL)
output domain  : [{0..=2}]
output         : [0_u8, 1_u8, 2_u8]


ast            : remove_last([0, 1, 2, 3])
raw expr       : remove_last(array(0_u8, 1_u8, 2_u8, 3_u8))
checked expr   : remove_last<T0=UInt8><Array(T0)>(array<T0=UInt8><T0, T0, T0, T0>(0_u8, 1_u8, 2_u8, 3_u8))
optimized expr : [0_u8, 1_u8, 2_u8]
output type    : Array(UInt8)
output domain  : [{0..=2}]
output         : [0_u8, 1_u8, 2_u8]


ast            : remove_last(['a', 'b', 'c', 'd'])
raw expr       : remove_last(array("a", "b", "c", "d"))
checked expr   : remove_last<T0=String><Array(T0)>(array<T0=String><T0, T0, T0, T0>("a", "b", "c", "d"))
optimized expr : ["a", "b", "c"]
output type    : Array(String)
output domain  : [{"a"..="c"}]
output         : ["a", "b", "c"]


ast            : false in (false, true)
raw expr       : or(eq(false, false), eq(false, true))
checked expr   : or<Boolean, Boolean>(eq<Boolean, Boolean>(false, false), eq<Boolean, Boolean>(false, true))
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : '33' in ('1', '33', '23', '33')
raw expr       : contains(array("1", "33", "23", "33"), "33")
checked expr   : contains<Array(String), String>(array<T0=String><T0, T0, T0, T0>("1", "33", "23", "33"), "33")
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : contains([1,2,3], 2)
raw expr       : contains(array(1_u8, 2_u8, 3_u8), 2_u8)
checked expr   : contains<Array(UInt8), UInt8>(array<T0=UInt8><T0, T0, T0>(1_u8, 2_u8, 3_u8), 2_u8)
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : int8_col not in (1, 2, 3, 4, 5, null)
raw expr       : not(contains(array(1_u8, 2_u8, 3_u8, 4_u8, 5_u8), int8_col::Int8))
checked expr   : not<Boolean>(contains<Array(Int16), Int16>(CAST(array<T0=UInt8><T0, T0, T0, T0, T0>(1_u8, 2_u8, 3_u8, 4_u8, 5_u8) AS Array(Int16)), CAST(int8_col AS Int16)))
optimized expr : not<Boolean>(contains<Array(Int16), Int16>([1_i16, 2_i16, 3_i16, 4_i16, 5_i16], CAST(int8_col AS Int16)))
evaluation:
+--------+----------+---------------+
|        | int8_col | Output        |
+--------+----------+---------------+
| Type   | Int8     | Boolean       |
| Domain | {1..=8}  | {FALSE, TRUE} |
| Row 0  | 1_i8     | false         |
| Row 1  | 2_i8     | false         |
| Row 2  | 7_i8     | true          |
| Row 3  | 8_i8     | true          |
+--------+----------+---------------+
evaluation (internal):
+----------+-----------------------+
| Column   | Data                  |
+----------+-----------------------+
| int8_col | Int8([1, 2, 7, 8])    |
| Output   | Boolean([0b____1100]) |
+----------+-----------------------+


ast            : contains([1,2,null], nullable_col)
raw expr       : contains(array(1_u8, 2_u8, NULL), nullable_col::Int64 NULL)
checked expr   : contains<T0=Int64 NULL><Array(T0), T0>(CAST(array<T0=UInt8 NULL><T0, T0, T0>(CAST(1_u8 AS UInt8 NULL), CAST(2_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL)) AS Array(Int64 NULL)), nullable_col)
optimized expr : contains<T0=Int64 NULL><Array(T0), T0>([1_i64, 2_i64, NULL], nullable_col)
evaluation:
+--------+-------------------+---------------+
|        | nullable_col      | Output        |
+--------+-------------------+---------------+
| Type   | Int64 NULL        | Boolean       |
| Domain | {9..=12} ∪ {NULL} | {FALSE, TRUE} |
| Row 0  | 9_i64             | false         |
| Row 1  | 10_i64            | false         |
| Row 2  | NULL              | true          |
| Row 3  | NULL              | true          |
+--------+-------------------+---------------+
evaluation (internal):
+--------------+---------------------------------------------------------------------------+
| Column       | Data                                                                      |
+--------------+---------------------------------------------------------------------------+
| nullable_col | NullableColumn { column: Int64([9, 10, 11, 12]), validity: [0b____0011] } |
| Output       | Boolean([0b____1100])                                                     |
+--------------+---------------------------------------------------------------------------+


ast            : contains([(1,'2', 3, false), (1,'2', 4, true), null], (1,'2', 3, false))
raw expr       : contains(array(tuple(1_u8, "2", 3_u8, false), tuple(1_u8, "2", 4_u8, true), NULL), tuple(1_u8, "2", 3_u8, false))
checked expr   : contains<T0=Tuple(UInt8, String, UInt8, Boolean) NULL><Array(T0), T0>(array<T0=Tuple(UInt8, String, UInt8, Boolean) NULL><T0, T0, T0>(CAST(tuple<UInt8, String, UInt8, Boolean>(1_u8, "2", 3_u8, false) AS Tuple(UInt8, String, UInt8, Boolean) NULL), CAST(tuple<UInt8, String, UInt8, Boolean>(1_u8, "2", 4_u8, true) AS Tuple(UInt8, String, UInt8, Boolean) NULL), CAST(NULL AS Tuple(UInt8, String, UInt8, Boolean) NULL)), CAST(tuple<UInt8, String, UInt8, Boolean>(1_u8, "2", 3_u8, false) AS Tuple(UInt8, String, UInt8, Boolean) NULL))
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : nullable_col in (null, 9, 10, 12)
raw expr       : or(or(eq(nullable_col::Int64 NULL, 9_u8), eq(nullable_col::Int64 NULL, 10_u8)), eq(nullable_col::Int64 NULL, 12_u8))
checked expr   : or<Boolean NULL, Boolean NULL>(or<Boolean NULL, Boolean NULL>(eq<Int64 NULL, Int64 NULL>(nullable_col, CAST(9_u8 AS Int64 NULL)), eq<Int64 NULL, Int64 NULL>(nullable_col, CAST(10_u8 AS Int64 NULL))), eq<Int64 NULL, Int64 NULL>(nullable_col, CAST(12_u8 AS Int64 NULL)))
optimized expr : or<Boolean NULL, Boolean NULL>(or<Boolean NULL, Boolean NULL>(eq<Int64 NULL, Int64 NULL>(nullable_col, 9_i64), eq<Int64 NULL, Int64 NULL>(nullable_col, 10_i64)), eq<Int64 NULL, Int64 NULL>(nullable_col, 12_i64))
evaluation:
+--------+-------------------+------------------------+
|        | nullable_col      | Output                 |
+--------+-------------------+------------------------+
| Type   | Int64 NULL        | Boolean NULL           |
| Domain | {9..=12} ∪ {NULL} | {FALSE, TRUE} ∪ {NULL} |
| Row 0  | 9_i64             | true                   |
| Row 1  | 10_i64            | true                   |
| Row 2  | NULL              | NULL                   |
| Row 3  | NULL              | NULL                   |
+--------+-------------------+------------------------+
evaluation (internal):
+--------------+---------------------------------------------------------------------------+
| Column       | Data                                                                      |
+--------------+---------------------------------------------------------------------------+
| nullable_col | NullableColumn { column: Int64([9, 10, 11, 12]), validity: [0b____0011] } |
| Output       | NullableColumn { column: Boolean([0b____0011]), validity: [0b____0011] }  |
+--------------+---------------------------------------------------------------------------+


ast            : nullable_col in (1, '9', 3, 10, 12, true, [1,2,3])
raw expr       : contains(array(1_u8, "9", 3_u8, 10_u8, 12_u8, true), nullable_col::Int64 NULL)
checked expr   : contains<T0=Variant NULL><Array(T0), T0>(CAST(array<T0=Variant><T0, T0, T0, T0, T0, T0>(CAST(1_u8 AS Variant), CAST("9" AS Variant), CAST(3_u8 AS Variant), CAST(10_u8 AS Variant), CAST(12_u8 AS Variant), CAST(true AS Variant)) AS Array(Variant NULL)), CAST(nullable_col AS Variant NULL))
optimized expr : contains<T0=Variant NULL><Array(T0), T0>([1, "9", 3, 10, 12, true], CAST(nullable_col AS Variant NULL))
evaluation:
+--------+-------------------+---------------+
|        | nullable_col      | Output        |
+--------+-------------------+---------------+
| Type   | Int64 NULL        | Boolean       |
| Domain | {9..=12} ∪ {NULL} | {FALSE, TRUE} |
| Row 0  | 9_i64             | false         |
| Row 1  | 10_i64            | true          |
| Row 2  | NULL              | false         |
| Row 3  | NULL              | false         |
+--------+-------------------+---------------+
evaluation (internal):
+--------------+---------------------------------------------------------------------------+
| Column       | Data                                                                      |
+--------------+---------------------------------------------------------------------------+
| nullable_col | NullableColumn { column: Int64([9, 10, 11, 12]), validity: [0b____0011] } |
| Output       | Boolean([0b____0010])                                                     |
+--------------+---------------------------------------------------------------------------+


