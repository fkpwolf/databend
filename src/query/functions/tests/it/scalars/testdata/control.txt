ast            : multi_if(false, 1, false, 2, NULL)
raw expr       : multi_if(false, 1_u8, false, 2_u8, NULL)
checked expr   : multi_if<T0=UInt8 NULL><Boolean NULL, T0, Boolean NULL, T0, T0>(CAST(false AS Boolean NULL), CAST(1_u8 AS UInt8 NULL), CAST(false AS Boolean NULL), CAST(2_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL))
optimized expr : NULL
output type    : UInt8 NULL
output domain  : {NULL}
output         : NULL


ast            : multi_if(true, 1, NULL, 2, NULL)
raw expr       : multi_if(true, 1_u8, NULL, 2_u8, NULL)
checked expr   : multi_if<T0=UInt8 NULL><Boolean NULL, T0, Boolean NULL, T0, T0>(CAST(true AS Boolean NULL), CAST(1_u8 AS UInt8 NULL), CAST(NULL AS Boolean NULL), CAST(2_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL))
optimized expr : 1_u8
output type    : UInt8 NULL
output domain  : {1..=1}
output         : 1_u8


ast            : multi_if(false, 1, true, 2, NULL)
raw expr       : multi_if(false, 1_u8, true, 2_u8, NULL)
checked expr   : multi_if<T0=UInt8 NULL><Boolean NULL, T0, Boolean NULL, T0, T0>(CAST(false AS Boolean NULL), CAST(1_u8 AS UInt8 NULL), CAST(true AS Boolean NULL), CAST(2_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL))
optimized expr : 2_u8
output type    : UInt8 NULL
output domain  : {2..=2}
output         : 2_u8


ast            : multi_if(true, 1, true, 2, NULL)
raw expr       : multi_if(true, 1_u8, true, 2_u8, NULL)
checked expr   : multi_if<T0=UInt8 NULL><Boolean NULL, T0, Boolean NULL, T0, T0>(CAST(true AS Boolean NULL), CAST(1_u8 AS UInt8 NULL), CAST(true AS Boolean NULL), CAST(2_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL))
optimized expr : 1_u8
output type    : UInt8 NULL
output domain  : {1..=1}
output         : 1_u8


ast            : multi_if(true, 1, true, NULL, 2)
raw expr       : multi_if(true, 1_u8, true, NULL, 2_u8)
checked expr   : multi_if<T0=UInt8 NULL><Boolean NULL, T0, Boolean NULL, T0, T0>(CAST(true AS Boolean NULL), CAST(1_u8 AS UInt8 NULL), CAST(true AS Boolean NULL), CAST(NULL AS UInt8 NULL), CAST(2_u8 AS UInt8 NULL))
optimized expr : 1_u8
output type    : UInt8 NULL
output domain  : {1..=1}
output         : 1_u8


ast            : multi_if(true, 1, NULL)
raw expr       : multi_if(true, 1_u8, NULL)
checked expr   : multi_if<T0=UInt8 NULL><Boolean NULL, T0, T0>(CAST(true AS Boolean NULL), CAST(1_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL))
optimized expr : 1_u8
output type    : UInt8 NULL
output domain  : {1..=1}
output         : 1_u8


ast            : multi_if(false, 1, NULL)
raw expr       : multi_if(false, 1_u8, NULL)
checked expr   : multi_if<T0=UInt8 NULL><Boolean NULL, T0, T0>(CAST(false AS Boolean NULL), CAST(1_u8 AS UInt8 NULL), CAST(NULL AS UInt8 NULL))
optimized expr : NULL
output type    : UInt8 NULL
output domain  : {NULL}
output         : NULL


ast            : multi_if(cond_a, expr_true, expr_else)
raw expr       : multi_if(#0::Boolean, #1::Int64, #2::Int64 NULL)
checked expr   : multi_if<T0=Int64 NULL><Boolean NULL, T0, T0>(CAST(#0 AS Boolean NULL), CAST(#1 AS Int64 NULL), #2)
evaluation:
+--------+---------------+-----------+------------------+------------------+
|        | cond_a        | expr_true | expr_else        | Output           |
+--------+---------------+-----------+------------------+------------------+
| Type   | Boolean       | Int64     | Int64 NULL       | Int64 NULL       |
| Domain | {FALSE, TRUE} | {1..=4}   | {5..=8} ∪ {NULL} | {1..=8} ∪ {NULL} |
| Row 0  | true          | 1_i64     | 5_i64            | 1_i64            |
| Row 1  | true          | 2_i64     | NULL             | 2_i64            |
| Row 2  | false         | 3_i64     | 7_i64            | 7_i64            |
| Row 3  | false         | 4_i64     | NULL             | NULL             |
+--------+---------------+-----------+------------------+------------------+
evaluation (internal):
+-----------+------------------------------------------------------------------------+
| Column    | Data                                                                   |
+-----------+------------------------------------------------------------------------+
| cond_a    | Boolean([0b____0011])                                                  |
| expr_true | Int64([1, 2, 3, 4])                                                    |
| expr_else | NullableColumn { column: Int64([5, 6, 7, 8]), validity: [0b____0101] } |
| Output    | NullableColumn { column: Int64([1, 2, 7, 0]), validity: [0b____0111] } |
+-----------+------------------------------------------------------------------------+


ast            : multi_if(cond_a, expr_true, expr_else)
raw expr       : multi_if(#0::Boolean, #1::Int64, #2::Int64 NULL)
checked expr   : multi_if<T0=Int64 NULL><Boolean NULL, T0, T0>(CAST(#0 AS Boolean NULL), CAST(#1 AS Int64 NULL), #2)
evaluation:
+--------+---------------+-----------+------------------+------------------+
|        | cond_a        | expr_true | expr_else        | Output           |
+--------+---------------+-----------+------------------+------------------+
| Type   | Boolean       | Int64     | Int64 NULL       | Int64 NULL       |
| Domain | {FALSE, TRUE} | {1..=4}   | {5..=8} ∪ {NULL} | {1..=8} ∪ {NULL} |
| Row 0  | false         | 1_i64     | 5_i64            | 5_i64            |
| Row 1  | false         | 2_i64     | 6_i64            | 6_i64            |
| Row 2  | true          | 3_i64     | NULL             | 3_i64            |
| Row 3  | true          | 4_i64     | NULL             | 4_i64            |
+--------+---------------+-----------+------------------+------------------+
evaluation (internal):
+-----------+------------------------------------------------------------------------+
| Column    | Data                                                                   |
+-----------+------------------------------------------------------------------------+
| cond_a    | Boolean([0b____1100])                                                  |
| expr_true | Int64([1, 2, 3, 4])                                                    |
| expr_else | NullableColumn { column: Int64([5, 6, 7, 8]), validity: [0b____0011] } |
| Output    | NullableColumn { column: Int64([5, 6, 3, 4]), validity: [0b____1111] } |
+-----------+------------------------------------------------------------------------+


ast            : multi_if(cond_a, expr_a, cond_b, expr_b, expr_else)
raw expr       : multi_if(#0::Boolean, #1::Int64, #2::Boolean NULL, #3::Int64, #4::Int64 NULL)
checked expr   : multi_if<T0=Int64 NULL><Boolean NULL, T0, Boolean NULL, T0, T0>(CAST(#0 AS Boolean NULL), CAST(#1 AS Int64 NULL), #2, CAST(#3 AS Int64 NULL), #4)
evaluation:
+--------+---------------+---------+-----------------+---------+-------------------+-------------------+
|        | cond_a        | expr_a  | cond_b          | expr_b  | expr_else         | Output            |
+--------+---------------+---------+-----------------+---------+-------------------+-------------------+
| Type   | Boolean       | Int64   | Boolean NULL    | Int64   | Int64 NULL        | Int64 NULL        |
| Domain | {FALSE, TRUE} | {1..=4} | {TRUE} ∪ {NULL} | {5..=8} | {9..=12} ∪ {NULL} | {1..=12} ∪ {NULL} |
| Row 0  | true          | 1_i64   | NULL            | 5_i64   | 9_i64             | 1_i64             |
| Row 1  | true          | 2_i64   | true            | 6_i64   | 10_i64            | 2_i64             |
| Row 2  | false         | 3_i64   | NULL            | 7_i64   | NULL              | NULL              |
| Row 3  | false         | 4_i64   | true            | 8_i64   | NULL              | 8_i64             |
+--------+---------------+---------+-----------------+---------+-------------------+-------------------+
evaluation (internal):
+-----------+---------------------------------------------------------------------------+
| Column    | Data                                                                      |
+-----------+---------------------------------------------------------------------------+
| cond_a    | Boolean([0b____0011])                                                     |
| expr_a    | Int64([1, 2, 3, 4])                                                       |
| cond_b    | NullableColumn { column: Boolean([0b____1111]), validity: [0b____1010] }  |
| expr_b    | Int64([5, 6, 7, 8])                                                       |
| expr_else | NullableColumn { column: Int64([9, 10, 11, 12]), validity: [0b____0011] } |
| Output    | NullableColumn { column: Int64([1, 2, 0, 8]), validity: [0b____1011] }    |
+-----------+---------------------------------------------------------------------------+


ast            : multi_if(cond_a, expr_a, cond_b, expr_b, expr_else)
raw expr       : multi_if(#0::Boolean, #1::Int64, #2::Boolean, #3::Int64, #4::Int64)
checked expr   : multi_if<T0=Int64><Boolean NULL, T0, Boolean NULL, T0, T0>(CAST(#0 AS Boolean NULL), #1, CAST(#2 AS Boolean NULL), #3, #4)
evaluation:
+--------+---------------+---------+---------------+---------+-----------+----------+
|        | cond_a        | expr_a  | cond_b        | expr_b  | expr_else | Output   |
+--------+---------------+---------+---------------+---------+-----------+----------+
| Type   | Boolean       | Int64   | Boolean       | Int64   | Int64     | Int64    |
| Domain | {FALSE, TRUE} | {1..=4} | {FALSE, TRUE} | {5..=8} | {9..=12}  | {1..=12} |
| Row 0  | true          | 1_i64   | true          | 5_i64   | 9_i64     | 1_i64    |
| Row 1  | true          | 2_i64   | false         | 6_i64   | 10_i64    | 2_i64    |
| Row 2  | false         | 3_i64   | true          | 7_i64   | 11_i64    | 7_i64    |
| Row 3  | false         | 4_i64   | false         | 8_i64   | 12_i64    | 12_i64   |
+--------+---------------+---------+---------------+---------+-----------+----------+
evaluation (internal):
+-----------+------------------------+
| Column    | Data                   |
+-----------+------------------------+
| cond_a    | Boolean([0b____0011])  |
| expr_a    | Int64([1, 2, 3, 4])    |
| cond_b    | Boolean([0b____0101])  |
| expr_b    | Int64([5, 6, 7, 8])    |
| expr_else | Int64([9, 10, 11, 12]) |
| Output    | Int64([1, 2, 7, 12])   |
+-----------+------------------------+


ast            : is_not_null(1)
raw expr       : is_not_null(1_u8)
checked expr   : is_not_null<T0=UInt8><T0 NULL>(CAST(1_u8 AS UInt8 NULL))
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : is_not_null(4096)
raw expr       : is_not_null(4096_u16)
checked expr   : is_not_null<T0=UInt16><T0 NULL>(CAST(4096_u16 AS UInt16 NULL))
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : is_not_null(true)
raw expr       : is_not_null(true)
checked expr   : is_not_null<T0=Boolean><T0 NULL>(CAST(true AS Boolean NULL))
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : is_not_null(false)
raw expr       : is_not_null(false)
checked expr   : is_not_null<T0=Boolean><T0 NULL>(CAST(false AS Boolean NULL))
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : is_not_null('string')
raw expr       : is_not_null("string")
checked expr   : is_not_null<T0=String><T0 NULL>(CAST("string" AS String NULL))
optimized expr : true
output type    : Boolean
output domain  : {TRUE}
output         : true


ast            : is_not_null(NULL)
raw expr       : is_not_null(NULL)
checked expr   : is_not_null<NULL>(NULL)
optimized expr : false
output type    : Boolean
output domain  : {FALSE}
output         : false


ast            : is_not_null(null_col)
raw expr       : is_not_null(#0::NULL)
checked expr   : is_not_null<NULL>(#0)
optimized expr : false
output type    : Boolean
output domain  : {FALSE}
output         : false


ast            : is_not_null(int64_col)
raw expr       : is_not_null(#0::Int64)
checked expr   : is_not_null<T0=Int64><T0 NULL>(CAST(#0 AS Int64 NULL))
optimized expr : true
evaluation:
+--------+-----------+---------+
|        | int64_col | Output  |
+--------+-----------+---------+
| Type   | Int64     | Boolean |
| Domain | {5..=8}   | {TRUE}  |
| Row 0  | 5_i64     | true    |
| Row 1  | 6_i64     | true    |
| Row 2  | 7_i64     | true    |
| Row 3  | 8_i64     | true    |
+--------+-----------+---------+
evaluation (internal):
+-----------+-----------------------+
| Column    | Data                  |
+-----------+-----------------------+
| int64_col | Int64([5, 6, 7, 8])   |
| Output    | Boolean([0b____1111]) |
+-----------+-----------------------+


ast            : is_not_null(nullable_col)
raw expr       : is_not_null(#0::Int64 NULL)
checked expr   : is_not_null<T0=Int64><T0 NULL>(#0)
evaluation:
+--------+-------------------+---------------+
|        | nullable_col      | Output        |
+--------+-------------------+---------------+
| Type   | Int64 NULL        | Boolean       |
| Domain | {9..=12} ∪ {NULL} | {FALSE, TRUE} |
| Row 0  | 9_i64             | true          |
| Row 1  | 10_i64            | true          |
| Row 2  | NULL              | false         |
| Row 3  | NULL              | false         |
+--------+-------------------+---------------+
evaluation (internal):
+--------------+---------------------------------------------------------------------------+
| Column       | Data                                                                      |
+--------------+---------------------------------------------------------------------------+
| nullable_col | NullableColumn { column: Int64([9, 10, 11, 12]), validity: [0b____0011] } |
| Output       | Boolean([0b____0011])                                                     |
+--------------+---------------------------------------------------------------------------+


