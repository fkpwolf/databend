ast            : TRY_CAST(a AS UINT8)
raw expr       : TRY_CAST(ColumnRef(0)::UInt16 AS UInt8)
checked expr   : try_to_uint8<UInt16>(ColumnRef(0))
evaluation:
+--------+------------+--------------------+
|        | a          | Output             |
+--------+------------+--------------------+
| Type   | UInt16     | UInt8 NULL         |
| Domain | {0..=1024} | {0..=255} ∪ {NULL} |
| Row 0  | 0          | 0                  |
| Row 1  | 64         | 64                 |
| Row 2  | 255        | 255                |
| Row 3  | 512        | NULL               |
| Row 4  | 1024       | NULL               |
+--------+------------+--------------------+
evaluation (internal):
+--------+------------------------------------------------------------------------------+
| Column | Data                                                                         |
+--------+------------------------------------------------------------------------------+
| a      | UInt16([0, 64, 255, 512, 1024])                                              |
| Output | NullableColumn { column: UInt8([0, 64, 255, 0, 0]), validity: [0b___00111] } |
+--------+------------------------------------------------------------------------------+


ast            : TRY_CAST(a AS UINT16)
raw expr       : TRY_CAST(ColumnRef(0)::Int16 AS UInt16)
checked expr   : try_to_uint16<Int16>(ColumnRef(0))
evaluation:
+--------+----------+------------------+
|        | a        | Output           |
+--------+----------+------------------+
| Type   | Int16    | UInt16 NULL      |
| Domain | {-4..=3} | {0..=3} ∪ {NULL} |
| Row 0  | 0        | 0                |
| Row 1  | 1        | 1                |
| Row 2  | 2        | 2                |
| Row 3  | 3        | 3                |
| Row 4  | -4       | NULL             |
+--------+----------+------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------+
| Column | Data                                                                       |
+--------+----------------------------------------------------------------------------+
| a      | Int16([0, 1, 2, 3, -4])                                                    |
| Output | NullableColumn { column: UInt16([0, 1, 2, 3, 0]), validity: [0b___01111] } |
+--------+----------------------------------------------------------------------------+


ast            : TRY_CAST(a AS INT64)
raw expr       : TRY_CAST(ColumnRef(0)::Int16 AS Int64)
checked expr   : try_to_int64<Int16>(ColumnRef(0))
evaluation:
+--------+----------+------------+
|        | a        | Output     |
+--------+----------+------------+
| Type   | Int16    | Int64 NULL |
| Domain | {-4..=3} | {-4..=3}   |
| Row 0  | 0        | 0          |
| Row 1  | 1        | 1          |
| Row 2  | 2        | 2          |
| Row 3  | 3        | 3          |
| Row 4  | -4       | -4         |
+--------+----------+------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------+
| Column | Data                                                                       |
+--------+----------------------------------------------------------------------------+
| a      | Int16([0, 1, 2, 3, -4])                                                    |
| Output | NullableColumn { column: Int64([0, 1, 2, 3, -4]), validity: [0b___11111] } |
+--------+----------------------------------------------------------------------------+


ast            : (TRY_CAST(a AS FLOAT32), TRY_CAST(a AS INT32), TRY_CAST(b AS FLOAT32), TRY_CAST(b AS INT32))
raw expr       : tuple(TRY_CAST(ColumnRef(0)::UInt64 AS Float32), TRY_CAST(ColumnRef(0)::UInt64 AS Int32), TRY_CAST(ColumnRef(1)::Float64 AS Float32), TRY_CAST(ColumnRef(1)::Float64 AS Int32))
checked expr   : tuple<Float32 NULL, Int32 NULL, Float32 NULL, Int32 NULL>(try_to_float32<UInt64>(ColumnRef(0)), try_to_int32<UInt64>(ColumnRef(0)), try_to_float32<Float64>(ColumnRef(1)), try_to_int32<Float64>(ColumnRef(1)))
evaluation:
+--------+----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+
|        | a                          | b                                                                                                                                                                                                                                                                                                                              | Output                                                                                                     |
+--------+----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+
| Type   | UInt64                     | Float64                                                                                                                                                                                                                                                                                                                        | (Float32 NULL, Int32 NULL, Float32 NULL, Int32 NULL)                                                       |
| Domain | {0..=18446744073709551615} | {-179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000..=inf} | ({0..=18446744000000000000}, {0..=2147483647} ∪ {NULL}, {-inf..=inf}, {-2147483648..=2147483647} ∪ {NULL}) |
| Row 0  | 0                          | 0                                                                                                                                                                                                                                                                                                                              | (0, 0, 0, 0)                                                                                               |
| Row 1  | 1                          | 4294967295                                                                                                                                                                                                                                                                                                                     | (1, 1, 4294967296, NULL)                                                                                   |
| Row 2  | 255                        | 18446744073709551616                                                                                                                                                                                                                                                                                                           | (255, 255, 18446744073709551616, NULL)                                                                     |
| Row 3  | 65535                      | -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000         | (65535, 65535, -inf, NULL)                                                                                 |
| Row 4  | 4294967295                 | 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000          | (4294967296, NULL, inf, NULL)                                                                              |
| Row 5  | 18446744073709551615       | inf                                                                                                                                                                                                                                                                                                                            | (18446744073709551616, NULL, inf, NULL)                                                                    |
+--------+----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------+
evaluation (internal):

| Column | Data|

| a      | UInt64([0, 1, 255, 65535, 4294967295, 18446744073709551615])                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
| b      | Float64([0, 4294967295, 18446744073709551616, -179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, inf]) |
| Output | Tuple { fields: [NullableColumn { column: Float32([0, 1, 255, 65535, 4294967296, 18446744073709551616]), validity: [0b__111111] }, NullableColumn { column: Int32([0, 1, 255, 65535, 0, 0]), validity: [0b__001111] }, NullableColumn { column: Float32([0, 4294967296, 18446744073709551616, -inf, inf, inf]), validity: [0b__111111] }, NullableColumn { column: Int32([0, 0, 0, 0, 0, 0]), validity: [0b__000001] }], len: 6 }                                                                                                                                                                                                                                                                  |



ast            : TRY_CAST([[a, b], NULL, NULL] AS Array(Array(Int8)))
raw expr       : TRY_CAST(array(array(ColumnRef(0)::Int16, ColumnRef(1)::Int16), NULL, NULL) AS Array(Array(Int8)))
checked expr   : TRY_CAST(array<T0=Array(Int16) NULL><T0, T0, T0>(CAST(array<T0=Int16><T0, T0>(ColumnRef(0), ColumnRef(1)) AS Array(Int16) NULL), CAST(NULL AS Array(Int16) NULL), CAST(NULL AS Array(Int16) NULL)) AS Array(Array(Int8 NULL) NULL) NULL)
optimized expr : TRY_CAST(array<T0=Array(Int16) NULL><T0, T0, T0>(CAST(array<T0=Int16><T0, T0>(ColumnRef(0), ColumnRef(1)) AS Array(Int16) NULL), NULL, NULL) AS Array(Array(Int8 NULL) NULL) NULL)
evaluation:
+--------+-----------+------------+------------------------------------+
|        | a         | b          | Output                             |
+--------+-----------+------------+------------------------------------+
| Type   | Int16     | Int16      | Array(Array(Int8 NULL) NULL) NULL  |
| Domain | {0..=255} | {-129..=0} | [[{-128..=127} ∪ {NULL}] ∪ {NULL}] |
| Row 0  | 0         | 0          | [[0, 0], [], []]                   |
| Row 1  | 1         | -1         | [[1, -1], [], []]                  |
| Row 2  | 2         | -127       | [[2, -127], [], []]                |
| Row 3  | 127       | -128       | [[127, -128], [], []]              |
| Row 4  | 255       | -129       | [[NULL, NULL], [], []]             |
+--------+-----------+------------+------------------------------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                                                                                        |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | Int16([0, 1, 2, 127, 255])                                                                                                                                                                                                                                                                                                                                                  |
| b      | Int16([0, -1, -127, -128, -129])                                                                                                                                                                                                                                                                                                                                            |
| Output | NullableColumn { column: ArrayColumn { values: NullableColumn { column: ArrayColumn { values: NullableColumn { column: Int8([0, 0, 1, -1, 2, -127, 127, -128, 0, 0]), validity: [0b11111111, 0b______00] }, offsets: [0, 2, 2, 2, 4, 4, 4, 6, 6, 6, 8, 8, 8, 10, 10, 10] }, validity: [0b11111111, 0b_1111111] }, offsets: [0, 3, 6, 9, 12, 15] }, validity: [0b___11111] } |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : TRY_CAST((a, b, NULL) AS TUPLE(Int8, UInt8, Boolean NULL))
raw expr       : TRY_CAST(tuple(ColumnRef(0)::Int16, ColumnRef(1)::Int16, NULL) AS (Int8, UInt8, Boolean NULL))
checked expr   : TRY_CAST(tuple<Int16, Int16, NULL>(ColumnRef(0), ColumnRef(1), NULL) AS (Int8 NULL, UInt8 NULL, Boolean NULL) NULL)
evaluation:
+--------+-----------+------------+------------------------------------------------+
|        | a         | b          | Output                                         |
+--------+-----------+------------+------------------------------------------------+
| Type   | Int16     | Int16      | (Int8 NULL, UInt8 NULL, Boolean NULL) NULL     |
| Domain | {0..=256} | {-129..=1} | ({0..=127} ∪ {NULL}, {0..=1} ∪ {NULL}, {NULL}) |
| Row 0  | 0         | 0          | (0, 0, NULL)                                   |
| Row 1  | 1         | 1          | (1, 1, NULL)                                   |
| Row 2  | 2         | -127       | (2, NULL, NULL)                                |
| Row 3  | 127       | -128       | (127, NULL, NULL)                              |
| Row 4  | 256       | -129       | (NULL, NULL, NULL)                             |
+--------+-----------+------------+------------------------------------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                        |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | Int16([0, 1, 2, 127, 256])                                                                                                                                                                                                                                  |
| b      | Int16([0, 1, -127, -128, -129])                                                                                                                                                                                                                             |
| Output | Tuple { fields: [NullableColumn { column: Int8([0, 1, 2, 127, 0]), validity: [0b___01111] }, NullableColumn { column: UInt8([0, 1, 0, 0, 0]), validity: [0b___00011] }, NullableColumn { column: Boolean([0b___00000]), validity: [0b___00000] }], len: 5 } |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : CAST(a AS INT16)
raw expr       : CAST(ColumnRef(0)::Float64 AS Int16)
checked expr   : to_int16<Float64>(ColumnRef(0))
evaluation:
+--------+--------------+----------+
|        | a            | Output   |
+--------+--------------+----------+
| Type   | Float64      | Int16    |
| Domain | {-4.4..=3.3} | {-4..=3} |
| Row 0  | 0            | 0        |
| Row 1  | 1.1          | 1        |
| Row 2  | 2.2          | 2        |
| Row 3  | 3.3          | 3        |
| Row 4  | -4.4         | -4       |
+--------+--------------+----------+
evaluation (internal):
+--------+-----------------------------------+
| Column | Data                              |
+--------+-----------------------------------+
| a      | Float64([0, 1.1, 2.2, 3.3, -4.4]) |
| Output | Int16([0, 1, 2, 3, -4])           |
+--------+-----------------------------------+


ast            : CAST(b AS INT16)
raw expr       : CAST(ColumnRef(0)::Int8 AS Int16)
checked expr   : to_int16<Int8>(ColumnRef(0))
evaluation:
+--------+----------+----------+
|        | b        | Output   |
+--------+----------+----------+
| Type   | Int8     | Int16    |
| Domain | {-4..=3} | {-4..=3} |
| Row 0  | 0        | 0        |
| Row 1  | 1        | 1        |
| Row 2  | 2        | 2        |
| Row 3  | 3        | 3        |
| Row 4  | -4       | -4       |
+--------+----------+----------+
evaluation (internal):
+--------+-------------------------+
| Column | Data                    |
+--------+-------------------------+
| b      | Int8([0, 1, 2, 3, -4])  |
| Output | Int16([0, 1, 2, 3, -4]) |
+--------+-------------------------+


error: 
  --> SQL:1:1
  |
1 | CAST(a AS UINT16)
  | ^^^^^^^^^^^^^^^^^ unable to cast -4 to UInt16



error: 
  --> SQL:1:1
  |
1 | CAST(c AS INT16)
  | ^^^^^^^^^^^^^^^^ unable to cast 11111111111 to Int16



ast            : CAST(NULL AS VARIANT)
raw expr       : CAST(NULL AS Variant)
checked expr   : to_variant<T0=NULL><T0>(NULL)
optimized expr : 0x2000000000000000
output type    : Variant
output domain  : Undefined
output         : null


ast            : CAST(0 AS VARIANT)
raw expr       : CAST(0_u8 AS Variant)
checked expr   : to_variant<T0=UInt8><T0>(0_u8)
optimized expr : 0x200000002000000100
output type    : Variant
output domain  : Undefined
output         : 0


ast            : CAST(-1 AS VARIANT)
raw expr       : CAST(minus(1_u8) AS Variant)
checked expr   : to_variant<T0=Int16><T0>(minus<UInt8>(1_u8))
optimized expr : 0x200000002000000240ff
output type    : Variant
output domain  : Undefined
output         : -1


ast            : CAST(1.1 AS VARIANT)
raw expr       : CAST(1.1_f64 AS Variant)
checked expr   : to_variant<T0=Float64><T0>(1.1_f64)
optimized expr : 0x2000000020000009603ff199999999999a
output type    : Variant
output domain  : Undefined
output         : 1.1


ast            : CAST('🍦 が美味しい' AS VARIANT)
raw expr       : CAST("🍦 が美味しい" AS Variant)
checked expr   : to_variant<T0=String><T0>("🍦 が美味しい")
optimized expr : 0x2000000010000014f09f8da620e3818ce7be8ee591b3e38197e38184
output type    : Variant
output domain  : Undefined
output         : "🍦 が美味しい"


ast            : CAST([0, 1, 2] AS VARIANT)
raw expr       : CAST(array(0_u8, 1_u8, 2_u8) AS Variant)
checked expr   : to_variant<T0=Array(UInt8)><T0>(array<T0=UInt8><T0, T0, T0>(0_u8, 1_u8, 2_u8))
optimized expr : 0x800000032000000120000002200000020050015002
output type    : Variant
output domain  : Undefined
output         : [0,1,2]


ast            : CAST([0, 'a'] AS VARIANT)
raw expr       : CAST(array(0_u8, "a") AS Variant)
checked expr   : to_variant<T0=Array(Variant)><T0>(array<T0=Variant><T0, T0>(CAST(0_u8 AS Variant), CAST("a" AS Variant)))
optimized expr : 0x8000000220000001100000010061
output type    : Variant
output domain  : Undefined
output         : [0,"a"]


ast            : CAST(to_timestamp(1000000) AS VARIANT)
raw expr       : CAST(to_timestamp(1000000_u32) AS Variant)
checked expr   : to_variant<T0=Timestamp><T0>(to_timestamp<Int64>(CAST(1000000_u32 AS Int64)))
optimized expr : 0x200000001000001a313937302d30312d31322031333a34363a34302e303030303030
output type    : Variant
output domain  : Undefined
output         : "1970-01-12 13:46:40.000000"


ast            : CAST(false AS VARIANT)
raw expr       : CAST(false AS Variant)
checked expr   : to_variant<T0=Boolean><T0>(false)
optimized expr : 0x2000000030000000
output type    : Variant
output domain  : Undefined
output         : false


ast            : CAST(true AS VARIANT)
raw expr       : CAST(true AS Variant)
checked expr   : to_variant<T0=Boolean><T0>(true)
optimized expr : 0x2000000040000000
output type    : Variant
output domain  : Undefined
output         : true


ast            : CAST(CAST('🍦 が美味しい' AS VARIANT) AS VARIANT)
raw expr       : CAST(CAST("🍦 が美味しい" AS Variant) AS Variant)
checked expr   : to_variant<T0=String><T0>("🍦 が美味しい")
optimized expr : 0x2000000010000014f09f8da620e3818ce7be8ee591b3e38197e38184
output type    : Variant
output domain  : Undefined
output         : "🍦 が美味しい"


ast            : CAST((1,) AS VARIANT)
raw expr       : CAST(tuple(1_u8) AS Variant)
checked expr   : to_variant<T0=(UInt8,)><T0>(tuple<UInt8>(1_u8))
optimized expr : 0x400000011000000120000002315001
output type    : Variant
output domain  : Undefined
output         : {"1":1}


ast            : CAST((1, 2) AS VARIANT)
raw expr       : CAST(tuple(1_u8, 2_u8) AS Variant)
checked expr   : to_variant<T0=(UInt8, UInt8)><T0>(tuple<UInt8, UInt8>(1_u8, 2_u8))
optimized expr : 0x4000000210000001100000012000000220000002313250015002
output type    : Variant
output domain  : Undefined
output         : {"1":1,"2":2}


ast            : CAST((false, true) AS VARIANT)
raw expr       : CAST(tuple(false, true) AS Variant)
checked expr   : to_variant<T0=(Boolean, Boolean)><T0>(tuple<Boolean, Boolean>(false, true))
optimized expr : 0x40000002100000011000000130000000400000003132
output type    : Variant
output domain  : Undefined
output         : {"1":false,"2":true}


ast            : CAST(('a',) AS VARIANT)
raw expr       : CAST(tuple("a") AS Variant)
checked expr   : to_variant<T0=(String,)><T0>(tuple<String>("a"))
optimized expr : 0x4000000110000001100000013161
output type    : Variant
output domain  : Undefined
output         : {"1":"a"}


ast            : CAST((1, 2, (false, true, ('a',))) AS VARIANT)
raw expr       : CAST(tuple(1_u8, 2_u8, tuple(false, true, tuple("a"))) AS Variant)
checked expr   : to_variant<T0=(UInt8, UInt8, (Boolean, Boolean, (String,)))><T0>(tuple<UInt8, UInt8, (Boolean, Boolean, (String,))>(1_u8, 2_u8, tuple<Boolean, Boolean, (String,)>(false, true, tuple<String>("a"))))
optimized expr : 0x4000000310000001100000011000000120000002200000025000002d313233500150024000000310000001100000011000000130000000400000005000000e3132334000000110000001100000013161
output type    : Variant
output domain  : Undefined
output         : {"1":1,"2":2,"3":{"1":false,"2":true,"3":{"1":"a"}}}


ast            : CAST(a AS VARIANT)
raw expr       : CAST(ColumnRef(0)::String NULL AS Variant)
checked expr   : to_variant<T0=String NULL><T0>(ColumnRef(0))
evaluation:
+--------+------------------------+-----------+
|        | a                      | Output    |
+--------+------------------------+-----------+
| Type   | String NULL            | Variant   |
| Domain | {"a"..="def"} ∪ {NULL} | Undefined |
| Row 0  | "a"                    | "a"       |
| Row 1  | NULL                   | null      |
| Row 2  | "def"                  | "def"     |
+--------+------------------------+-----------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                            |
+--------+-----------------------------------------------------------------------------------------------------------------+
| a      | NullableColumn { column: StringColumn { data: 0x616263646566, offsets: [0, 1, 3, 6] }, validity: [0b_____101] } |
| Output | StringColumn { data: 0x20000000100000016120000000000000002000000010000003646566, offsets: [0, 9, 17, 28] }      |
+--------+-----------------------------------------------------------------------------------------------------------------+


ast            : TRY_CAST(NULL AS VARIANT)
raw expr       : TRY_CAST(NULL AS Variant)
checked expr   : try_to_variant<T0=NULL><T0>(NULL)
optimized expr : 0x2000000000000000
output type    : Variant NULL
output domain  : Undefined
output         : null


ast            : TRY_CAST(0 AS VARIANT)
raw expr       : TRY_CAST(0_u8 AS Variant)
checked expr   : try_to_variant<T0=UInt8><T0>(0_u8)
optimized expr : 0x200000002000000100
output type    : Variant NULL
output domain  : Undefined
output         : 0


ast            : TRY_CAST(-1 AS VARIANT)
raw expr       : TRY_CAST(minus(1_u8) AS Variant)
checked expr   : try_to_variant<T0=Int16><T0>(minus<UInt8>(1_u8))
optimized expr : 0x200000002000000240ff
output type    : Variant NULL
output domain  : Undefined
output         : -1


ast            : TRY_CAST(1.1 AS VARIANT)
raw expr       : TRY_CAST(1.1_f64 AS Variant)
checked expr   : try_to_variant<T0=Float64><T0>(1.1_f64)
optimized expr : 0x2000000020000009603ff199999999999a
output type    : Variant NULL
output domain  : Undefined
output         : 1.1


ast            : TRY_CAST('🍦 が美味しい' AS VARIANT)
raw expr       : TRY_CAST("🍦 が美味しい" AS Variant)
checked expr   : try_to_variant<T0=String><T0>("🍦 が美味しい")
optimized expr : 0x2000000010000014f09f8da620e3818ce7be8ee591b3e38197e38184
output type    : Variant NULL
output domain  : Undefined
output         : "🍦 が美味しい"


ast            : TRY_CAST([0, 1, 2] AS VARIANT)
raw expr       : TRY_CAST(array(0_u8, 1_u8, 2_u8) AS Variant)
checked expr   : try_to_variant<T0=Array(UInt8)><T0>(array<T0=UInt8><T0, T0, T0>(0_u8, 1_u8, 2_u8))
optimized expr : 0x800000032000000120000002200000020050015002
output type    : Variant NULL
output domain  : Undefined
output         : [0,1,2]


ast            : TRY_CAST([0, 'a'] AS VARIANT)
raw expr       : TRY_CAST(array(0_u8, "a") AS Variant)
checked expr   : try_to_variant<T0=Array(Variant)><T0>(array<T0=Variant><T0, T0>(CAST(0_u8 AS Variant), CAST("a" AS Variant)))
optimized expr : 0x8000000220000001100000010061
output type    : Variant NULL
output domain  : Undefined
output         : [0,"a"]


ast            : TRY_CAST(to_timestamp(1000000) AS VARIANT)
raw expr       : TRY_CAST(to_timestamp(1000000_u32) AS Variant)
checked expr   : try_to_variant<T0=Timestamp><T0>(to_timestamp<Int64>(CAST(1000000_u32 AS Int64)))
optimized expr : 0x200000001000001a313937302d30312d31322031333a34363a34302e303030303030
output type    : Variant NULL
output domain  : Undefined
output         : "1970-01-12 13:46:40.000000"


ast            : TRY_CAST(false AS VARIANT)
raw expr       : TRY_CAST(false AS Variant)
checked expr   : try_to_variant<T0=Boolean><T0>(false)
optimized expr : 0x2000000030000000
output type    : Variant NULL
output domain  : Undefined
output         : false


ast            : TRY_CAST(true AS VARIANT)
raw expr       : TRY_CAST(true AS Variant)
checked expr   : try_to_variant<T0=Boolean><T0>(true)
optimized expr : 0x2000000040000000
output type    : Variant NULL
output domain  : Undefined
output         : true


ast            : TRY_CAST(TRY_CAST('🍦 が美味しい' AS VARIANT) AS VARIANT)
raw expr       : TRY_CAST(TRY_CAST("🍦 が美味しい" AS Variant) AS Variant)
checked expr   : try_to_variant<T0=String><T0>("🍦 が美味しい")
optimized expr : 0x2000000010000014f09f8da620e3818ce7be8ee591b3e38197e38184
output type    : Variant NULL
output domain  : Undefined
output         : "🍦 が美味しい"


ast            : TRY_CAST(a AS VARIANT)
raw expr       : TRY_CAST(ColumnRef(0)::String NULL AS Variant)
checked expr   : try_to_variant<T0=String NULL><T0>(ColumnRef(0))
evaluation:
+--------+------------------------+--------------+
|        | a                      | Output       |
+--------+------------------------+--------------+
| Type   | String NULL            | Variant NULL |
| Domain | {"a"..="def"} ∪ {NULL} | Undefined    |
| Row 0  | "a"                    | "a"          |
| Row 1  | NULL                   | null         |
| Row 2  | "def"                  | "def"        |
+--------+------------------------+--------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                          |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | NullableColumn { column: StringColumn { data: 0x616263646566, offsets: [0, 1, 3, 6] }, validity: [0b_____101] }                                               |
| Output | NullableColumn { column: StringColumn { data: 0x20000000100000016120000000000000002000000010000003646566, offsets: [0, 9, 17, 28] }, validity: [0b_____111] } |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+


error: 
  --> SQL:1:1
  |
1 | CAST(-30610224000000001 AS TIMESTAMP)
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ timestamp `-30610224000000001` is out of range



ast            : CAST(-315360000000000 AS TIMESTAMP)
raw expr       : CAST(minus(315360000000000_u64) AS Timestamp)
checked expr   : to_timestamp<Int64>(minus<UInt64>(315360000000000_u64))
optimized expr : -315360000000000
output type    : Timestamp
output domain  : {-315360000000000..=-315360000000000}
output         : 1960-01-04 00:00:00.000000


ast            : CAST(-315360000000 AS TIMESTAMP)
raw expr       : CAST(minus(315360000000_u64) AS Timestamp)
checked expr   : to_timestamp<Int64>(minus<UInt64>(315360000000_u64))
optimized expr : -315360000000000
output type    : Timestamp
output domain  : {-315360000000000..=-315360000000000}
output         : 1960-01-04 00:00:00.000000


ast            : CAST(-100 AS TIMESTAMP)
raw expr       : CAST(minus(100_u8) AS Timestamp)
checked expr   : to_timestamp<Int64>(CAST(minus<UInt8>(100_u8) AS Int64))
optimized expr : -100000000
output type    : Timestamp
output domain  : {-100000000..=-100000000}
output         : 1969-12-31 23:58:20.000000


ast            : CAST(-0 AS TIMESTAMP)
raw expr       : CAST(minus(0_u8) AS Timestamp)
checked expr   : to_timestamp<Int64>(CAST(minus<UInt8>(0_u8) AS Int64))
optimized expr : 0
output type    : Timestamp
output domain  : {0..=0}
output         : 1970-01-01 00:00:00.000000


ast            : CAST(0 AS TIMESTAMP)
raw expr       : CAST(0_u8 AS Timestamp)
checked expr   : to_timestamp<Int64>(CAST(0_u8 AS Int64))
optimized expr : 0
output type    : Timestamp
output domain  : {0..=0}
output         : 1970-01-01 00:00:00.000000


ast            : CAST(100 AS TIMESTAMP)
raw expr       : CAST(100_u8 AS Timestamp)
checked expr   : to_timestamp<Int64>(CAST(100_u8 AS Int64))
optimized expr : 100000000
output type    : Timestamp
output domain  : {100000000..=100000000}
output         : 1970-01-01 00:01:40.000000


ast            : CAST(315360000000 AS TIMESTAMP)
raw expr       : CAST(315360000000_u64 AS Timestamp)
checked expr   : to_timestamp<Int64>(CAST(315360000000_u64 AS Int64))
optimized expr : 315360000000000
output type    : Timestamp
output domain  : {315360000000000..=315360000000000}
output         : 1979-12-30 00:00:00.000000


ast            : CAST(315360000000000 AS TIMESTAMP)
raw expr       : CAST(315360000000000_u64 AS Timestamp)
checked expr   : to_timestamp<Int64>(CAST(315360000000000_u64 AS Int64))
optimized expr : 315360000000000
output type    : Timestamp
output domain  : {315360000000000..=315360000000000}
output         : 1979-12-30 00:00:00.000000


error: 
  --> SQL:1:1
  |
1 | CAST(253402300800000000 AS TIMESTAMP)
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ timestamp `253402300800000000` is out of range



ast            : CAST(a AS TIMESTAMP)
raw expr       : CAST(ColumnRef(0)::Int64 AS Timestamp)
checked expr   : to_timestamp<Int64>(ColumnRef(0))
evaluation:
+--------+--------------------------------------+--------------------------------------+
|        | a                                    | Output                               |
+--------+--------------------------------------+--------------------------------------+
| Type   | Int64                                | Timestamp                            |
| Domain | {-315360000000000..=315360000000000} | {-315360000000000..=315360000000000} |
| Row 0  | -315360000000000                     | 1960-01-04 00:00:00.000000           |
| Row 1  | -315360000000                        | 1960-01-04 00:00:00.000000           |
| Row 2  | -100                                 | 1969-12-31 23:58:20.000000           |
| Row 3  | 0                                    | 1970-01-01 00:00:00.000000           |
| Row 4  | 100                                  | 1970-01-01 00:01:40.000000           |
| Row 5  | 315360000000                         | 1979-12-30 00:00:00.000000           |
| Row 6  | 315360000000000                      | 1979-12-30 00:00:00.000000           |
+--------+--------------------------------------+--------------------------------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------------------------+
| Column | Data                                                                                             |
+--------+--------------------------------------------------------------------------------------------------+
| a      | Int64([-315360000000000, -315360000000, -100, 0, 100, 315360000000, 315360000000000])            |
| Output | [-315360000000000, -315360000000000, -100000000, 0, 100000000, 315360000000000, 315360000000000] |
+--------+--------------------------------------------------------------------------------------------------+


ast            : TRY_CAST(-30610224000000001 AS TIMESTAMP)
raw expr       : TRY_CAST(minus(30610224000000001_u64) AS Timestamp)
checked expr   : try_to_timestamp<Int64 NULL>(CAST(minus<UInt64>(30610224000000001_u64) AS Int64 NULL))
optimized expr : NULL
output type    : Timestamp NULL
output domain  : Unknown
output         : NULL


ast            : TRY_CAST(253402300800000000 AS TIMESTAMP)
raw expr       : TRY_CAST(253402300800000000_u64 AS Timestamp)
checked expr   : try_to_timestamp<Int64 NULL>(CAST(253402300800000000_u64 AS Int64 NULL))
optimized expr : NULL
output type    : Timestamp NULL
output domain  : Unknown
output         : NULL


ast            : TRY_CAST(a AS TIMESTAMP)
raw expr       : TRY_CAST(ColumnRef(0)::Int64 AS Timestamp)
checked expr   : try_to_timestamp<Int64 NULL>(CAST(ColumnRef(0) AS Int64 NULL))
evaluation:
+--------+-------------------------------------------+----------------------------+
|        | a                                         | Output                     |
+--------+-------------------------------------------+----------------------------+
| Type   | Int64                                     | Timestamp NULL             |
| Domain | {-30610224000000001..=253402300800000000} | Unknown                    |
| Row 0  | -30610224000000001                        | NULL                       |
| Row 1  | -100                                      | 1969-12-31 23:58:20.000000 |
| Row 2  | 0                                         | 1970-01-01 00:00:00.000000 |
| Row 3  | 100                                       | 1970-01-01 00:01:40.000000 |
| Row 4  | 253402300800000000                        | NULL                       |
+--------+-------------------------------------------+----------------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------+
| Column | Data                                                                                |
+--------+-------------------------------------------------------------------------------------+
| a      | Int64([-30610224000000001, -100, 0, 100, 253402300800000000])                       |
| Output | NullableColumn { column: [0, -100000000, 0, 100000000, 0], validity: [0b___01110] } |
+--------+-------------------------------------------------------------------------------------+


ast            : CAST(TO_TIMESTAMP(-315360000000000) AS INT64)
raw expr       : CAST(TO_TIMESTAMP(minus(315360000000000_u64)) AS Int64)
checked expr   : to_int64<Timestamp>(to_timestamp<Int64>(minus<UInt64>(315360000000000_u64)))
optimized expr : -315360000000000_i64
output type    : Int64
output domain  : {-315360000000000..=-315360000000000}
output         : -315360000000000


ast            : CAST(TO_TIMESTAMP(-315360000000) AS INT64)
raw expr       : CAST(TO_TIMESTAMP(minus(315360000000_u64)) AS Int64)
checked expr   : to_int64<Timestamp>(to_timestamp<Int64>(minus<UInt64>(315360000000_u64)))
optimized expr : -315360000000000_i64
output type    : Int64
output domain  : {-315360000000000..=-315360000000000}
output         : -315360000000000


ast            : CAST(TO_TIMESTAMP(-100) AS INT64)
raw expr       : CAST(TO_TIMESTAMP(minus(100_u8)) AS Int64)
checked expr   : to_int64<Timestamp>(to_timestamp<Int64>(CAST(minus<UInt8>(100_u8) AS Int64)))
optimized expr : -100000000_i64
output type    : Int64
output domain  : {-100000000..=-100000000}
output         : -100000000


ast            : CAST(TO_TIMESTAMP(-0) AS INT64)
raw expr       : CAST(TO_TIMESTAMP(minus(0_u8)) AS Int64)
checked expr   : to_int64<Timestamp>(to_timestamp<Int64>(CAST(minus<UInt8>(0_u8) AS Int64)))
optimized expr : 0_i64
output type    : Int64
output domain  : {0..=0}
output         : 0


ast            : CAST(TO_TIMESTAMP(0) AS INT64)
raw expr       : CAST(TO_TIMESTAMP(0_u8) AS Int64)
checked expr   : to_int64<Timestamp>(to_timestamp<Int64>(CAST(0_u8 AS Int64)))
optimized expr : 0_i64
output type    : Int64
output domain  : {0..=0}
output         : 0


ast            : CAST(TO_TIMESTAMP(100) AS INT64)
raw expr       : CAST(TO_TIMESTAMP(100_u8) AS Int64)
checked expr   : to_int64<Timestamp>(to_timestamp<Int64>(CAST(100_u8 AS Int64)))
optimized expr : 100000000_i64
output type    : Int64
output domain  : {100000000..=100000000}
output         : 100000000


ast            : CAST(TO_TIMESTAMP(315360000000) AS INT64)
raw expr       : CAST(TO_TIMESTAMP(315360000000_u64) AS Int64)
checked expr   : to_int64<Timestamp>(to_timestamp<Int64>(CAST(315360000000_u64 AS Int64)))
optimized expr : 315360000000000_i64
output type    : Int64
output domain  : {315360000000000..=315360000000000}
output         : 315360000000000


ast            : CAST(TO_TIMESTAMP(315360000000000) AS INT64)
raw expr       : CAST(TO_TIMESTAMP(315360000000000_u64) AS Int64)
checked expr   : to_int64<Timestamp>(to_timestamp<Int64>(CAST(315360000000000_u64 AS Int64)))
optimized expr : 315360000000000_i64
output type    : Int64
output domain  : {315360000000000..=315360000000000}
output         : 315360000000000


ast            : CAST(a AS INT64)
raw expr       : CAST(ColumnRef(0)::Timestamp AS Int64)
checked expr   : to_int64<Timestamp>(ColumnRef(0))
evaluation:
+--------+--------------------------------------+--------------------------------------+
|        | a                                    | Output                               |
+--------+--------------------------------------+--------------------------------------+
| Type   | Timestamp                            | Int64                                |
| Domain | {-315360000000000..=315360000000000} | {-315360000000000..=315360000000000} |
| Row 0  | 1960-01-04 00:00:00.000000           | -315360000000000                     |
| Row 1  | 1969-12-28 08:24:00.000000           | -315360000000                        |
| Row 2  | 1969-12-31 23:59:59.999900           | -100                                 |
| Row 3  | 1970-01-01 00:00:00.000000           | 0                                    |
| Row 4  | 1970-01-01 00:00:00.000100           | 100                                  |
| Row 5  | 1970-01-04 15:36:00.000000           | 315360000000                         |
| Row 6  | 1979-12-30 00:00:00.000000           | 315360000000000                      |
+--------+--------------------------------------+--------------------------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------+
| Column | Data                                                                                  |
+--------+---------------------------------------------------------------------------------------+
| a      | [-315360000000000, -315360000000, -100, 0, 100, 315360000000, 315360000000000]        |
| Output | Int64([-315360000000000, -315360000000, -100, 0, 100, 315360000000, 315360000000000]) |
+--------+---------------------------------------------------------------------------------------+


error: 
  --> SQL:1:1
  |
1 | CAST(-354286 AS DATE)
  | ^^^^^^^^^^^^^^^^^^^^^ date `0999-12-31` is out of range



ast            : CAST(-354285 AS DATE)
raw expr       : CAST(minus(354285_u32) AS Date)
checked expr   : to_date<Int64>(minus<UInt32>(354285_u32))
optimized expr : -354285
output type    : Date
output domain  : {-354285..=-354285}
output         : 1000-01-01


ast            : CAST(-100 AS DATE)
raw expr       : CAST(minus(100_u8) AS Date)
checked expr   : to_date<Int64>(CAST(minus<UInt8>(100_u8) AS Int64))
optimized expr : -100
output type    : Date
output domain  : {-100..=-100}
output         : 1969-09-23


ast            : CAST(-0 AS DATE)
raw expr       : CAST(minus(0_u8) AS Date)
checked expr   : to_date<Int64>(CAST(minus<UInt8>(0_u8) AS Int64))
optimized expr : 0
output type    : Date
output domain  : {0..=0}
output         : 1970-01-01


ast            : CAST(0 AS DATE)
raw expr       : CAST(0_u8 AS Date)
checked expr   : to_date<Int64>(CAST(0_u8 AS Int64))
optimized expr : 0
output type    : Date
output domain  : {0..=0}
output         : 1970-01-01


ast            : CAST(100 AS DATE)
raw expr       : CAST(100_u8 AS Date)
checked expr   : to_date<Int64>(CAST(100_u8 AS Int64))
optimized expr : 100
output type    : Date
output domain  : {100..=100}
output         : 1970-04-11


ast            : CAST(2932896 AS DATE)
raw expr       : CAST(2932896_u32 AS Date)
checked expr   : to_date<Int64>(CAST(2932896_u32 AS Int64))
optimized expr : 2932896
output type    : Date
output domain  : {2932896..=2932896}
output         : 9999-12-31


error: 
  --> SQL:1:1
  |
1 | CAST(2932897 AS DATE)
  | ^^^^^^^^^^^^^^^^^^^^^ date `+10000-01-01` is out of range



ast            : CAST(a AS DATE)
raw expr       : CAST(ColumnRef(0)::Int32 AS Date)
checked expr   : to_date<Int64>(CAST(ColumnRef(0) AS Int64))
evaluation:
+--------+---------------------+---------------------+
|        | a                   | Output              |
+--------+---------------------+---------------------+
| Type   | Int32               | Date                |
| Domain | {-354285..=2932896} | {-354285..=2932896} |
| Row 0  | -354285             | 1000-01-01          |
| Row 1  | -100                | 1969-09-23          |
| Row 2  | 0                   | 1970-01-01          |
| Row 3  | 100                 | 1970-04-11          |
| Row 4  | 2932896             | 9999-12-31          |
+--------+---------------------+---------------------+
evaluation (internal):
+--------+-----------------------------------------+
| Column | Data                                    |
+--------+-----------------------------------------+
| a      | Int32([-354285, -100, 0, 100, 2932896]) |
| Output | [-354285, -100, 0, 100, 2932896]        |
+--------+-----------------------------------------+


ast            : TRY_CAST(-354286 AS DATE)
raw expr       : TRY_CAST(minus(354286_u32) AS Date)
checked expr   : try_to_date<Int64 NULL>(CAST(minus<UInt32>(354286_u32) AS Int64 NULL))
optimized expr : NULL
output type    : Date NULL
output domain  : Unknown
output         : NULL


ast            : TRY_CAST(2932897 AS DATE)
raw expr       : TRY_CAST(2932897_u32 AS Date)
checked expr   : try_to_date<Int64 NULL>(CAST(2932897_u32 AS Int64 NULL))
optimized expr : NULL
output type    : Date NULL
output domain  : Unknown
output         : NULL


ast            : TRY_CAST(a AS DATE)
raw expr       : TRY_CAST(ColumnRef(0)::Int32 AS Date)
checked expr   : try_to_date<Int64 NULL>(CAST(ColumnRef(0) AS Int64 NULL))
evaluation:
+--------+---------------------+------------+
|        | a                   | Output     |
+--------+---------------------+------------+
| Type   | Int32               | Date NULL  |
| Domain | {-354286..=2932897} | Unknown    |
| Row 0  | -354286             | NULL       |
| Row 1  | -100                | 1969-09-23 |
| Row 2  | 0                   | 1970-01-01 |
| Row 3  | 100                 | 1970-04-11 |
| Row 4  | 2932897             | NULL       |
+--------+---------------------+------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------+
| Column | Data                                                                    |
+--------+-------------------------------------------------------------------------+
| a      | Int32([-354286, -100, 0, 100, 2932897])                                 |
| Output | NullableColumn { column: [0, -100, 0, 100, 0], validity: [0b___01110] } |
+--------+-------------------------------------------------------------------------+


ast            : CAST(TO_DATE(-354285) AS INT64)
raw expr       : CAST(TO_DATE(minus(354285_u32)) AS Int64)
checked expr   : to_int64<Date>(to_date<Int64>(minus<UInt32>(354285_u32)))
optimized expr : -354285_i64
output type    : Int64
output domain  : {-354285..=-354285}
output         : -354285


ast            : CAST(TO_DATE(-100) AS INT64)
raw expr       : CAST(TO_DATE(minus(100_u8)) AS Int64)
checked expr   : to_int64<Date>(to_date<Int64>(CAST(minus<UInt8>(100_u8) AS Int64)))
optimized expr : -100_i64
output type    : Int64
output domain  : {-100..=-100}
output         : -100


ast            : CAST(TO_DATE(-0) AS INT64)
raw expr       : CAST(TO_DATE(minus(0_u8)) AS Int64)
checked expr   : to_int64<Date>(to_date<Int64>(CAST(minus<UInt8>(0_u8) AS Int64)))
optimized expr : 0_i64
output type    : Int64
output domain  : {0..=0}
output         : 0


ast            : CAST(TO_DATE(0) AS INT64)
raw expr       : CAST(TO_DATE(0_u8) AS Int64)
checked expr   : to_int64<Date>(to_date<Int64>(CAST(0_u8 AS Int64)))
optimized expr : 0_i64
output type    : Int64
output domain  : {0..=0}
output         : 0


ast            : CAST(TO_DATE(100) AS INT64)
raw expr       : CAST(TO_DATE(100_u8) AS Int64)
checked expr   : to_int64<Date>(to_date<Int64>(CAST(100_u8 AS Int64)))
optimized expr : 100_i64
output type    : Int64
output domain  : {100..=100}
output         : 100


ast            : CAST(TO_DATE(2932896) AS INT64)
raw expr       : CAST(TO_DATE(2932896_u32) AS Int64)
checked expr   : to_int64<Date>(to_date<Int64>(CAST(2932896_u32 AS Int64)))
optimized expr : 2932896_i64
output type    : Int64
output domain  : {2932896..=2932896}
output         : 2932896


ast            : CAST(a AS INT64)
raw expr       : CAST(ColumnRef(0)::Date AS Int64)
checked expr   : to_int64<Date>(ColumnRef(0))
evaluation:
+--------+---------------------+---------------------+
|        | a                   | Output              |
+--------+---------------------+---------------------+
| Type   | Date                | Int64               |
| Domain | {-354285..=2932896} | {-354285..=2932896} |
| Row 0  | 1000-01-01          | -354285             |
| Row 1  | 1969-09-23          | -100                |
| Row 2  | 1970-01-01          | 0                   |
| Row 3  | 1970-04-11          | 100                 |
| Row 4  | 9999-12-31          | 2932896             |
+--------+---------------------+---------------------+
evaluation (internal):
+--------+-----------------------------------------+
| Column | Data                                    |
+--------+-----------------------------------------+
| a      | [-354285, -100, 0, 100, 2932896]        |
| Output | Int64([-354285, -100, 0, 100, 2932896]) |
+--------+-----------------------------------------+


ast            : CAST(TO_DATE(1) AS TIMESTAMP)
raw expr       : CAST(TO_DATE(1_u8) AS Timestamp)
checked expr   : to_timestamp<Date>(to_date<Int64>(CAST(1_u8 AS Int64)))
optimized expr : 86400000000
output type    : Timestamp
output domain  : {86400000000..=86400000000}
output         : 1970-01-02 00:00:00.000000


ast            : CAST(TO_TIMESTAMP(1) AS DATE)
raw expr       : CAST(TO_TIMESTAMP(1_u8) AS Date)
checked expr   : to_date<Timestamp>(to_timestamp<Int64>(CAST(1_u8 AS Int64)))
optimized expr : 0
output type    : Date
output domain  : {0..=0}
output         : 1970-01-01


ast            : CAST(a AS DATE)
raw expr       : CAST(ColumnRef(0)::Timestamp AS Date)
checked expr   : to_date<Timestamp>(ColumnRef(0))
evaluation:
+--------+--------------------------------------+----------------+
|        | a                                    | Output         |
+--------+--------------------------------------+----------------+
| Type   | Timestamp                            | Date           |
| Domain | {-315360000000000..=315360000000000} | {-3650..=3650} |
| Row 0  | 1960-01-04 00:00:00.000000           | 1960-01-04     |
| Row 1  | 1969-12-28 08:24:00.000000           | 1969-12-29     |
| Row 2  | 1969-12-31 23:59:59.999900           | 1970-01-01     |
| Row 3  | 1970-01-01 00:00:00.000000           | 1970-01-01     |
| Row 4  | 1970-01-01 00:00:00.000100           | 1970-01-01     |
| Row 5  | 1970-01-04 15:36:00.000000           | 1970-01-04     |
| Row 6  | 1979-12-30 00:00:00.000000           | 1979-12-30     |
+--------+--------------------------------------+----------------+
evaluation (internal):
+--------+--------------------------------------------------------------------------------+
| Column | Data                                                                           |
+--------+--------------------------------------------------------------------------------+
| a      | [-315360000000000, -315360000000, -100, 0, 100, 315360000000, 315360000000000] |
| Output | [-3650, -3, 0, 0, 0, 3, 3650]                                                  |
+--------+--------------------------------------------------------------------------------+


ast            : CAST(a AS TIMESTAMP)
raw expr       : CAST(ColumnRef(0)::Date AS Timestamp)
checked expr   : to_timestamp<Date>(ColumnRef(0))
evaluation:
+--------+---------------------+-------------------------------------------+
|        | a                   | Output                                    |
+--------+---------------------+-------------------------------------------+
| Type   | Date                | Timestamp                                 |
| Domain | {-354285..=2932896} | {-30610224000000000..=253402214400000000} |
| Row 0  | 1000-01-01          | 1000-01-01 00:00:00.000000                |
| Row 1  | 1969-09-23          | 1969-09-23 00:00:00.000000                |
| Row 2  | 1970-01-01          | 1970-01-01 00:00:00.000000                |
| Row 3  | 1970-04-11          | 1970-04-11 00:00:00.000000                |
| Row 4  | 9999-12-31          | 9999-12-31 00:00:00.000000                |
+--------+---------------------+-------------------------------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------+
| Column | Data                                                                       |
+--------+----------------------------------------------------------------------------+
| a      | [-354285, -100, 0, 100, 2932896]                                           |
| Output | [-30610224000000000, -8640000000000, 0, 8640000000000, 253402214400000000] |
+--------+----------------------------------------------------------------------------+


ast            : CAST(TO_DATE(a) AS TIMESTAMP)
raw expr       : CAST(TO_DATE(ColumnRef(0)::Int32) AS Timestamp)
checked expr   : to_timestamp<Date>(to_date<Int64>(CAST(ColumnRef(0) AS Int64)))
evaluation:
+--------+---------------------+-------------------------------------------+
|        | a                   | Output                                    |
+--------+---------------------+-------------------------------------------+
| Type   | Int32               | Timestamp                                 |
| Domain | {-354285..=2932896} | {-30610224000000000..=253402214400000000} |
| Row 0  | -354285             | 1000-01-01 00:00:00.000000                |
| Row 1  | -100                | 1969-09-23 00:00:00.000000                |
| Row 2  | 0                   | 1970-01-01 00:00:00.000000                |
| Row 3  | 100                 | 1970-04-11 00:00:00.000000                |
| Row 4  | 2932896             | 9999-12-31 00:00:00.000000                |
+--------+---------------------+-------------------------------------------+
evaluation (internal):
+--------+----------------------------------------------------------------------------+
| Column | Data                                                                       |
+--------+----------------------------------------------------------------------------+
| a      | Int32([-354285, -100, 0, 100, 2932896])                                    |
| Output | [-30610224000000000, -8640000000000, 0, 8640000000000, 253402214400000000] |
+--------+----------------------------------------------------------------------------+


error: 
  --> SQL:1:1
  |
1 | TO_TIMESTAMP('2022')
  | ^^^^^^^^^^^^^^^^^^^^ unable to cast 2022 to TimestampType



error: 
  --> SQL:1:1
  |
1 | TO_TIMESTAMP('2022-01')
  | ^^^^^^^^^^^^^^^^^^^^^^^ unable to cast 2022-01 to TimestampType



ast            : TO_TIMESTAMP('2022-01-02')
raw expr       : TO_TIMESTAMP("2022-01-02")
checked expr   : to_timestamp<String>("2022-01-02")
optimized expr : 1641081600000000
output type    : Timestamp
output domain  : Unknown
output         : 2022-01-02 00:00:00.000000


error: 
  --> SQL:1:1
  |
1 | TO_TIMESTAMP('A NON-TIMESTMAP STR')
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unable to cast A NON-TIMESTMAP STR to TimestampType



ast            : TO_TIMESTAMP('2022-01-02T03:25:02.868894-07:00')
raw expr       : TO_TIMESTAMP("2022-01-02T03:25:02.868894-07:00")
checked expr   : to_timestamp<String>("2022-01-02T03:25:02.868894-07:00")
optimized expr : 1641119102868894
output type    : Timestamp
output domain  : Unknown
output         : 2022-01-02 10:25:02.868894


ast            : TO_TIMESTAMP('2022-01-02 02:00:11')
raw expr       : TO_TIMESTAMP("2022-01-02 02:00:11")
checked expr   : to_timestamp<String>("2022-01-02 02:00:11")
optimized expr : 1641088811000000
output type    : Timestamp
output domain  : Unknown
output         : 2022-01-02 02:00:11.000000


ast            : TO_TIMESTAMP('2022-01-02T02:00:22')
raw expr       : TO_TIMESTAMP("2022-01-02T02:00:22")
checked expr   : to_timestamp<String>("2022-01-02T02:00:22")
optimized expr : 1641088822000000
output type    : Timestamp
output domain  : Unknown
output         : 2022-01-02 02:00:22.000000


ast            : TO_TIMESTAMP('2022-01-02T01:12:00-07:00')
raw expr       : TO_TIMESTAMP("2022-01-02T01:12:00-07:00")
checked expr   : to_timestamp<String>("2022-01-02T01:12:00-07:00")
optimized expr : 1641111120000000
output type    : Timestamp
output domain  : Unknown
output         : 2022-01-02 08:12:00.000000


ast            : TO_TIMESTAMP('2022-01-02T01')
raw expr       : TO_TIMESTAMP("2022-01-02T01")
checked expr   : to_timestamp<String>("2022-01-02T01")
optimized expr : 1641085200000000
output type    : Timestamp
output domain  : Unknown
output         : 2022-01-02 01:00:00.000000


ast            : TO_TIMESTAMP(a)
raw expr       : TO_TIMESTAMP(ColumnRef(0)::String)
checked expr   : to_timestamp<String>(ColumnRef(0))
evaluation:
+--------+-----------------------------------------------------+----------------------------+
|        | a                                                   | Output                     |
+--------+-----------------------------------------------------+----------------------------+
| Type   | String                                              | Timestamp                  |
| Domain | {"2022-01-02"..="2022-01-02T03:25:02.868894-07:00"} | Unknown                    |
| Row 0  | "2022-01-02"                                        | 2022-01-02 00:00:00.000000 |
| Row 1  | "2022-01-02T03:25:02.868894-07:00"                  | 2022-01-02 10:25:02.868894 |
| Row 2  | "2022-01-02 02:00:11"                               | 2022-01-02 02:00:11.000000 |
| Row 3  | "2022-01-02T01:12:00-07:00"                         | 2022-01-02 08:12:00.000000 |
| Row 4  | "2022-01-02T01"                                     | 2022-01-02 01:00:00.000000 |
+--------+-----------------------------------------------------+----------------------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                              |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | StringColumn { data: 0x323032322d30312d3032323032322d30312d30325430333a32353a30322e3836383839342d30373a3030323032322d30312d30322030323a30303a3131323032322d30312d30325430313a31323a30302d30373a3030323032322d30312d3032543031, offsets: [0, 10, 42, 61, 86, 99] } |
| Output | [1641081600000000, 1641119102868894, 1641088811000000, 1641111120000000, 1641085200000000]                                                                                                                                                                        |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : TRY_CAST(a as TIMESTAMP)
raw expr       : TRY_CAST(ColumnRef(0)::String AS Timestamp)
checked expr   : try_to_timestamp<String NULL>(CAST(ColumnRef(0) AS String NULL))
evaluation:
+--------+------------------------------------+----------------------------------------------------+
|        | a                                  | Output                                             |
+--------+------------------------------------+----------------------------------------------------+
| Type   | String                             | Timestamp NULL                                     |
| Domain | {"2022"..="A NON-TIMESTAMP STR"}   | {-30610224000000000..=253402300799999999} ∪ {NULL} |
| Row 0  | "A NON-TIMESTAMP STR"              | NULL                                               |
| Row 1  | "2022"                             | NULL                                               |
| Row 2  | "2022-01"                          | NULL                                               |
| Row 3  | "2022-01-02"                       | 2022-01-02 00:00:00.000000                         |
| Row 4  | "2022-01-02T03:25:02.868894-07:00" | 2022-01-02 10:25:02.868894                         |
| Row 5  | "2022-01-02 02:00:11"              | 2022-01-02 02:00:11.000000                         |
| Row 6  | "2022-01-02T01:12:00-07:00"        | 2022-01-02 08:12:00.000000                         |
| Row 7  | "2022-01-02T01"                    | 2022-01-02 01:00:00.000000                         |
+--------+------------------------------------+----------------------------------------------------+
evaluation (internal):
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                                                        |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | StringColumn { data: 0x41204e4f4e2d54494d455354414d502053545232303232323032322d3031323032322d30312d3032323032322d30312d30325430333a32353a30322e3836383839342d30373a3030323032322d30312d30322030323a30303a3131323032322d30312d30325430313a31323a30302d30373a3030323032322d30312d3032543031, offsets: [0, 19, 23, 30, 40, 72, 91, 116, 129] } |
| Output | NullableColumn { column: [0, 0, 0, 1641081600000000, 1641119102868894, 1641088811000000, 1641111120000000, 1641085200000000], validity: [0b11111000] }                                                                                                                                                                                      |
+--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : CAST(TO_TIMESTAMP(-315360000000000) AS VARCHAR)
raw expr       : CAST(TO_TIMESTAMP(minus(315360000000000_u64)) AS String)
checked expr   : to_string<Timestamp>(to_timestamp<Int64>(minus<UInt64>(315360000000000_u64)))
optimized expr : "1960-01-04 00:00:00.000000"
output type    : String
output domain  : {""..}
output         : "1960-01-04 00:00:00.000000"


ast            : CAST(TO_TIMESTAMP(-315360000000) AS VARCHAR)
raw expr       : CAST(TO_TIMESTAMP(minus(315360000000_u64)) AS String)
checked expr   : to_string<Timestamp>(to_timestamp<Int64>(minus<UInt64>(315360000000_u64)))
optimized expr : "1960-01-04 00:00:00.000000"
output type    : String
output domain  : {""..}
output         : "1960-01-04 00:00:00.000000"


ast            : CAST(TO_TIMESTAMP(-100) AS VARCHAR)
raw expr       : CAST(TO_TIMESTAMP(minus(100_u8)) AS String)
checked expr   : to_string<Timestamp>(to_timestamp<Int64>(CAST(minus<UInt8>(100_u8) AS Int64)))
optimized expr : "1969-12-31 23:58:20.000000"
output type    : String
output domain  : {""..}
output         : "1969-12-31 23:58:20.000000"


ast            : CAST(TO_TIMESTAMP(-0) AS VARCHAR)
raw expr       : CAST(TO_TIMESTAMP(minus(0_u8)) AS String)
checked expr   : to_string<Timestamp>(to_timestamp<Int64>(CAST(minus<UInt8>(0_u8) AS Int64)))
optimized expr : "1970-01-01 00:00:00.000000"
output type    : String
output domain  : {""..}
output         : "1970-01-01 00:00:00.000000"


ast            : CAST(TO_TIMESTAMP(0) AS VARCHAR)
raw expr       : CAST(TO_TIMESTAMP(0_u8) AS String)
checked expr   : to_string<Timestamp>(to_timestamp<Int64>(CAST(0_u8 AS Int64)))
optimized expr : "1970-01-01 00:00:00.000000"
output type    : String
output domain  : {""..}
output         : "1970-01-01 00:00:00.000000"


ast            : CAST(TO_TIMESTAMP(100) AS VARCHAR)
raw expr       : CAST(TO_TIMESTAMP(100_u8) AS String)
checked expr   : to_string<Timestamp>(to_timestamp<Int64>(CAST(100_u8 AS Int64)))
optimized expr : "1970-01-01 00:01:40.000000"
output type    : String
output domain  : {""..}
output         : "1970-01-01 00:01:40.000000"


ast            : CAST(TO_TIMESTAMP(315360000000) AS VARCHAR)
raw expr       : CAST(TO_TIMESTAMP(315360000000_u64) AS String)
checked expr   : to_string<Timestamp>(to_timestamp<Int64>(CAST(315360000000_u64 AS Int64)))
optimized expr : "1979-12-30 00:00:00.000000"
output type    : String
output domain  : {""..}
output         : "1979-12-30 00:00:00.000000"


ast            : CAST(TO_TIMESTAMP(315360000000000) AS VARCHAR)
raw expr       : CAST(TO_TIMESTAMP(315360000000000_u64) AS String)
checked expr   : to_string<Timestamp>(to_timestamp<Int64>(CAST(315360000000000_u64 AS Int64)))
optimized expr : "1979-12-30 00:00:00.000000"
output type    : String
output domain  : {""..}
output         : "1979-12-30 00:00:00.000000"


ast            : CAST(a AS VARCHAR)
raw expr       : CAST(ColumnRef(0)::Timestamp AS String)
checked expr   : to_string<Timestamp>(ColumnRef(0))
evaluation:
+--------+--------------------------------------+------------------------------+
|        | a                                    | Output                       |
+--------+--------------------------------------+------------------------------+
| Type   | Timestamp                            | String                       |
| Domain | {-315360000000000..=315360000000000} | {""..}                       |
| Row 0  | 1960-01-04 00:00:00.000000           | "1960-01-04 00:00:00.000000" |
| Row 1  | 1969-12-28 08:24:00.000000           | "1969-12-28 08:24:00.000000" |
| Row 2  | 1969-12-31 23:59:59.999900           | "1969-12-31 23:59:59.999900" |
| Row 3  | 1970-01-01 00:00:00.000000           | "1970-01-01 00:00:00.000000" |
| Row 4  | 1970-01-01 00:00:00.000100           | "1970-01-01 00:00:00.000100" |
| Row 5  | 1970-01-04 15:36:00.000000           | "1970-01-04 15:36:00.000000" |
| Row 6  | 1979-12-30 00:00:00.000000           | "1979-12-30 00:00:00.000000" |
+--------+--------------------------------------+------------------------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                                                                                                                                                                |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | [-315360000000000, -315360000000, -100, 0, 100, 315360000000, 315360000000000]                                                                                                                                                                                                                                                                                                                                                                      |
| Output | StringColumn { data: 0x313936302d30312d30342030303a30303a30302e303030303030313936392d31322d32382030383a32343a30302e303030303030313936392d31322d33312032333a35393a35392e393939393030313937302d30312d30312030303a30303a30302e303030303030313937302d30312d30312030303a30303a30302e303030313030313937302d30312d30342031353a33363a30302e303030303030313937392d31322d33302030303a30303a30302e303030303030, offsets: [0, 26, 52, 78, 104, 130, 156, 182] } |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


error: 
  --> SQL:1:1
  |
1 | TO_DATE('2022')
  | ^^^^^^^^^^^^^^^ unable to cast 2022 to DateType



error: 
  --> SQL:1:1
  |
1 | TO_DATE('2022-01')
  | ^^^^^^^^^^^^^^^^^^ unable to cast 2022-01 to DateType



ast            : TO_DATE('2022-01-02')
raw expr       : TO_DATE("2022-01-02")
checked expr   : to_date<String>("2022-01-02")
optimized expr : 18994
output type    : Date
output domain  : Unknown
output         : 2022-01-02


error: 
  --> SQL:1:1
  |
1 | TO_DATE('A NON-DATE STR')
  | ^^^^^^^^^^^^^^^^^^^^^^^^^ unable to cast A NON-DATE STR to DateType



ast            : TO_DATE('2022-01-02T03:25:02.868894-07:00')
raw expr       : TO_DATE("2022-01-02T03:25:02.868894-07:00")
checked expr   : to_date<String>("2022-01-02T03:25:02.868894-07:00")
optimized expr : 18994
output type    : Date
output domain  : Unknown
output         : 2022-01-02


ast            : TO_DATE('2022-01-02 02:00:11')
raw expr       : TO_DATE("2022-01-02 02:00:11")
checked expr   : to_date<String>("2022-01-02 02:00:11")
optimized expr : 18994
output type    : Date
output domain  : Unknown
output         : 2022-01-02


ast            : TO_DATE('2022-01-02T02:00:22')
raw expr       : TO_DATE("2022-01-02T02:00:22")
checked expr   : to_date<String>("2022-01-02T02:00:22")
optimized expr : 18994
output type    : Date
output domain  : Unknown
output         : 2022-01-02


ast            : TO_DATE('2022-01-02T01:12:00-07:00')
raw expr       : TO_DATE("2022-01-02T01:12:00-07:00")
checked expr   : to_date<String>("2022-01-02T01:12:00-07:00")
optimized expr : 18994
output type    : Date
output domain  : Unknown
output         : 2022-01-02


ast            : TO_DATE('2022-01-02T01')
raw expr       : TO_DATE("2022-01-02T01")
checked expr   : to_date<String>("2022-01-02T01")
optimized expr : 18994
output type    : Date
output domain  : Unknown
output         : 2022-01-02


ast            : TO_DATE(a)
raw expr       : TO_DATE(ColumnRef(0)::String)
checked expr   : to_date<String>(ColumnRef(0))
evaluation:
+--------+-----------------------------------------------------+------------+
|        | a                                                   | Output     |
+--------+-----------------------------------------------------+------------+
| Type   | String                                              | Date       |
| Domain | {"2022-01-02"..="2022-01-02T03:25:02.868894-07:00"} | Unknown    |
| Row 0  | "2022-01-02"                                        | 2022-01-02 |
| Row 1  | "2022-01-02T03:25:02.868894-07:00"                  | 2022-01-02 |
| Row 2  | "2022-01-02 02:00:11"                               | 2022-01-02 |
| Row 3  | "2022-01-02T01:12:00-07:00"                         | 2022-01-02 |
| Row 4  | "2022-01-02T01"                                     | 2022-01-02 |
+--------+-----------------------------------------------------+------------+
evaluation (internal):
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                              |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | StringColumn { data: 0x323032322d30312d3032323032322d30312d30325430333a32353a30322e3836383839342d30373a3030323032322d30312d30322030323a30303a3131323032322d30312d30325430313a31323a30302d30373a3030323032322d30312d3032543031, offsets: [0, 10, 42, 61, 86, 99] } |
| Output | [18994, 18994, 18994, 18994, 18994]                                                                                                                                                                                                                               |
+--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : TRY_CAST(a as DATE)
raw expr       : TRY_CAST(ColumnRef(0)::String AS Date)
checked expr   : try_to_date<String NULL>(CAST(ColumnRef(0) AS String NULL))
evaluation:
+--------+------------------------------------+------------------------------+
|        | a                                  | Output                       |
+--------+------------------------------------+------------------------------+
| Type   | String                             | Date NULL                    |
| Domain | {"2022"..="A NON-DATE STR"}        | {-354285..=2932896} ∪ {NULL} |
| Row 0  | "A NON-DATE STR"                   | NULL                         |
| Row 1  | "2022"                             | NULL                         |
| Row 2  | "2022-01"                          | NULL                         |
| Row 3  | "2022-01-02"                       | 2022-01-02                   |
| Row 4  | "2022-01-02T03:25:02.868894-07:00" | 2022-01-02                   |
| Row 5  | "2022-01-02 02:00:11"              | 2022-01-02                   |
| Row 6  | "2022-01-02T01:12:00-07:00"        | 2022-01-02                   |
| Row 7  | "2022-01-02T01"                    | 2022-01-02                   |
+--------+------------------------------------+------------------------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                                                                                                                                                                                              |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | StringColumn { data: 0x41204e4f4e2d444154452053545232303232323032322d3031323032322d30312d3032323032322d30312d30325430333a32353a30322e3836383839342d30373a3030323032322d30312d30322030323a30303a3131323032322d30312d30325430313a31323a30302d30373a3030323032322d30312d3032543031, offsets: [0, 14, 18, 25, 35, 67, 86, 111, 124] } |
| Output | NullableColumn { column: [0, 0, 0, 18994, 18994, 18994, 18994, 18994], validity: [0b11111000] }                                                                                                                                                                                                                                   |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+


ast            : CAST(TO_DATE(-354285) AS VARCHAR)
raw expr       : CAST(TO_DATE(minus(354285_u32)) AS String)
checked expr   : to_string<Date>(to_date<Int64>(minus<UInt32>(354285_u32)))
optimized expr : "1000-01-01"
output type    : String
output domain  : {""..}
output         : "1000-01-01"


ast            : CAST(TO_DATE(-100) AS VARCHAR)
raw expr       : CAST(TO_DATE(minus(100_u8)) AS String)
checked expr   : to_string<Date>(to_date<Int64>(CAST(minus<UInt8>(100_u8) AS Int64)))
optimized expr : "1969-09-23"
output type    : String
output domain  : {""..}
output         : "1969-09-23"


ast            : CAST(TO_DATE(-0) AS VARCHAR)
raw expr       : CAST(TO_DATE(minus(0_u8)) AS String)
checked expr   : to_string<Date>(to_date<Int64>(CAST(minus<UInt8>(0_u8) AS Int64)))
optimized expr : "1970-01-01"
output type    : String
output domain  : {""..}
output         : "1970-01-01"


ast            : CAST(TO_DATE(0) AS VARCHAR)
raw expr       : CAST(TO_DATE(0_u8) AS String)
checked expr   : to_string<Date>(to_date<Int64>(CAST(0_u8 AS Int64)))
optimized expr : "1970-01-01"
output type    : String
output domain  : {""..}
output         : "1970-01-01"


ast            : CAST(TO_DATE(100) AS VARCHAR)
raw expr       : CAST(TO_DATE(100_u8) AS String)
checked expr   : to_string<Date>(to_date<Int64>(CAST(100_u8 AS Int64)))
optimized expr : "1970-04-11"
output type    : String
output domain  : {""..}
output         : "1970-04-11"


ast            : CAST(TO_DATE(2932896) AS VARCHAR)
raw expr       : CAST(TO_DATE(2932896_u32) AS String)
checked expr   : to_string<Date>(to_date<Int64>(CAST(2932896_u32 AS Int64)))
optimized expr : "9999-12-31"
output type    : String
output domain  : {""..}
output         : "9999-12-31"


ast            : CAST(a AS VARCHAR)
raw expr       : CAST(ColumnRef(0)::Date AS String)
checked expr   : to_string<Date>(ColumnRef(0))
evaluation:
+--------+---------------------+--------------+
|        | a                   | Output       |
+--------+---------------------+--------------+
| Type   | Date                | String       |
| Domain | {-354285..=2932896} | {""..}       |
| Row 0  | 1000-01-01          | "1000-01-01" |
| Row 1  | 1969-09-23          | "1969-09-23" |
| Row 2  | 1970-01-01          | "1970-01-01" |
| Row 3  | 1970-04-11          | "1970-04-11" |
| Row 4  | 9999-12-31          | "9999-12-31" |
+--------+---------------------+--------------+
evaluation (internal):
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Column | Data                                                                                                                                                            |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| a      | [-354285, -100, 0, 100, 2932896]                                                                                                                                |
| Output | StringColumn { data: 0x313030302d30312d3031313936392d30392d3233313937302d30312d3031313937302d30342d3131393939392d31322d3331, offsets: [0, 10, 20, 30, 40, 50] } |
+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+


