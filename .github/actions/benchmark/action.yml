name: "Benchmark"
description: "Run benchmark"
inputs:
  storage:
    description: "s3/fs"
    required: true
  dataset:
    description: "hits/tpch"
    required: true
  source:
    description: "pr/release"
    required: true
  source_id:
    description: "pr_id/release_tag"
    required: true
runs:
  using: "composite"
  steps:
    - name: Download artifact
      uses: ./.github/actions/artifact_download
      with:
        profile: release
        sha: ${{ github.sha }}
        target: x86_64-unknown-linux-gnu

    - name: Setup Databend Binary
      shell: bash
      run: |
        sudo cp ./target/release/databend-query /usr/local/bin/databend-query
        sudo cp ./target/release/databend-meta /usr/local/bin/databend-meta
        databend-query --version
        databend-meta --version

    - name: Setup BendSQL
      shell: bash
      run: |
        curl -fsSLo ./bendsql.tar.gz https://github.com/databendcloud/bendsql/releases/download/v0.3.5/bendsql-linux-amd64.tar.gz
        tar -xvzf ./bendsql.tar.gz
        chmod +x ./linux-amd64/bendsql
        sudo cp ./linux-amd64/bendsql /usr/local/bin/bendsql
        bendsql version

    - name: Install script dependencies
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y jq netcat bc

    - name: Run Benchmark
      working-directory: benchmark/clickbench
      env:
        BENCHMARK_ID: ${{ github.run_id }}
        BENCHMARK_STORAGE: ${{ inputs.storage }}
        BENCHMARK_DATASET: ${{ inputs.dataset }}
      shell: bash
      run: |
        ./benchmark.sh

    - name: Prepare Metadata
      working-directory: benchmark/clickbench
      shell: bash
      run: |
        case ${{ inputs.storage }} in
          s3)
            BENCHMARK_STORAGE="s3"
            ;;
          fs)
            BENCHMARK_STORAGE="gp3"
            ;;
          *)
            echo "Unspported benchmark storage: ${{ inputs.storage }}"
            exit 1
        esac

        case ${{ inputs.source }} in
          pr)
            BENCHMARK_SYSTEM="Databend(PR#${{ inputs.source_id }})"
            BENCHMARK_TYPE="PR"
            ;;
          release)
            BENCHMARK_SYSTEM="Databend(Release@${{ inputs.source_id }})"
            BENCHMARK_TYPE="Release"
            ;;
          *)
            echo "Unspported benchmark source: ${{ inputs.source }}"
            exit 1
        esac
        jq ".system = \"${BENCHMARK_SYSTEM}\"" <result.json >result.json.tmp && mv result.json.tmp result.json
        jq ".date = \"$(date -u +%Y-%m-%d)\"" <result.json >result.json.tmp && mv result.json.tmp result.json
        jq ".machine = \"c5.4xlarge,${BENCHMARK_STORAGE}\"" <result.json >result.json.tmp && mv result.json.tmp result.json
        jq ".cluster_size = 1" <result.json >result.json.tmp && mv result.json.tmp result.json
        jq ".comment = \"commit:${{ github.sha }}\"" <result.json >result.json.tmp && mv result.json.tmp result.json
        jq ".tags = [\"${BENCHMARK_TYPE}\", \"${BENCHMARK_STORAGE}\"]" <result.json >result.json.tmp && mv result.json.tmp result.json
        jq ".extra.${{ inputs.source }} = \"${{ inputs.source_id }}\"" <result.json >result.json.tmp && mv result.json.tmp result.json
        mv result.json result-${{ inputs.dataset }}-${{ inputs.storage }}.json

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-${{ inputs.dataset }}-${{ inputs.storage }}
        path: benchmark/clickbench/result-${{ inputs.dataset }}-${{ inputs.storage }}.json

    - name: Clean test data
      working-directory: benchmark/clickbench
      if: always()
      shell: bash
      run: |
        bendsql query <"${{ inputs.dataset }}/clear.sql"
