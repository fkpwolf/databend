name: Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "website/**"
      - "**.md"
      - "scripts/setup/**"
      - ".devcontainer/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  BUILD_PROFILE: release

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/check
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build_macos:
    runs-on: macos-11
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/build_macos
        with:
          target: ${{ matrix.target }}

  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/build_linux
        with:
          target: ${{ matrix.target }}

  build_hive:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build_linux
        with:
          target: x86_64-unknown-linux-gnu
          artifacts: meta,query
          features: hive

  test_unit:
    runs-on: [self-hosted, X64, Linux, 8c16g]
    env:
      RUNNER_PROVIDER: aws
    steps:
      - uses: actions/checkout@v3
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/test_unit
        timeout-minutes: 30

  test_stateless_standalone_linux:
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test_stateless_standalone_linux
        timeout-minutes: 30

  # test_stateless_standalone_macos:
  #   runs-on: macos-11
  #   needs: build_macos
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/test_stateless_standalone_macos

  test_stateless_cluster_linux:
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test_stateless_cluster_linux
        timeout-minutes: 30

  test_stateless_cluster_macos:
    runs-on: macos-11
    needs: build_macos
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test_stateless_cluster_macos
        timeout-minutes: 30

  test_stateful_standalone_linux:
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test_stateful_standalone_linux
        timeout-minutes: 20
      - name: Upload failure
        if: failure() || cancelled()
        uses: ./.github/actions/artifact_failure
        with:
          name: test-stateful-standalone-linux

  test_stateful_cluster_linux:
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test_stateful_cluster_linux
        timeout-minutes: 20
      - name: Upload failure
        if: failure() || cancelled()
        uses: ./.github/actions/artifact_failure
        with:
          name: test-stateful-cluster-linux

  test_sqllogic_standalone_macos:
    runs-on: macos-11
    needs: build_macos
    strategy:
      matrix:
        dirs:
          - "base"
          - "ydb"
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test_sqllogic_standalone_macos
        timeout-minutes: 20
        with:
          dirs: ${{ matrix.dirs }}

  test_sqllogic_standalone_linux:
    runs-on: ubuntu-latest
    needs: build_linux
    name: test_sqllogic_${{ matrix.handlers }}_${{ matrix.dirs }}_standalone_linux
    strategy:
      matrix:
        dirs:
          - "base"
          - "query"
          - "ydb"
          - "standalone"
          - "crdb"
          - "duckdb"
        handlers:
          - "mysql"
          - "http"
          - "clickhouse"
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test_sqllogic_standalone_linux
        timeout-minutes: 20
        with:
          dirs: ${{ matrix.dirs }}
          handlers: ${{ matrix.handlers }}

  test_ee_standalone:
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test_ee_standalone_linux
        timeout-minutes: 20
        env:
          DATABEND_ENTERPRISE_LICENSE: ${{ secrets.DATABEND_ENTERPRISE_LICENSE }}
          SKIP_EE_TESTS: false

      - name: Upload failure
        if: failure() || cancelled()
        uses: ./.github/actions/artifact_failure
        with:
          name: test-stateful-standalone-linux
