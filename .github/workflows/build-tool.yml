name: Build Tool

on:
  push:
    branches:
      - main
    paths:
      - "scripts/setup/**"
      - "docker/build-tool/**"

permissions:
  id-token: write
  contents: read

jobs:
  base:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup_docker
        id: login
        with:
          repo: build-tool
          ecr_role_arn: ${{ secrets.ECR_ROLE_ARN }}
          dockerhub_user: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get rust toolchain version
        id: toolchain
        run: |
          version=$(awk -F'[ ="]+' '$1 == "channel" { print $2 }' scripts/setup/rust-toolchain.toml)
          echo "TOOLCHAIN=${version}" >> $GITHUB_OUTPUT

      - name: Build and publish databend build base image
        uses: docker/build-push-action@v3
        with:
          pull: true
          push: true
          tags: |
            ${{ steps.login.outputs.dockerhub_repo }}:base
            ${{ steps.login.outputs.dockerhub_repo }}:base-${{ steps.toolchain.outputs.TOOLCHAIN }}
            ${{ steps.login.outputs.ecr_repo }}:base
            ${{ steps.login.outputs.ecr_repo }}:base-${{ steps.toolchain.outputs.TOOLCHAIN }}
          context: ./scripts/setup
          file: ./docker/build-tool/base/Dockerfile

  build:
    runs-on: ubuntu-latest
    needs: base
    strategy:
      matrix:
        arch:
          - x86_64
          - aarch64
        libc:
          - gnu
          - musl
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup_docker
        id: login
        with:
          repo: build-tool
          ecr_role_arn: ${{ secrets.ECR_ROLE_ARN }}
          dockerhub_user: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get rust toolchain version
        id: toolchain
        run: |
          # version=$(taplo get -f scripts/setup/rust-toolchain.toml '.toolchain.channel')
          version=$(awk -F'[ ="]+' '$1 == "channel" { print $2 }' scripts/setup/rust-toolchain.toml)
          echo "TOOLCHAIN=${version}" >> $GITHUB_OUTPUT

      - name: Build and publish databend build image
        uses: docker/build-push-action@v3
        with:
          pull: true
          push: true
          tags: |
            ${{ steps.login.outputs.dockerhub_repo }}:${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}
            ${{ steps.login.outputs.dockerhub_repo }}:${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}-${{ steps.toolchain.outputs.TOOLCHAIN }}
            ${{ steps.login.outputs.ecr_repo }}:${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}
            ${{ steps.login.outputs.ecr_repo }}:${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}-${{ steps.toolchain.outputs.TOOLCHAIN }}
          context: ./docker/build-tool/${{ matrix.libc }}/
          file: ./docker/build-tool/${{ matrix.libc }}/Dockerfile
          build-args: |
            ARCH=${{ matrix.arch }}
            RUST_TOOLCHAIN=${{ steps.toolchain.outputs.TOOLCHAIN }}

  dev:
    runs-on: ubuntu-latest
    needs: base
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup_docker
        id: login
        with:
          repo: build-tool
          ecr_role_arn: ${{ secrets.ECR_ROLE_ARN }}
          dockerhub_user: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get rust toolchain version
        id: toolchain
        run: |
          version=$(awk -F'[ ="]+' '$1 == "channel" { print $2 }' scripts/setup/rust-toolchain.toml)
          echo "TOOLCHAIN=${version}" >> $GITHUB_OUTPUT

      - name: Build and publish databend build base image
        uses: docker/build-push-action@v3
        with:
          pull: true
          push: true
          tags: |
            ${{ steps.login.outputs.dockerhub_repo }}:dev
            ${{ steps.login.outputs.dockerhub_repo }}:dev-${{ steps.toolchain.outputs.TOOLCHAIN }}
            ${{ steps.login.outputs.ecr_repo }}:dev
            ${{ steps.login.outputs.ecr_repo }}:dev-${{ steps.toolchain.outputs.TOOLCHAIN }}
          context: ./scripts/setup
          file: ./docker/build-tool/dev/Dockerfile
          build-args: |
            RUST_TOOLCHAIN=${{ steps.toolchain.outputs.TOOLCHAIN }}
